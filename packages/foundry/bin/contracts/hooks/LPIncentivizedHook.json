{
    "contractName": "LPIncentivizedHook",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "contract IVault",
                    "name": "vault",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "allowedFactory",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lpRWD",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "trustedRouter",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "bool",
                            "name": "amountBaseLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "timeBaseLiquidity",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct LPIncentivizedHook.LPIncentiveFactor",
                    "name": "_lpIncentiveFactor",
                    "type": "tuple"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "SenderIsNotVault",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "hooksContract",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "factory",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "pool",
                    "type": "address"
                }
            ],
            "name": "LPIncentivizedHookRegistered",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "LPAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "reward",
                    "type": "uint256"
                }
            ],
            "name": "RewardDistributed",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "activeAmountBaseLiquidityParameters",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "mediumLiquidityAmountTrigger",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "higherLiquidityAmountTrigger",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "mediumLiquidityAmountRewardFee",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "higherLiquidityAmountRewardFee",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "activeIncentiveFactor",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "amountBaseLiquidity",
                    "type": "bool"
                },
                {
                    "internalType": "bool",
                    "name": "timeBaseLiquidity",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "activeTimeBaseLiquidityParameters",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "mediumLiquidityTimeTrigger",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "higherLiquidityTimeTrigger",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "mediumLiquidityTimeRewardFee",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "higherLiquidityTimeRewardFee",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getHookFlags",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "bool",
                            "name": "enableHookAdjustedAmounts",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallBeforeInitialize",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallAfterInitialize",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallComputeDynamicSwapFee",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallBeforeSwap",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallAfterSwap",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallBeforeAddLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallAfterAddLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallBeforeRemoveLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallAfterRemoveLiquidity",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct HookFlags",
                    "name": "hookFlags",
                    "type": "tuple"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "lpInfos",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "totalLiquidity",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "liquidityStartTime",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "rewards",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "router",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "pool",
                    "type": "address"
                },
                {
                    "internalType": "enum AddLiquidityKind",
                    "name": "kind",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256[]",
                    "name": "amountsInScaled18",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "amountsInRaw",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256",
                    "name": "bptAmountOut",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256[]",
                    "name": "balancesScaled18",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "userData",
                    "type": "bytes"
                }
            ],
            "name": "onAfterAddLiquidity",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                },
                {
                    "internalType": "uint256[]",
                    "name": "hookAdjustedAmountsInRaw",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onAfterInitialize",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "enum RemoveLiquidityKind",
                    "name": "",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "amountsOutRaw",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onAfterRemoveLiquidity",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "enum SwapKind",
                            "name": "kind",
                            "type": "uint8"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "tokenIn",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "tokenOut",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountInScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountOutScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "tokenInBalanceScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "tokenOutBalanceScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountCalculatedScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountCalculatedRaw",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "pool",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "userData",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct AfterSwapParams",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "name": "onAfterSwap",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "enum AddLiquidityKind",
                    "name": "",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onBeforeAddLiquidity",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onBeforeInitialize",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "enum RemoveLiquidityKind",
                    "name": "",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onBeforeRemoveLiquidity",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "enum SwapKind",
                            "name": "kind",
                            "type": "uint8"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountGivenScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "balancesScaled18",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256",
                            "name": "indexIn",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "indexOut",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "userData",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct PoolSwapParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "onBeforeSwap",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "enum SwapKind",
                            "name": "kind",
                            "type": "uint8"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountGivenScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "balancesScaled18",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256",
                            "name": "indexIn",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "indexOut",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "userData",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct PoolSwapParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "onComputeDynamicSwapFeePercentage",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "factory",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "pool",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "enum TokenType",
                            "name": "tokenType",
                            "type": "uint8"
                        },
                        {
                            "internalType": "contract IRateProvider",
                            "name": "rateProvider",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "paysYieldFees",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct TokenConfig[]",
                    "name": "",
                    "type": "tuple[]"
                },
                {
                    "components": [
                        {
                            "internalType": "bool",
                            "name": "disableUnbalancedLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "enableAddLiquidityCustom",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "enableRemoveLiquidityCustom",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "enableDonation",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct LiquidityManagement",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "name": "onRegister",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "mediumLiquidityAmountTrigger",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "higherLiquidityAmountTrigger",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "mediumLiquidityAmountRewardFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "higherLiquidityAmountRewardFee",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct LPIncentivizedHook.AmountBaseLiquidityParameters",
                    "name": "_amountBaseLiquidityParameters",
                    "type": "tuple"
                }
            ],
            "name": "setAmountBaseLiquidityParameters",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "mediumLiquidityTimeTrigger",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "higherLiquidityTimeTrigger",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "mediumLiquidityTimeRewardFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "higherLiquidityTimeRewardFee",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct LPIncentivizedHook.TimeBaseLiquidityParameters",
                    "name": "_timeBaseLiquidityParameters",
                    "type": "tuple"
                }
            ],
            "name": "setTimeBaseLiquidityParameters",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allowedFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpRWD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trustedRouter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"amountBaseLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"timeBaseLiquidity\",\"type\":\"bool\"}],\"internalType\":\"struct LPIncentivizedHook.LPIncentiveFactor\",\"name\":\"_lpIncentiveFactor\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"LPIncentivizedHookRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"LPAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activeAmountBaseLiquidityParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mediumLiquidityAmountTrigger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"higherLiquidityAmountTrigger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumLiquidityAmountRewardFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"higherLiquidityAmountRewardFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeIncentiveFactor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"amountBaseLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"timeBaseLiquidity\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeTimeBaseLiquidityParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mediumLiquidityTimeTrigger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"higherLiquidityTimeTrigger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumLiquidityTimeRewardFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"higherLiquidityTimeRewardFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookFlags\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"}],\"internalType\":\"struct HookFlags\",\"name\":\"hookFlags\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lpInfos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onAfterAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"hookAdjustedAmountsInRaw\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AfterSwapParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"onAfterSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onBeforeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"onComputeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"onRegister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"mediumLiquidityAmountTrigger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"higherLiquidityAmountTrigger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumLiquidityAmountRewardFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"higherLiquidityAmountRewardFee\",\"type\":\"uint256\"}],\"internalType\":\"struct LPIncentivizedHook.AmountBaseLiquidityParameters\",\"name\":\"_amountBaseLiquidityParameters\",\"type\":\"tuple\"}],\"name\":\"setAmountBaseLiquidityParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"mediumLiquidityTimeTrigger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"higherLiquidityTimeTrigger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumLiquidityTimeRewardFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"higherLiquidityTimeRewardFee\",\"type\":\"uint256\"}],\"internalType\":\"struct LPIncentivizedHook.TimeBaseLiquidityParameters\",\"name\":\"_timeBaseLiquidityParameters\",\"type\":\"tuple\"}],\"name\":\"setTimeBaseLiquidityParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Uses to reward Liquidity Providers (LPs) based on multiple factors\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}]},\"events\":{\"LPIncentivizedHookRegistered(address,address,address)\":{\"details\":\"If the registration fails the call will revert, so there will be no event.\",\"params\":{\"factory\":\"The factory (must be the allowed factory, or the call will revert)\",\"hooksContract\":\"This contract\",\"pool\":\"The pool on which the hook was registered\"}},\"RewardDistributed(address,uint256)\":{\"details\":\"Event if rewards distributed successfully.\",\"params\":{\"LPAddress\":\"Liquidity provider address\",\"reward\":\"Earn rewards\"}}},\"kind\":\"dev\",\"methods\":{\"getHookFlags()\":{\"details\":\"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \\\"mandatory\\\" hook.\",\"returns\":{\"hookFlags\":\"Flags indicating which hooks the contract supports\"}},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsInRaw\":\"Actual amounts of tokens added, sorted in token registration order\",\"amountsInScaled18\":\"Actual amounts of tokens added, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountOut\":\"Amount of pool tokens minted\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"hookAdjustedAmountsInRaw\":\"New amountsInRaw, potentially modified by the hook\",\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"details\":\"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"bptAmountOut\":\"Amount of pool tokens minted during initialization\",\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool accepts the initialization results\"}},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsOutRaw\":\"Actual amount of tokens to receive, sorted in token registration order\",\"amountsOutScaled18\":\"Scaled amount of tokens to receive, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountIn\":\"Amount of pool tokens to burn\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsOutRaw, potentially modified by the hook\"}},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"details\":\"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see above for struct definition)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amount calculated, potentially modified by the hook\"}},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"maxAmountsInScaled18\":\"Maximum amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Pool address, used to fetch pool information from the vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeInitialize(uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool wishes to proceed with initialization\"}},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"maxBptAmountIn\":\"Maximum amount of input pool tokens\",\"minAmountsOutScaled18\":\"Minimum output amounts, sorted in token registration order\",\"pool\":\"Pool address, used to fetch pool information from the vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"details\":\"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the vault (poolData, token config, etc.)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"details\":\"Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the vault (poolData, token config, etc.)\",\"staticSwapFeePercentage\":\"18-decimal FP value of the static swap fee percentage, for reference\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"Value of the swap fee percentage, as an 18-decimal FP value\"}},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"details\":\"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.\",\"params\":{\"factory\":\"Address of the pool factory (contract deploying the pool)\",\"liquidityManagement\":\"Liquidity management flags indicating which functions are enabled\",\"pool\":\"Address of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"},\"returns\":{\"_0\":\"success True if the hook allowed the registration, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAmountBaseLiquidityParameters((uint256,uint256,uint256,uint256))\":{\"details\":\"Sets the Amount based liquidity rewards parameters for the hook This function must be permissioned.\",\"params\":{\"_amountBaseLiquidityParameters\":\"The amount base liquidity parameters\"}},\"setTimeBaseLiquidityParameters((uint256,uint256,uint256,uint256))\":{\"details\":\"Sets the Time based liquidity rewards parameters for the hook This function must be permissioned.\",\"params\":{\"_timeBaseLiquidityParameters\":\"The time base liquidity parameters\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}]},\"events\":{\"LPIncentivizedHookRegistered(address,address,address)\":{\"notice\":\"A new `LPIncentivizedHook` contract has been registered successfully.\"}},\"kind\":\"user\",\"methods\":{\"getHookFlags()\":{\"notice\":\"Return the set of hooks implemented by the contract.\"},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed after adding liquidity.\"},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"notice\":\"Hook to be executed after pool initialization.\"},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed after removing liquidity.\"},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"notice\":\"Called after a swap to perform further actions once the balances have been updated by the swap.\"},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed before adding liquidity.\"},\"onBeforeInitialize(uint256[],bytes)\":{\"notice\":\"Hook executed before pool initialization.\"},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed before removing liquidity.\"},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"notice\":\"Called before a swap to give the Pool an opportunity to perform actions.\"},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"notice\":\"Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees.\"},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"notice\":\"Hook executed when a pool is registered with a non-zero hooks contract.\"}},\"notice\":\"Hook that gives a swap fee discount to lpRWD holders.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/contracts/hooks/LPIncentivizedHook.sol\":\"LPIncentivizedHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/contracts/hooks/LPIncentivizedHook.sol\":{\"keccak256\":\"0x39c966b2eb8a0842a73895b1f60da2286cb43c3f9e38e2616f8372b96ef6e829\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49dfe918e98768a8a6f123e36bfc5933bf5b29ade67ccf65621455d68036e6b3\",\"dweb:/ipfs/QmZyAd5seZA3Dwo1YvZeVAzaHHFjrN4yucGfS45wgjPbjB\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x242bb9517abafa97600ddb4a61a50113259a313beef1e9a51e0941654f722e34\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6d1b2ebcb7afb0e1b2c05fb4c19ad48dbd305de94fc6b54f9c7d3255581c709c\",\"dweb:/ipfs/QmdZtEgAiYJJZofmczbcMxCY2snCTFyY8JqnviLxSbRYYM\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol\":{\"keccak256\":\"0x5befdf642753e22773827eb85e48802e6868f2c804c8557a6f297b8264e7af73\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5fd34de490998e8fe68c5e09f5cd4d3b7774ca04c6878e8ac60c4a3c86660c21\",\"dweb:/ipfs/QmTMpju1CKwSgosoHPb3shdSBFwd4JSJmLLQX5iPubJvAw\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x171936e0299419425d04ed4bf2ddd479c86dda7c814938bbdec810d8bd62ff97\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3e98dee34d318307afceaa01aa944c520e7c6d67a0b8a8dd40a98872b8664332\",\"dweb:/ipfs/QmUzaAeAsmk2GnbRYaRU2aYCfxgM944KBMBU8X9FrS5DyQ\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol\":{\"keccak256\":\"0xe21b1175ef7852ffa523256f332eea07c0df9a7523ecad9055d3995601d8eb9a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://850d318622138965338981ee5de357ba4f3ad6bbda89c7cf7c83ac438796eab4\",\"dweb:/ipfs/QmRvdXGJVgLtectd3N2uSBCDa7kkXrRgfptkmz51Gjcsh4\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol\":{\"keccak256\":\"0x8516506be7cea682236ecfe5b1e645cb6172f5db6f4e3b494475f32ce668fe0d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://45a81f6506cf4f70c550546df04645d266c547df4bab9257968ccbaabdeca6ce\",\"dweb:/ipfs/QmcWg4u85ecPLo7HtxwAyHs5ZQuaBfEBEH8LUE7tzXNoxC\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol\":{\"keccak256\":\"0x00119343ebd90e82f688761f0a89cc2de16f94620e97d4252956925e4a092d2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://eccca5ac47ef29645398262d1057fa12b109a7024f8e6781f4cb30b9c587ff73\",\"dweb:/ipfs/QmbtTTh3T5Y4PMi1P2pNCcLuwzovDTuXpP8j6u78ucVPDX\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol\":{\"keccak256\":\"0x9ea0802f7ed57459bec19372217cc8dca3dbe3e634b0efba5f3bffce0576e221\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ecfd2f7af8d0eab220cdf69651986b348826a8bf6421c8b35f49fd749847912f\",\"dweb:/ipfs/QmYFJqqRVB98NPcCXofhY2o3HX8xiCvuFeu1fJWoeYQWTz\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0xa7fe094318e1a24a9682514d5481470d8c7d1729f2f7d20d996dfda3bf526772\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d3769baa918926875cc039829c6cf4943d45c224db92115245e80404181b1714\",\"dweb:/ipfs/QmNNzEwucGDnsf175Uh6fGyNkhEXcnV1KqKrWVx2BQRLFF\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol\":{\"keccak256\":\"0xca426463580cc5d3f63c3668d3fee043d63cd3d36d0f58672a90137e32d6f3d5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://184dd54753656914095ec0fdcb2a283e747f61fa002f8df4438825094e4fe7d4\",\"dweb:/ipfs/QmXmBFQLSTRHgg91DHU26hoKsUW2TqAaGMXhRn8xnaAqaS\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol\":{\"keccak256\":\"0x6b42f007c9569222e401e01664a5e5e1fcdeff5691dbb87e66b8090eb5346ebe\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7e9b406c1ae5610fb71d35add4a1cca97ed53c9da8f9028e7378cc711db4da55\",\"dweb:/ipfs/QmdLE8sGepxLZMyGTv7XiZqbxyah1Zgm5nzR3K91aE1jEm\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol\":{\"keccak256\":\"0x0c3f479268d65b1f60602d92fded8b266d10dec41b542891cdfa3e766f414720\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ab15fd9967aa0aeabc6d6fb5722fa71573477a14a7047db171f3501260dbfb4e\",\"dweb:/ipfs/QmQRD4nvAwtAZLNoqSM2qMU6V9LZ3jCg6ubCwH8NXiyfrR\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol\":{\"keccak256\":\"0x7dcd402e3febc53826582a111b8b5c018a8f2dd378d309947344eece77bb1907\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://46df1078615cc7cef755c9af7ead5c86a67cf1381514fd23e7a157ac5e91d419\",\"dweb:/ipfs/QmQfvYhNu71mbfR4ZpmRHutCfurLhYbmz3ppBh7xo19hNy\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol\":{\"keccak256\":\"0xc5e0d7745ce4f09d8b153294ac18129247f3749374a6596452f6b91d0d3bec15\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://de0c1288bd131445110084ed4f925df8c6a3b87edc7ab2139138f18395392618\",\"dweb:/ipfs/QmNQP65fHc5fy3jH1yDyJC3nr9yGBPW25J23PhqXWbbPay\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol\":{\"keccak256\":\"0x7a31c7d6a91a8a561f347cc33746c810e7ca927767f39770fc1570dcbe2a49d3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8809c9e3eca81b6a1ca50db855df181ca2ebc46d8580b450c7e114d1d1e402\",\"dweb:/ipfs/QmNdX8WLFLMQLxxaopTyGHUBqoiA61cVdr63ajJWxhtu9g\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol\":{\"keccak256\":\"0x88037c44e04e0f23b63e64d5128c2f3898feab51439db807ab91f3e1805315dd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://21de8416c9391642ad88d1453aea42eb0d71c97a77f9e7f0a3fd37d4ee4591c8\",\"dweb:/ipfs/QmTPCXbnBYp8JydU2Y665Bs3BWms8kZydWYzmLiNmRhJkR\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol\":{\"keccak256\":\"0x09305dcf7ae512906248a3696137422d3d36e72465660e372cd4fd64d13117ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://21d564eee4c8e31216cf6542ac925daac7659fbf8a33129e13d33f277c5efc8e\",\"dweb:/ipfs/QmRqXAqYeygYbT2qXUjZdUF8bzvmCrmqECRGcUzrUMBRf6\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0xf3fcf2f2a0e47f544383abd83b229980d3b6046966618ea4e2b3cc933a9f3ffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://727fa879fa42ec80678d45ee04b8cc29885fad0072db7b3fd6868788f157f66f\",\"dweb:/ipfs/QmZCaJubFPGNgaWazEezLzsefM1XEGQjStJMGKUtpJXy6E\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0xeb7200ec49f3ea7e11b33794136c20ef2d891ccadaa71076f88e260c3598c018\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41577fbfd33a0aeef565f8d15ce93096eacd45c139cc492dbe2b178e6623b820\",\"dweb:/ipfs/QmQJqhQXyNKxYXozYn57LLcXvcPkkb1ZF8qiZFfkZ93EdL\"]},\"e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0x4e636cd794e7d55aa94f4f41799ced22734f29a1299c77679dabe01fcdb9729b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a72d61d25dcaed4a41f18733186fb498e04d178a9da7948a07c1888c44edbac9\",\"dweb:/ipfs/QmTDm4CFGZVNsp2Lweh3hnBj6kaU8hRxeZaVbH96ov4Aqg\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "",
    "sourceMap": "1684:8575:0:-:0;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;;1684:8575:0;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;547:14:16;4554:10:0;1311:26:17;1307:97;;-1:-1:-1;1684:8575:0;;4554:10;-1:-1:-1;;;;;;1684:8575:0;;;;;;;;;;4554:10;;-1:-1:-1;;;;;1684:8575:0;;3149:40:17;;-1:-1:-1;3149:40:17;1684:8575:0;4577:32;1684:8575;4620:30;1684:8575;;;;;;4661:22;;1684:8575;;;;;;4694:42;1684:8575;;;;;;;;;;;;;;;;4694:42;1684:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4661:22;1684:8575;;;;;1307:97:17;1361:31;;;-1:-1:-1;1361:31:17;-1:-1:-1;1361:31:17;1684:8575:0;;-1:-1:-1;1361:31:17;1684:8575:0;;;;-1:-1:-1;1684:8575:0;;;;;-1:-1:-1;1684:8575:0;;-1:-1:-1;1684:8575:0;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;:::o;:::-;;;;;;;;;;:::o",
    "deployedSourceMap": "1684:8575:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;:::i;:::-;1547:65:17;;:::i;:::-;-1:-1:-1;;;;;1684:8575:0;2711:22:17;;2707:93;;1684:8575:0;;;-1:-1:-1;;;;;;1684:8575:0;;;;;;-1:-1:-1;;;;;1684:8575:0;;3149:40:17;;1684:8575:0;3149:40:17;1684:8575:0;2707:93:17;2757:31;;;1684:8575:0;2757:31:17;1684:8575:0;;;;;2757:31:17;1684:8575:0;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;;:::i;:::-;1547:65:17;;:::i;:::-;1684:8575:0;8068:21;1684:8575;;;;;;;8176:68;1684:8575;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1684:8575:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;1684:8575:0;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4913:4;1684:8575;;4913:4;1684:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;3281:72;1684:8575;3281:72;1684:8575;;;3281:72;1684:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;3524:59;1684:8575;;;;;3524:59;1684:8575;;;;;;-1:-1:-1;1684:8575:0;;;;;-1:-1:-1;1684:8575:0;;;3524:59;;;;;1684:8575;3524:59;;1684:8575;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1684:8575:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;5793:1424;1684:8575;;;;;;:::i;:::-;;577:70:16;;:::i;:::-;5793:1424:0;:::i;:::-;1684:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1684:8575:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;1547:65:17;;:::i;:::-;1684:8575:0;;;-1:-1:-1;;;;;;1684:8575:0;;;;-1:-1:-1;;;;;1684:8575:0;3149:40:17;1684:8575:0;;3149:40:17;1684:8575:0;;;;;;;-1:-1:-1;;1684:8575:0;;;;;3181:46;1684:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;;:::i;:::-;1547:65:17;;:::i;:::-;1684:8575:0;8627:21;1684:8575;;;;;;;;;8731:64;1684:8575;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1684:8575:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;1684:8575:0;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1684:8575:0;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1684:8575:0;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1684:8575:0;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1684:8575:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1684:8575:0;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:70:16;;:::i;:::-;1684:8575:0;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;5629:4;5592:58;1684:8575;;5592:58;5681:15;-1:-1:-1;;;;;1684:8575:0;5670:26;;;;:79;;1684:8575;;;;;;;;;;;5670:79;-1:-1:-1;;;5700:49:0;;1684:8575;5700:49;;1684:8575;;;-1:-1:-1;1684:8575:0;;;;;;5700:49;;;;;;1684:8575;5700:49;;;5670:79;1684:8575;5670:79;;;;;;5700:49;;1684:8575;5700:49;;1684:8575;5700:49;;;;;;1684:8575;5700:49;;;:::i;:::-;;;1684:8575;;;;;;;;;;;;;5700:49;;;;;;-1:-1:-1;5700:49:0;;;1684:8575;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;3405:68;1684:8575;3405:68;1684:8575;3405:68;1684:8575;3405:68;1684:8575;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;:::o;:::-;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;-1:-1:-1;;1684:8575:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1684:8575:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;5793:1424;;;;-1:-1:-1;;;;;1684:8575:0;;;;6219:14;1684:8575;6209:24;;6205:191;;6425:33;;1684:8575;;;;;;;;;;6425:33;;;;;;;;;-1:-1:-1;6425:33:0;;;5793:1424;-1:-1:-1;1684:8575:0;;-1:-1:-1;;;6532:26:0;;-1:-1:-1;;;;;1684:8575:0;;;6425:33;6532:26;;1684:8575;;-1:-1:-1;;1684:8575:0;;6532:26;;1684:8575;;6532:6;1684:8575;6532:26;;;;;;;-1:-1:-1;6532:26:0;;;5793:1424;-1:-1:-1;;;;6656:3:0;1684:8575;;6631:23;;;;;7084:66;1684:8575;6698:15;;;;;:::i;:::-;1684:8575;;;;;;;;-1:-1:-1;1684:8575:0;6754:7;6425:33;1684:8575;;-1:-1:-1;1684:8575:0;;;;;;6770:9;;;;:::i;:::-;1684:8575;;;;;;;;-1:-1:-1;1684:8575:0;;;7016:47;1684:8575;-1:-1:-1;1684:8575:0;;;;6886:24;;6882:114;;7016:47;:::i;:::-;1684:8575;;7105:45;1684:8575;;;;;7140:9;;;;:::i;:::-;1684:8575;;7105:45;;:::i;:::-;7084:66;;:::i;:::-;6656:3;1684:8575;6616:13;;;6882:114;6961:15;6935:23;;;1684:8575;7016:47;:::i;6631:23::-;;;;;1684:8575;7182:27;5793:1424;:::o;6532:26::-;;;;;;-1:-1:-1;6532:26:0;;;;;;:::i;:::-;;;1684:8575;6425:33;1684:8575;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;6425:33;1684:8575;;;;;;;;;;;;;;6425:33;1684:8575;;;;;;;;6532:26;;;;;;;1684:8575;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;6425:33;1684:8575;;;;;;;6425:33;;;;;;;;;;;;;;;;;:::i;:::-;;;1684:8575;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;6425:33;;;;;;-1:-1:-1;6425:33:0;;6205:191;6356:28;;6364:5;6356:28;;:::o;655:169:16:-;733:6;-1:-1:-1;;;;;1684:8575:0;711:10:16;:29;707:110;;655:169::o;707:110::-;764:41;;;;;711:10;764:41;1684:8575:0;;764:41:16;;1858:166:17;1766:6;1684:8575:0;-1:-1:-1;;;;;1684:8575:0;752:10:21;1918:23:17;1914:103;;1858:166::o;1914:103::-;1965:40;;;1766:6;1965:40;752:10:21;1965:40:17;1684:8575:0;;1766:6:17;1965:40;8811:703:0;1684:8575;8917:21;1684:8575;;8916:42;8913:81;;1684:8575;;;;;;;;9027:7;1684:8575;;;;;9027:22;1684:8575;;;;;;-1:-1:-1;1684:8575:0;;;;-1:-1:-1;1684:8575:0;;;;;;;;;-1:-1:-1;;;;;1684:8575:0;;;;;;;;;;;;;;;8917:21;1684:8575;;;;;;;;;;;;9095:64;1684:8575;9073:86;;9070:437;9095:64;;;1684:8575;9184:66;1684:8575;9177:73;:::o;9070:437::-;1684:8575;;-1:-1:-1;1684:8575:0;;;9384:66;1684:8575;9377:73;:::o;9270:237::-;1684:8575;9487:8;:::o;8913:81::-;8974:8;;1684:8575;8974:8;:::o",
    "sourcePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/contracts/hooks/LPIncentivizedHook.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.27+commit.40a35a09"
    },
    "ast": {
        "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/contracts/hooks/LPIncentivizedHook.sol",
        "exportedSymbols": {
            "AddLiquidityKind": [
                2752
            ],
            "BaseHooks": [
                3061
            ],
            "HookFlags": [
                2572
            ],
            "IBasePoolFactory": [
                570
            ],
            "IERC20": [
                3506
            ],
            "IHooks": [
                772
            ],
            "IRouterCommon": [
                1144
            ],
            "IVault": [
                1181
            ],
            "LPIncentivizedHook": [
                484
            ],
            "LiquidityManagement": [
                2525
            ],
            "Ownable": [
                3258
            ],
            "PoolSwapParams": [
                2717
            ],
            "RemoveLiquidityKind": [
                2773
            ],
            "TokenConfig": [
                2639
            ],
            "VaultGuard": [
                3110
            ]
        },
        "id": 485,
        "license": "GPL-3.0-or-later",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".24"
                ],
                "nodeType": "PragmaDirective",
                "src": "48:24:0"
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 3507,
                "src": "76:137:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3506,
                            "src": "85:6:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 3259,
                "src": "215:134:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 4,
                            "name": "Ownable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3258,
                            "src": "224:7:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol",
                "id": 7,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 571,
                "src": "353:164:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 6,
                            "name": "IBasePoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "362:16:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol",
                "id": 9,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 773,
                "src": "519:144:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 8,
                            "name": "IHooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "528:6:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol",
                "id": 11,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 1145,
                "src": "665:158:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 10,
                            "name": "IRouterCommon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1144,
                            "src": "674:13:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol",
                "id": 13,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 1182,
                "src": "825:144:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 12,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1181,
                            "src": "834:6:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol",
                "id": 20,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 2819,
                "src": "971:271:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 14,
                            "name": "LiquidityManagement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2525,
                            "src": "985:19:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 15,
                            "name": "TokenConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2639,
                            "src": "1011:11:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 16,
                            "name": "PoolSwapParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2717,
                            "src": "1029:14:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 17,
                            "name": "HookFlags",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2572,
                            "src": "1050:9:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 18,
                            "name": "AddLiquidityKind",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2752,
                            "src": "1066:16:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 19,
                            "name": "RemoveLiquidityKind",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2773,
                            "src": "1089:19:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol",
                "id": 22,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 3111,
                "src": "1246:141:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 21,
                            "name": "VaultGuard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3110,
                            "src": "1255:10:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol",
                "file": "e:/Blockchain/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol",
                "id": 24,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 485,
                "sourceUnit": 3062,
                "src": "1389:139:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 23,
                            "name": "BaseHooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3061,
                            "src": "1398:9:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 26,
                            "name": "BaseHooks",
                            "nameLocations": [
                                "1715:9:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3061,
                            "src": "1715:9:0"
                        },
                        "id": 27,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1715:9:0"
                    },
                    {
                        "baseName": {
                            "id": 28,
                            "name": "VaultGuard",
                            "nameLocations": [
                                "1726:10:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3110,
                            "src": "1726:10:0"
                        },
                        "id": 29,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1726:10:0"
                    },
                    {
                        "baseName": {
                            "id": 30,
                            "name": "Ownable",
                            "nameLocations": [
                                "1738:7:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3258,
                            "src": "1738:7:0"
                        },
                        "id": 31,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1738:7:0"
                    }
                ],
                "canonicalName": "LPIncentivizedHook",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1532:150:0",
                    "text": " @notice Hook that gives a swap fee discount to lpRWD holders.\n @dev Uses to reward Liquidity Providers (LPs) based on multiple factors"
                },
                "fullyImplemented": true,
                "id": 484,
                "linearizedBaseContracts": [
                    484,
                    3258,
                    3562,
                    3110,
                    3061,
                    772
                ],
                "name": "LPIncentivizedHook",
                "nameLocation": "1693:18:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 33,
                        "mutability": "immutable",
                        "name": "_allowedFactory",
                        "nameLocation": "1862:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "1836:41:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 32,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1836:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "id": 35,
                        "mutability": "immutable",
                        "name": "_trustedRouter",
                        "nameLocation": "2069:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "2043:40:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 34,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2043:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "id": 38,
                        "mutability": "immutable",
                        "name": "_lpRWD",
                        "nameLocation": "2176:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "2151:31:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3506",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "id": 37,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 36,
                                "name": "IERC20",
                                "nameLocations": [
                                    "2151:6:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3506,
                                "src": "2151:6:0"
                            },
                            "referencedDeclaration": 3506,
                            "src": "2151:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3506",
                                "typeString": "contract IERC20"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "canonicalName": "LPIncentivizedHook.LPInfo",
                        "id": 45,
                        "members": [
                            {
                                "constant": false,
                                "id": 40,
                                "mutability": "mutable",
                                "name": "totalLiquidity",
                                "nameLocation": "2263:14:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 45,
                                "src": "2255:22:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 39,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2255:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 42,
                                "mutability": "mutable",
                                "name": "liquidityStartTime",
                                "nameLocation": "2296:18:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 45,
                                "src": "2288:26:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 41,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2288:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 44,
                                "mutability": "mutable",
                                "name": "rewards",
                                "nameLocation": "2333:7:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 45,
                                "src": "2325:15:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 43,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2325:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "LPInfo",
                        "nameLocation": "2237:6:0",
                        "nodeType": "StructDefinition",
                        "scope": 484,
                        "src": "2230:118:0",
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "LPIncentivizedHook.LPIncentiveFactor",
                        "id": 50,
                        "members": [
                            {
                                "constant": false,
                                "id": 47,
                                "mutability": "mutable",
                                "name": "amountBaseLiquidity",
                                "nameLocation": "2442:19:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 50,
                                "src": "2437:24:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 46,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2437:4:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 49,
                                "mutability": "mutable",
                                "name": "timeBaseLiquidity",
                                "nameLocation": "2477:17:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 50,
                                "src": "2472:22:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 48,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2472:4:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "LPIncentiveFactor",
                        "nameLocation": "2408:17:0",
                        "nodeType": "StructDefinition",
                        "scope": 484,
                        "src": "2401:101:0",
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "LPIncentivizedHook.AmountBaseLiquidityParameters",
                        "id": 59,
                        "members": [
                            {
                                "constant": false,
                                "id": 52,
                                "mutability": "mutable",
                                "name": "mediumLiquidityAmountTrigger",
                                "nameLocation": "2623:28:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 59,
                                "src": "2615:36:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 51,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2615:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 54,
                                "mutability": "mutable",
                                "name": "higherLiquidityAmountTrigger",
                                "nameLocation": "2670:28:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 59,
                                "src": "2662:36:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 53,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2662:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 56,
                                "mutability": "mutable",
                                "name": "mediumLiquidityAmountRewardFee",
                                "nameLocation": "2717:30:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 59,
                                "src": "2709:38:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 55,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2709:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 58,
                                "mutability": "mutable",
                                "name": "higherLiquidityAmountRewardFee",
                                "nameLocation": "2766:30:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 59,
                                "src": "2758:38:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 57,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2758:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "AmountBaseLiquidityParameters",
                        "nameLocation": "2574:29:0",
                        "nodeType": "StructDefinition",
                        "scope": 484,
                        "src": "2567:237:0",
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "LPIncentivizedHook.TimeBaseLiquidityParameters",
                        "id": 68,
                        "members": [
                            {
                                "constant": false,
                                "id": 61,
                                "mutability": "mutable",
                                "name": "mediumLiquidityTimeTrigger",
                                "nameLocation": "2957:26:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 68,
                                "src": "2949:34:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 60,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2949:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 63,
                                "mutability": "mutable",
                                "name": "higherLiquidityTimeTrigger",
                                "nameLocation": "3002:26:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 68,
                                "src": "2994:34:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 62,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2994:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 65,
                                "mutability": "mutable",
                                "name": "mediumLiquidityTimeRewardFee",
                                "nameLocation": "3047:28:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 68,
                                "src": "3039:36:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 64,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3039:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 67,
                                "mutability": "mutable",
                                "name": "higherLiquidityTimeRewardFee",
                                "nameLocation": "3094:28:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 68,
                                "src": "3086:36:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 66,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3086:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "TimeBaseLiquidityParameters",
                        "nameLocation": "2910:27:0",
                        "nodeType": "StructDefinition",
                        "scope": 484,
                        "src": "2903:227:0",
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "6c55c747",
                        "id": 71,
                        "mutability": "mutable",
                        "name": "activeIncentiveFactor",
                        "nameLocation": "3206:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "3181:46:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage",
                            "typeString": "struct LPIncentivizedHook.LPIncentiveFactor"
                        },
                        "typeName": {
                            "id": 70,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 69,
                                "name": "LPIncentiveFactor",
                                "nameLocations": [
                                    "3181:17:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 50,
                                "src": "3181:17:0"
                            },
                            "referencedDeclaration": 50,
                            "src": "3181:17:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage_ptr",
                                "typeString": "struct LPIncentivizedHook.LPIncentiveFactor"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "c9e6e6ca",
                        "id": 74,
                        "mutability": "mutable",
                        "name": "activeAmountBaseLiquidityParameters",
                        "nameLocation": "3318:35:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "3281:72:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage",
                            "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters"
                        },
                        "typeName": {
                            "id": 73,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 72,
                                "name": "AmountBaseLiquidityParameters",
                                "nameLocations": [
                                    "3281:29:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 59,
                                "src": "3281:29:0"
                            },
                            "referencedDeclaration": 59,
                            "src": "3281:29:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage_ptr",
                                "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "08a13d6a",
                        "id": 77,
                        "mutability": "mutable",
                        "name": "activeTimeBaseLiquidityParameters",
                        "nameLocation": "3440:33:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "3405:68:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage",
                            "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters"
                        },
                        "typeName": {
                            "id": 76,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 75,
                                "name": "TimeBaseLiquidityParameters",
                                "nameLocations": [
                                    "3405:27:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 68,
                                "src": "3405:27:0"
                            },
                            "referencedDeclaration": 68,
                            "src": "3405:27:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage_ptr",
                                "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "b389771d",
                        "id": 85,
                        "mutability": "mutable",
                        "name": "lpInfos",
                        "nameLocation": "3576:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "3524:59:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$_$",
                            "typeString": "mapping(address => mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo))"
                        },
                        "typeName": {
                            "id": 84,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 78,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3532:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "3524:44:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$_$",
                                "typeString": "mapping(address => mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo))"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 83,
                                "keyName": "",
                                "keyNameLocation": "-1:-1:-1",
                                "keyType": {
                                    "id": 80,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                        "id": 79,
                                        "name": "IERC20",
                                        "nameLocations": [
                                            "3550:6:0"
                                        ],
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 3506,
                                        "src": "3550:6:0"
                                    },
                                    "referencedDeclaration": 3506,
                                    "src": "3550:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$3506",
                                        "typeString": "contract IERC20"
                                    }
                                },
                                "nodeType": "Mapping",
                                "src": "3542:25:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$",
                                    "typeString": "mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo)"
                                },
                                "valueName": "",
                                "valueNameLocation": "-1:-1:-1",
                                "valueType": {
                                    "id": 82,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                        "id": 81,
                                        "name": "LPInfo",
                                        "nameLocations": [
                                            "3560:6:0"
                                        ],
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 45,
                                        "src": "3560:6:0"
                                    },
                                    "referencedDeclaration": 45,
                                    "src": "3560:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LPInfo_$45_storage_ptr",
                                        "typeString": "struct LPIncentivizedHook.LPInfo"
                                    }
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "documentation": {
                            "id": 86,
                            "nodeType": "StructuredDocumentation",
                            "src": "3592:381:0",
                            "text": " @notice A new `LPIncentivizedHook` contract has been registered successfully.\n @dev If the registration fails the call will revert, so there will be no event.\n @param hooksContract This contract\n @param factory The factory (must be the allowed factory, or the call will revert)\n @param pool The pool on which the hook was registered"
                        },
                        "eventSelector": "cbd5d637d0dd0263537ef5c2432253bd1a309fc20240914e09aabaf6325231b4",
                        "id": 94,
                        "name": "LPIncentivizedHookRegistered",
                        "nameLocation": "3985:28:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 93,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 88,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "hooksContract",
                                    "nameLocation": "4040:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 94,
                                    "src": "4024:29:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 87,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4024:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 90,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "factory",
                                    "nameLocation": "4080:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 94,
                                    "src": "4064:23:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 89,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4064:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 92,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "pool",
                                    "nameLocation": "4114:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 94,
                                    "src": "4098:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 91,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4098:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4013:112:0"
                        },
                        "src": "3979:147:0"
                    },
                    {
                        "anonymous": false,
                        "documentation": {
                            "id": 95,
                            "nodeType": "StructuredDocumentation",
                            "src": "4134:155:0",
                            "text": " @dev Event if rewards distributed successfully.\n @param LPAddress Liquidity provider address\n @param reward Earn rewards"
                        },
                        "eventSelector": "e34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6",
                        "id": 101,
                        "name": "RewardDistributed",
                        "nameLocation": "4301:17:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 100,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 97,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "LPAddress",
                                    "nameLocation": "4345:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 101,
                                    "src": "4329:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 96,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4329:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 99,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "reward",
                                    "nameLocation": "4373:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 101,
                                    "src": "4365:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 98,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4365:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4318:68:0"
                        },
                        "src": "4295:92:0"
                    },
                    {
                        "body": {
                            "id": 141,
                            "nodeType": "Block",
                            "src": "4566:178:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 125,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 123,
                                            "name": "_allowedFactory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33,
                                            "src": "4577:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 124,
                                            "name": "allowedFactory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 106,
                                            "src": "4595:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "4577:32:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 126,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4577:32:0"
                                },
                                {
                                    "expression": {
                                        "id": 129,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 127,
                                            "name": "_trustedRouter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 35,
                                            "src": "4620:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 128,
                                            "name": "trustedRouter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 110,
                                            "src": "4637:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "4620:30:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 130,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4620:30:0"
                                },
                                {
                                    "expression": {
                                        "id": 135,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 131,
                                            "name": "_lpRWD",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "4661:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3506",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 133,
                                                    "name": "lpRWD",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 108,
                                                    "src": "4677:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 132,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3506,
                                                "src": "4670:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$3506_$",
                                                    "typeString": "type(contract IERC20)"
                                                }
                                            },
                                            "id": 134,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4670:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3506",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "4661:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$3506",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 136,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4661:22:0"
                                },
                                {
                                    "expression": {
                                        "id": 139,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 137,
                                            "name": "activeIncentiveFactor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 71,
                                            "src": "4694:21:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage",
                                                "typeString": "struct LPIncentivizedHook.LPIncentiveFactor storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 138,
                                            "name": "_lpIncentiveFactor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 113,
                                            "src": "4718:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_memory_ptr",
                                                "typeString": "struct LPIncentivizedHook.LPIncentiveFactor memory"
                                            }
                                        },
                                        "src": "4694:42:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage",
                                            "typeString": "struct LPIncentivizedHook.LPIncentiveFactor storage ref"
                                        }
                                    },
                                    "id": 140,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4694:42:0"
                                }
                            ]
                        },
                        "id": 142,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 116,
                                        "name": "vault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "4539:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IVault_$1181",
                                            "typeString": "contract IVault"
                                        }
                                    }
                                ],
                                "id": 117,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 115,
                                    "name": "VaultGuard",
                                    "nameLocations": [
                                        "4528:10:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 3110,
                                    "src": "4528:10:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "4528:17:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "expression": {
                                            "id": 119,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "4554:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 120,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4558:6:0",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "4554:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 121,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 118,
                                    "name": "Ownable",
                                    "nameLocations": [
                                        "4546:7:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 3258,
                                    "src": "4546:7:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "4546:19:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 114,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 104,
                                    "mutability": "mutable",
                                    "name": "vault",
                                    "nameLocation": "4414:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 142,
                                    "src": "4407:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$1181",
                                        "typeString": "contract IVault"
                                    },
                                    "typeName": {
                                        "id": 103,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 102,
                                            "name": "IVault",
                                            "nameLocations": [
                                                "4407:6:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1181,
                                            "src": "4407:6:0"
                                        },
                                        "referencedDeclaration": 1181,
                                        "src": "4407:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IVault_$1181",
                                            "typeString": "contract IVault"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 106,
                                    "mutability": "mutable",
                                    "name": "allowedFactory",
                                    "nameLocation": "4429:14:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 142,
                                    "src": "4421:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 105,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4421:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 108,
                                    "mutability": "mutable",
                                    "name": "lpRWD",
                                    "nameLocation": "4453:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 142,
                                    "src": "4445:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 107,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4445:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 110,
                                    "mutability": "mutable",
                                    "name": "trustedRouter",
                                    "nameLocation": "4468:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 142,
                                    "src": "4460:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 109,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4460:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 113,
                                    "mutability": "mutable",
                                    "name": "_lpIncentiveFactor",
                                    "nameLocation": "4508:18:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 142,
                                    "src": "4483:43:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_memory_ptr",
                                        "typeString": "struct LPIncentivizedHook.LPIncentiveFactor"
                                    },
                                    "typeName": {
                                        "id": 112,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 111,
                                            "name": "LPIncentiveFactor",
                                            "nameLocations": [
                                                "4483:17:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 50,
                                            "src": "4483:17:0"
                                        },
                                        "referencedDeclaration": 50,
                                        "src": "4483:17:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage_ptr",
                                            "typeString": "struct LPIncentivizedHook.LPIncentiveFactor"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4406:121:0"
                        },
                        "returnParameters": {
                            "id": 122,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4566:0:0"
                        },
                        "scope": 484,
                        "src": "4395:349:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            2860
                        ],
                        "body": {
                            "id": 162,
                            "nodeType": "Block",
                            "src": "4862:121:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 154,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "id": 150,
                                                "name": "hookFlags",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 148,
                                                "src": "4873:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_HookFlags_$2572_memory_ptr",
                                                    "typeString": "struct HookFlags memory"
                                                }
                                            },
                                            "id": 152,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberLocation": "4883:27:0",
                                            "memberName": "shouldCallAfterAddLiquidity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2567,
                                            "src": "4873:37:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 153,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4913:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "4873:44:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 155,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4873:44:0"
                                },
                                {
                                    "expression": {
                                        "id": 160,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "id": 156,
                                                "name": "hookFlags",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 148,
                                                "src": "4928:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_HookFlags_$2572_memory_ptr",
                                                    "typeString": "struct HookFlags memory"
                                                }
                                            },
                                            "id": 158,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberLocation": "4938:30:0",
                                            "memberName": "shouldCallAfterRemoveLiquidity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2571,
                                            "src": "4928:40:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 159,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4971:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "4928:47:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 161,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4928:47:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 143,
                            "nodeType": "StructuredDocumentation",
                            "src": "4752:22:0",
                            "text": "@inheritdoc IHooks"
                        },
                        "functionSelector": "d77153a7",
                        "id": 163,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getHookFlags",
                        "nameLocation": "4789:12:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 145,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4816:8:0"
                        },
                        "parameters": {
                            "id": 144,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4801:2:0"
                        },
                        "returnParameters": {
                            "id": 149,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 148,
                                    "mutability": "mutable",
                                    "name": "hookFlags",
                                    "nameLocation": "4851:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 163,
                                    "src": "4834:26:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_HookFlags_$2572_memory_ptr",
                                        "typeString": "struct HookFlags"
                                    },
                                    "typeName": {
                                        "id": 147,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 146,
                                            "name": "HookFlags",
                                            "nameLocations": [
                                                "4834:9:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2572,
                                            "src": "4834:9:0"
                                        },
                                        "referencedDeclaration": 2572,
                                        "src": "4834:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HookFlags_$2572_storage_ptr",
                                            "typeString": "struct HookFlags"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4833:28:0"
                        },
                        "scope": 484,
                        "src": "4780:203:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            2853
                        ],
                        "body": {
                            "id": 203,
                            "nodeType": "Block",
                            "src": "5206:551:0",
                            "statements": [
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 186,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "5629:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_LPIncentivizedHook_$484",
                                                            "typeString": "contract LPIncentivizedHook"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_LPIncentivizedHook_$484",
                                                            "typeString": "contract LPIncentivizedHook"
                                                        }
                                                    ],
                                                    "id": 185,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "5621:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 184,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "5621:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 187,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5621:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 188,
                                                "name": "factory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 166,
                                                "src": "5636:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 189,
                                                "name": "pool",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 168,
                                                "src": "5645:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 183,
                                            "name": "LPIncentivizedHookRegistered",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 94,
                                            "src": "5592:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                                                "typeString": "function (address,address,address)"
                                            }
                                        },
                                        "id": 190,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5592:58:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 191,
                                    "nodeType": "EmitStatement",
                                    "src": "5587:63:0"
                                },
                                {
                                    "expression": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 201,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 194,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 192,
                                                "name": "factory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 166,
                                                "src": "5670:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "id": 193,
                                                "name": "_allowedFactory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 33,
                                                "src": "5681:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "5670:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 199,
                                                    "name": "pool",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 168,
                                                    "src": "5744:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 196,
                                                            "name": "factory",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 166,
                                                            "src": "5717:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 195,
                                                        "name": "IBasePoolFactory",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 570,
                                                        "src": "5700:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IBasePoolFactory_$570_$",
                                                            "typeString": "type(contract IBasePoolFactory)"
                                                        }
                                                    },
                                                    "id": 197,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5700:25:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IBasePoolFactory_$570",
                                                        "typeString": "contract IBasePoolFactory"
                                                    }
                                                },
                                                "id": 198,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "5726:17:0",
                                                "memberName": "isPoolFromFactory",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 551,
                                                "src": "5700:43:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                                    "typeString": "function (address) view external returns (bool)"
                                                }
                                            },
                                            "id": 200,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5700:49:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "5670:79:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 182,
                                    "id": 202,
                                    "nodeType": "Return",
                                    "src": "5663:86:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 164,
                            "nodeType": "StructuredDocumentation",
                            "src": "4991:22:0",
                            "text": "@inheritdoc IHooks"
                        },
                        "functionSelector": "0b89f182",
                        "id": 204,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 179,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 178,
                                    "name": "onlyVault",
                                    "nameLocations": [
                                        "5181:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 3089,
                                    "src": "5181:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "5181:9:0"
                            }
                        ],
                        "name": "onRegister",
                        "nameLocation": "5028:10:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 177,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "5172:8:0"
                        },
                        "parameters": {
                            "id": 176,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 166,
                                    "mutability": "mutable",
                                    "name": "factory",
                                    "nameLocation": "5057:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 204,
                                    "src": "5049:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 165,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5049:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 168,
                                    "mutability": "mutable",
                                    "name": "pool",
                                    "nameLocation": "5083:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 204,
                                    "src": "5075:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 167,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5075:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 172,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 204,
                                    "src": "5098:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TokenConfig_$2639_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct TokenConfig[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 170,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 169,
                                                "name": "TokenConfig",
                                                "nameLocations": [
                                                    "5098:11:0"
                                                ],
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 2639,
                                                "src": "5098:11:0"
                                            },
                                            "referencedDeclaration": 2639,
                                            "src": "5098:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenConfig_$2639_storage_ptr",
                                                "typeString": "struct TokenConfig"
                                            }
                                        },
                                        "id": 171,
                                        "nodeType": "ArrayTypeName",
                                        "src": "5098:13:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TokenConfig_$2639_storage_$dyn_storage_ptr",
                                            "typeString": "struct TokenConfig[]"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 175,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 204,
                                    "src": "5129:28:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LiquidityManagement_$2525_calldata_ptr",
                                        "typeString": "struct LiquidityManagement"
                                    },
                                    "typeName": {
                                        "id": 174,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 173,
                                            "name": "LiquidityManagement",
                                            "nameLocations": [
                                                "5129:19:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2525,
                                            "src": "5129:19:0"
                                        },
                                        "referencedDeclaration": 2525,
                                        "src": "5129:19:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LiquidityManagement_$2525_storage_ptr",
                                            "typeString": "struct LiquidityManagement"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5038:126:0"
                        },
                        "returnParameters": {
                            "id": 182,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 181,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 204,
                                    "src": "5200:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 180,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5200:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5199:6:0"
                        },
                        "scope": 484,
                        "src": "5019:738:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            2950
                        ],
                        "body": {
                            "id": 336,
                            "nodeType": "Block",
                            "src": "6192:1025:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 238,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 236,
                                            "name": "router",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 207,
                                            "src": "6209:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "id": 237,
                                            "name": "_trustedRouter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 35,
                                            "src": "6219:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "6209:24:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 244,
                                    "nodeType": "IfStatement",
                                    "src": "6205:191:0",
                                    "trueBody": {
                                        "id": 243,
                                        "nodeType": "Block",
                                        "src": "6235:161:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "components": [
                                                        {
                                                            "hexValue": "66616c7365",
                                                            "id": 239,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6364:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "false"
                                                        },
                                                        {
                                                            "id": 240,
                                                            "name": "amountsInRaw",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 218,
                                                            "src": "6371:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                                "typeString": "uint256[] memory"
                                                            }
                                                        }
                                                    ],
                                                    "id": 241,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "6363:21:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                        "typeString": "tuple(bool,uint256[] memory)"
                                                    }
                                                },
                                                "functionReturnParameters": 235,
                                                "id": 242,
                                                "nodeType": "Return",
                                                "src": "6356:28:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "assignments": [
                                        246
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 246,
                                            "mutability": "mutable",
                                            "name": "sender",
                                            "nameLocation": "6416:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 336,
                                            "src": "6408:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 245,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6408:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 252,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 248,
                                                        "name": "router",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 207,
                                                        "src": "6439:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 247,
                                                    "name": "IRouterCommon",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1144,
                                                    "src": "6425:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IRouterCommon_$1144_$",
                                                        "typeString": "type(contract IRouterCommon)"
                                                    }
                                                },
                                                "id": 249,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6425:21:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRouterCommon_$1144",
                                                    "typeString": "contract IRouterCommon"
                                                }
                                            },
                                            "id": 250,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6447:9:0",
                                            "memberName": "getSender",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1098,
                                            "src": "6425:31:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                "typeString": "function () view external returns (address)"
                                            }
                                        },
                                        "id": 251,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6425:33:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6408:50:0"
                                },
                                {
                                    "assignments": [
                                        254
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 254,
                                            "mutability": "mutable",
                                            "name": "_totalLiquidity",
                                            "nameLocation": "6477:15:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 336,
                                            "src": "6469:23:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 253,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6469:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 256,
                                    "initialValue": {
                                        "hexValue": "30",
                                        "id": 255,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6495:1:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6469:27:0"
                                },
                                {
                                    "assignments": [
                                        261
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 261,
                                            "mutability": "mutable",
                                            "name": "tokens",
                                            "nameLocation": "6523:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 336,
                                            "src": "6507:22:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_contract$_IERC20_$3506_$dyn_memory_ptr",
                                                "typeString": "contract IERC20[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 259,
                                                    "nodeType": "UserDefinedTypeName",
                                                    "pathNode": {
                                                        "id": 258,
                                                        "name": "IERC20",
                                                        "nameLocations": [
                                                            "6507:6:0"
                                                        ],
                                                        "nodeType": "IdentifierPath",
                                                        "referencedDeclaration": 3506,
                                                        "src": "6507:6:0"
                                                    },
                                                    "referencedDeclaration": 3506,
                                                    "src": "6507:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$3506",
                                                        "typeString": "contract IERC20"
                                                    }
                                                },
                                                "id": 260,
                                                "nodeType": "ArrayTypeName",
                                                "src": "6507:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$3506_$dyn_storage_ptr",
                                                    "typeString": "contract IERC20[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 266,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 264,
                                                "name": "pool",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 209,
                                                "src": "6553:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 262,
                                                "name": "_vault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3071,
                                                "src": "6532:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IVault_$1181",
                                                    "typeString": "contract IVault"
                                                }
                                            },
                                            "id": 263,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6539:13:0",
                                            "memberName": "getPoolTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2123,
                                            "src": "6532:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IERC20_$3506_$dyn_memory_ptr_$",
                                                "typeString": "function (address) view external returns (contract IERC20[] memory)"
                                            }
                                        },
                                        "id": 265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6532:26:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IERC20_$3506_$dyn_memory_ptr",
                                            "typeString": "contract IERC20[] memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6507:51:0"
                                },
                                {
                                    "assignments": [
                                        268
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 268,
                                            "mutability": "mutable",
                                            "name": "_amountBaseReward",
                                            "nameLocation": "6577:17:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 336,
                                            "src": "6569:25:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 267,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6569:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 270,
                                    "initialValue": {
                                        "hexValue": "30",
                                        "id": 269,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6597:1:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6569:29:0"
                                },
                                {
                                    "body": {
                                        "id": 330,
                                        "nodeType": "Block",
                                        "src": "6661:501:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 286,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 282,
                                                        "name": "_totalLiquidity",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 254,
                                                        "src": "6680:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "baseExpression": {
                                                            "id": 283,
                                                            "name": "amountsInRaw",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 218,
                                                            "src": "6698:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                                "typeString": "uint256[] memory"
                                                            }
                                                        },
                                                        "id": 285,
                                                        "indexExpression": {
                                                            "id": 284,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 272,
                                                            "src": "6711:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6698:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "6680:33:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 287,
                                                "nodeType": "ExpressionStatement",
                                                "src": "6680:33:0"
                                            },
                                            {
                                                "assignments": [
                                                    290
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 290,
                                                        "mutability": "mutable",
                                                        "name": "info",
                                                        "nameLocation": "6747:4:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 330,
                                                        "src": "6732:19:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "storage",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_LPInfo_$45_storage_ptr",
                                                            "typeString": "struct LPIncentivizedHook.LPInfo"
                                                        },
                                                        "typeName": {
                                                            "id": 289,
                                                            "nodeType": "UserDefinedTypeName",
                                                            "pathNode": {
                                                                "id": 288,
                                                                "name": "LPInfo",
                                                                "nameLocations": [
                                                                    "6732:6:0"
                                                                ],
                                                                "nodeType": "IdentifierPath",
                                                                "referencedDeclaration": 45,
                                                                "src": "6732:6:0"
                                                            },
                                                            "referencedDeclaration": 45,
                                                            "src": "6732:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_LPInfo_$45_storage_ptr",
                                                                "typeString": "struct LPIncentivizedHook.LPInfo"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 298,
                                                "initialValue": {
                                                    "baseExpression": {
                                                        "baseExpression": {
                                                            "id": 291,
                                                            "name": "lpInfos",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 85,
                                                            "src": "6754:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$_$",
                                                                "typeString": "mapping(address => mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo storage ref))"
                                                            }
                                                        },
                                                        "id": 293,
                                                        "indexExpression": {
                                                            "id": 292,
                                                            "name": "sender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 246,
                                                            "src": "6762:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6754:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$",
                                                            "typeString": "mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo storage ref)"
                                                        }
                                                    },
                                                    "id": 297,
                                                    "indexExpression": {
                                                        "baseExpression": {
                                                            "id": 294,
                                                            "name": "tokens",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 261,
                                                            "src": "6770:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_contract$_IERC20_$3506_$dyn_memory_ptr",
                                                                "typeString": "contract IERC20[] memory"
                                                            }
                                                        },
                                                        "id": 296,
                                                        "indexExpression": {
                                                            "id": 295,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 272,
                                                            "src": "6777:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6770:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$3506",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6754:26:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LPInfo_$45_storage",
                                                        "typeString": "struct LPIncentivizedHook.LPInfo storage ref"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "6732:48:0"
                                            },
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 302,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 299,
                                                            "name": "info",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 290,
                                                            "src": "6886:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_LPInfo_$45_storage_ptr",
                                                                "typeString": "struct LPIncentivizedHook.LPInfo storage pointer"
                                                            }
                                                        },
                                                        "id": 300,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "6891:14:0",
                                                        "memberName": "totalLiquidity",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 40,
                                                        "src": "6886:19:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "hexValue": "30",
                                                        "id": 301,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6909:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    "src": "6886:24:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 311,
                                                "nodeType": "IfStatement",
                                                "src": "6882:114:0",
                                                "trueBody": {
                                                    "id": 310,
                                                    "nodeType": "Block",
                                                    "src": "6912:84:0",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 308,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "expression": {
                                                                        "id": 303,
                                                                        "name": "info",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 290,
                                                                        "src": "6935:4:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_LPInfo_$45_storage_ptr",
                                                                            "typeString": "struct LPIncentivizedHook.LPInfo storage pointer"
                                                                        }
                                                                    },
                                                                    "id": 305,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": true,
                                                                    "memberLocation": "6940:18:0",
                                                                    "memberName": "liquidityStartTime",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 42,
                                                                    "src": "6935:23:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                    "expression": {
                                                                        "id": 306,
                                                                        "name": "block",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967292,
                                                                        "src": "6961:5:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_block",
                                                                            "typeString": "block"
                                                                        }
                                                                    },
                                                                    "id": 307,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "6967:9:0",
                                                                    "memberName": "timestamp",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "6961:15:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "6935:41:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 309,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "6935:41:0"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 319,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "expression": {
                                                            "id": 312,
                                                            "name": "info",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 290,
                                                            "src": "7016:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_LPInfo_$45_storage_ptr",
                                                                "typeString": "struct LPIncentivizedHook.LPInfo storage pointer"
                                                            }
                                                        },
                                                        "id": 314,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "memberLocation": "7021:14:0",
                                                        "memberName": "totalLiquidity",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 40,
                                                        "src": "7016:19:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "+=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "id": 317,
                                                                "name": "_totalLiquidity",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 254,
                                                                "src": "7047:15:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "id": 316,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "7039:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                                "typeString": "type(uint256)"
                                                            },
                                                            "typeName": {
                                                                "id": 315,
                                                                "name": "uint256",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "7039:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 318,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "7039:24:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "7016:47:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 320,
                                                "nodeType": "ExpressionStatement",
                                                "src": "7016:47:0"
                                            },
                                            {
                                                "expression": {
                                                    "id": 328,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 321,
                                                        "name": "_amountBaseReward",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 268,
                                                        "src": "7084:17:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "+=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "id": 323,
                                                                "name": "sender",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 246,
                                                                "src": "7133:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "baseExpression": {
                                                                    "id": 324,
                                                                    "name": "tokens",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 261,
                                                                    "src": "7140:6:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$3506_$dyn_memory_ptr",
                                                                        "typeString": "contract IERC20[] memory"
                                                                    }
                                                                },
                                                                "id": 326,
                                                                "indexExpression": {
                                                                    "id": 325,
                                                                    "name": "i",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 272,
                                                                    "src": "7147:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "7140:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IERC20_$3506",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_contract$_IERC20_$3506",
                                                                    "typeString": "contract IERC20"
                                                                }
                                                            ],
                                                            "id": 322,
                                                            "name": "_calculateAmountBaseRewards",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 427,
                                                            "src": "7105:27:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$3506_$returns$_t_uint256_$",
                                                                "typeString": "function (address,contract IERC20) returns (uint256)"
                                                            }
                                                        },
                                                        "id": 327,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "7105:45:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "7084:66:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 329,
                                                "nodeType": "ExpressionStatement",
                                                "src": "7084:66:0"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 278,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 275,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 272,
                                            "src": "6631:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 276,
                                                "name": "amountsInRaw",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 218,
                                                "src": "6635:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                    "typeString": "uint256[] memory"
                                                }
                                            },
                                            "id": 277,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6648:6:0",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "6635:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6631:23:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 331,
                                    "initializationExpression": {
                                        "assignments": [
                                            272
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 272,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "6624:1:0",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 331,
                                                "src": "6616:9:0",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "typeName": {
                                                    "id": 271,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "6616:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 274,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 273,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6628:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "6616:13:0"
                                    },
                                    "isSimpleCounterLoop": true,
                                    "loopExpression": {
                                        "expression": {
                                            "id": 280,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "6656:3:0",
                                            "subExpression": {
                                                "id": 279,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 272,
                                                "src": "6656:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 281,
                                        "nodeType": "ExpressionStatement",
                                        "src": "6656:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "6611:551:0"
                                },
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "hexValue": "74727565",
                                                "id": 332,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "7190:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            {
                                                "id": 333,
                                                "name": "amountsInRaw",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 218,
                                                "src": "7196:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                    "typeString": "uint256[] memory"
                                                }
                                            }
                                        ],
                                        "id": 334,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "7189:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                            "typeString": "tuple(bool,uint256[] memory)"
                                        }
                                    },
                                    "functionReturnParameters": 235,
                                    "id": 335,
                                    "nodeType": "Return",
                                    "src": "7182:27:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 205,
                            "nodeType": "StructuredDocumentation",
                            "src": "5765:22:0",
                            "text": "@inheritdoc IHooks"
                        },
                        "functionSelector": "976907cc",
                        "id": 337,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 229,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 228,
                                    "name": "onlyVault",
                                    "nameLocations": [
                                        "6117:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 3089,
                                    "src": "6117:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "6117:9:0"
                            }
                        ],
                        "name": "onAfterAddLiquidity",
                        "nameLocation": "5802:19:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 227,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "6108:8:0"
                        },
                        "parameters": {
                            "id": 226,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 207,
                                    "mutability": "mutable",
                                    "name": "router",
                                    "nameLocation": "5840:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "5832:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 206,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5832:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 209,
                                    "mutability": "mutable",
                                    "name": "pool",
                                    "nameLocation": "5865:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "5857:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 208,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5857:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 212,
                                    "mutability": "mutable",
                                    "name": "kind",
                                    "nameLocation": "5897:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "5880:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AddLiquidityKind_$2752",
                                        "typeString": "enum AddLiquidityKind"
                                    },
                                    "typeName": {
                                        "id": 211,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 210,
                                            "name": "AddLiquidityKind",
                                            "nameLocations": [
                                                "5880:16:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2752,
                                            "src": "5880:16:0"
                                        },
                                        "referencedDeclaration": 2752,
                                        "src": "5880:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AddLiquidityKind_$2752",
                                            "typeString": "enum AddLiquidityKind"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 215,
                                    "mutability": "mutable",
                                    "name": "amountsInScaled18",
                                    "nameLocation": "5929:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "5912:34:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 213,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "5912:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 214,
                                        "nodeType": "ArrayTypeName",
                                        "src": "5912:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                            "typeString": "uint256[]"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 218,
                                    "mutability": "mutable",
                                    "name": "amountsInRaw",
                                    "nameLocation": "5974:12:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "5957:29:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 216,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "5957:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 217,
                                        "nodeType": "ArrayTypeName",
                                        "src": "5957:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                            "typeString": "uint256[]"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 220,
                                    "mutability": "mutable",
                                    "name": "bptAmountOut",
                                    "nameLocation": "6005:12:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "5997:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 219,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5997:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 223,
                                    "mutability": "mutable",
                                    "name": "balancesScaled18",
                                    "nameLocation": "6045:16:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "6028:33:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 221,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6028:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 222,
                                        "nodeType": "ArrayTypeName",
                                        "src": "6028:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                            "typeString": "uint256[]"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 225,
                                    "mutability": "mutable",
                                    "name": "userData",
                                    "nameLocation": "6085:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "6072:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 224,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6072:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5821:279:0"
                        },
                        "returnParameters": {
                            "id": 235,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 231,
                                    "mutability": "mutable",
                                    "name": "success",
                                    "nameLocation": "6141:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "6136:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 230,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6136:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 234,
                                    "mutability": "mutable",
                                    "name": "hookAdjustedAmountsInRaw",
                                    "nameLocation": "6167:24:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 337,
                                    "src": "6150:41:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 232,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6150:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 233,
                                        "nodeType": "ArrayTypeName",
                                        "src": "6150:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                            "typeString": "uint256[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6135:57:0"
                        },
                        "scope": 484,
                        "src": "5793:1424:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 356,
                            "nodeType": "Block",
                            "src": "8049:203:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 347,
                                                    "name": "activeIncentiveFactor",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 71,
                                                    "src": "8068:21:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage",
                                                        "typeString": "struct LPIncentivizedHook.LPIncentiveFactor storage ref"
                                                    }
                                                },
                                                "id": 348,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "8090:19:0",
                                                "memberName": "amountBaseLiquidity",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 47,
                                                "src": "8068:41:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "416d6f756e7420426173652052657761726473206973206e6f7420636f6e6669677572656420666f72207468697320486f6f6b2e",
                                                "id": 349,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8110:54:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_1b67d99abc4da4796a057c6980cb1dd9a385615b987b28bf660caf10a566f8e8",
                                                    "typeString": "literal_string \"Amount Base Rewards is not configured for this Hook.\""
                                                },
                                                "value": "Amount Base Rewards is not configured for this Hook."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_1b67d99abc4da4796a057c6980cb1dd9a385615b987b28bf660caf10a566f8e8",
                                                    "typeString": "literal_string \"Amount Base Rewards is not configured for this Hook.\""
                                                }
                                            ],
                                            "id": 346,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "8060:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 350,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8060:105:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 351,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8060:105:0"
                                },
                                {
                                    "expression": {
                                        "id": 354,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 352,
                                            "name": "activeAmountBaseLiquidityParameters",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74,
                                            "src": "8176:35:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage",
                                                "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 353,
                                            "name": "_amountBaseLiquidityParameters",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 341,
                                            "src": "8214:30:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_memory_ptr",
                                                "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters memory"
                                            }
                                        },
                                        "src": "8176:68:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage",
                                            "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters storage ref"
                                        }
                                    },
                                    "id": 355,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8176:68:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 338,
                            "nodeType": "StructuredDocumentation",
                            "src": "7689:224:0",
                            "text": " @dev Sets the Amount based liquidity rewards parameters for the hook\n This function must be permissioned.\n @param _amountBaseLiquidityParameters The amount base liquidity parameters"
                        },
                        "functionSelector": "ec93c2d2",
                        "id": 357,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 344,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 343,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "8039:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 3169,
                                    "src": "8039:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "8039:9:0"
                            }
                        ],
                        "name": "setAmountBaseLiquidityParameters",
                        "nameLocation": "7928:32:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 342,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 341,
                                    "mutability": "mutable",
                                    "name": "_amountBaseLiquidityParameters",
                                    "nameLocation": "7998:30:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 357,
                                    "src": "7961:67:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_memory_ptr",
                                        "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters"
                                    },
                                    "typeName": {
                                        "id": 340,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 339,
                                            "name": "AmountBaseLiquidityParameters",
                                            "nameLocations": [
                                                "7961:29:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 59,
                                            "src": "7961:29:0"
                                        },
                                        "referencedDeclaration": 59,
                                        "src": "7961:29:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage_ptr",
                                            "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7960:69:0"
                        },
                        "returnParameters": {
                            "id": 345,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8049:0:0"
                        },
                        "scope": 484,
                        "src": "7919:333:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 376,
                            "nodeType": "Block",
                            "src": "8608:195:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 367,
                                                    "name": "activeIncentiveFactor",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 71,
                                                    "src": "8627:21:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage",
                                                        "typeString": "struct LPIncentivizedHook.LPIncentiveFactor storage ref"
                                                    }
                                                },
                                                "id": 368,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "8649:17:0",
                                                "memberName": "timeBaseLiquidity",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 49,
                                                "src": "8627:39:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "54696d6520426173652052657761726473206973206e6f7420636f6e6669677572656420666f72207468697320486f6f6b2e",
                                                "id": 369,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8667:52:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8547d7d0e4f07cab9978e2dabd7f51512e4e009423b0221a8c8bdd100a7cb24a",
                                                    "typeString": "literal_string \"Time Base Rewards is not configured for this Hook.\""
                                                },
                                                "value": "Time Base Rewards is not configured for this Hook."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8547d7d0e4f07cab9978e2dabd7f51512e4e009423b0221a8c8bdd100a7cb24a",
                                                    "typeString": "literal_string \"Time Base Rewards is not configured for this Hook.\""
                                                }
                                            ],
                                            "id": 366,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "8619:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 370,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8619:101:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 371,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8619:101:0"
                                },
                                {
                                    "expression": {
                                        "id": 374,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 372,
                                            "name": "activeTimeBaseLiquidityParameters",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 77,
                                            "src": "8731:33:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage",
                                                "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 373,
                                            "name": "_timeBaseLiquidityParameters",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 361,
                                            "src": "8767:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_memory_ptr",
                                                "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters memory"
                                            }
                                        },
                                        "src": "8731:64:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage",
                                            "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters storage ref"
                                        }
                                    },
                                    "id": 375,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8731:64:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 358,
                            "nodeType": "StructuredDocumentation",
                            "src": "8260:218:0",
                            "text": " @dev Sets the Time based liquidity rewards parameters for the hook\n This function must be permissioned.\n @param _timeBaseLiquidityParameters The time base liquidity parameters"
                        },
                        "functionSelector": "6683635f",
                        "id": 377,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 364,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 363,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "8598:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 3169,
                                    "src": "8598:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "8598:9:0"
                            }
                        ],
                        "name": "setTimeBaseLiquidityParameters",
                        "nameLocation": "8493:30:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 362,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 361,
                                    "mutability": "mutable",
                                    "name": "_timeBaseLiquidityParameters",
                                    "nameLocation": "8559:28:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 377,
                                    "src": "8524:63:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_memory_ptr",
                                        "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters"
                                    },
                                    "typeName": {
                                        "id": 360,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 359,
                                            "name": "TimeBaseLiquidityParameters",
                                            "nameLocations": [
                                                "8524:27:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 68,
                                            "src": "8524:27:0"
                                        },
                                        "referencedDeclaration": 68,
                                        "src": "8524:27:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage_ptr",
                                            "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "8523:65:0"
                        },
                        "returnParameters": {
                            "id": 365,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8608:0:0"
                        },
                        "scope": 484,
                        "src": "8484:319:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 426,
                            "nodeType": "Block",
                            "src": "8902:612:0",
                            "statements": [
                                {
                                    "condition": {
                                        "id": 389,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "8916:42:0",
                                        "subExpression": {
                                            "expression": {
                                                "id": 387,
                                                "name": "activeIncentiveFactor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 71,
                                                "src": "8917:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage",
                                                    "typeString": "struct LPIncentivizedHook.LPIncentiveFactor storage ref"
                                                }
                                            },
                                            "id": 388,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8939:19:0",
                                            "memberName": "amountBaseLiquidity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 47,
                                            "src": "8917:41:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 393,
                                    "nodeType": "IfStatement",
                                    "src": "8913:81:0",
                                    "trueBody": {
                                        "id": 392,
                                        "nodeType": "Block",
                                        "src": "8959:35:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "hexValue": "30",
                                                    "id": 390,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "8981:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "functionReturnParameters": 386,
                                                "id": 391,
                                                "nodeType": "Return",
                                                "src": "8974:8:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "assignments": [
                                        396
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 396,
                                            "mutability": "mutable",
                                            "name": "info",
                                            "nameLocation": "9020:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 426,
                                            "src": "9006:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LPInfo_$45_memory_ptr",
                                                "typeString": "struct LPIncentivizedHook.LPInfo"
                                            },
                                            "typeName": {
                                                "id": 395,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 394,
                                                    "name": "LPInfo",
                                                    "nameLocations": [
                                                        "9006:6:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 45,
                                                    "src": "9006:6:0"
                                                },
                                                "referencedDeclaration": 45,
                                                "src": "9006:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LPInfo_$45_storage_ptr",
                                                    "typeString": "struct LPIncentivizedHook.LPInfo"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 402,
                                    "initialValue": {
                                        "baseExpression": {
                                            "baseExpression": {
                                                "id": 397,
                                                "name": "lpInfos",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 85,
                                                "src": "9027:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$_$",
                                                    "typeString": "mapping(address => mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo storage ref))"
                                                }
                                            },
                                            "id": 399,
                                            "indexExpression": {
                                                "id": 398,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 379,
                                                "src": "9035:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9027:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$",
                                                "typeString": "mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo storage ref)"
                                            }
                                        },
                                        "id": 401,
                                        "indexExpression": {
                                            "id": 400,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 382,
                                            "src": "9043:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3506",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9027:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LPInfo_$45_storage",
                                            "typeString": "struct LPIncentivizedHook.LPInfo storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "9006:43:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 407,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 403,
                                                "name": "info",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 396,
                                                "src": "9073:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LPInfo_$45_memory_ptr",
                                                    "typeString": "struct LPIncentivizedHook.LPInfo memory"
                                                }
                                            },
                                            "id": 404,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9078:14:0",
                                            "memberName": "totalLiquidity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 40,
                                            "src": "9073:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 405,
                                                "name": "activeAmountBaseLiquidityParameters",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 74,
                                                "src": "9095:35:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage",
                                                    "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters storage ref"
                                                }
                                            },
                                            "id": 406,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9131:28:0",
                                            "memberName": "higherLiquidityAmountTrigger",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 54,
                                            "src": "9095:64:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "9073:86:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 416,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "expression": {
                                                    "id": 412,
                                                    "name": "info",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 396,
                                                    "src": "9273:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LPInfo_$45_memory_ptr",
                                                        "typeString": "struct LPIncentivizedHook.LPInfo memory"
                                                    }
                                                },
                                                "id": 413,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "9278:14:0",
                                                "memberName": "totalLiquidity",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 40,
                                                "src": "9273:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                                "expression": {
                                                    "id": 414,
                                                    "name": "activeAmountBaseLiquidityParameters",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 74,
                                                    "src": "9295:35:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage",
                                                        "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters storage ref"
                                                    }
                                                },
                                                "id": 415,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "9331:28:0",
                                                "memberName": "mediumLiquidityAmountTrigger",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 52,
                                                "src": "9295:64:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "9273:86:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 423,
                                            "nodeType": "Block",
                                            "src": "9470:37:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "hexValue": "30",
                                                        "id": 421,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "9494:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    "functionReturnParameters": 386,
                                                    "id": 422,
                                                    "nodeType": "Return",
                                                    "src": "9487:8:0"
                                                }
                                            ]
                                        },
                                        "id": 424,
                                        "nodeType": "IfStatement",
                                        "src": "9270:237:0",
                                        "trueBody": {
                                            "id": 420,
                                            "nodeType": "Block",
                                            "src": "9360:104:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "expression": {
                                                            "id": 417,
                                                            "name": "activeAmountBaseLiquidityParameters",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 74,
                                                            "src": "9384:35:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage",
                                                                "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters storage ref"
                                                            }
                                                        },
                                                        "id": 418,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "9420:30:0",
                                                        "memberName": "mediumLiquidityAmountRewardFee",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 56,
                                                        "src": "9384:66:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 386,
                                                    "id": 419,
                                                    "nodeType": "Return",
                                                    "src": "9377:73:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 425,
                                    "nodeType": "IfStatement",
                                    "src": "9070:437:0",
                                    "trueBody": {
                                        "id": 411,
                                        "nodeType": "Block",
                                        "src": "9160:104:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "expression": {
                                                        "id": 408,
                                                        "name": "activeAmountBaseLiquidityParameters",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 74,
                                                        "src": "9184:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_AmountBaseLiquidityParameters_$59_storage",
                                                            "typeString": "struct LPIncentivizedHook.AmountBaseLiquidityParameters storage ref"
                                                        }
                                                    },
                                                    "id": 409,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "9220:30:0",
                                                    "memberName": "higherLiquidityAmountRewardFee",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 58,
                                                    "src": "9184:66:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 386,
                                                "id": 410,
                                                "nodeType": "Return",
                                                "src": "9177:73:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "id": 427,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_calculateAmountBaseRewards",
                        "nameLocation": "8820:27:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 383,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 379,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "8856:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 427,
                                    "src": "8848:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 378,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8848:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 382,
                                    "mutability": "mutable",
                                    "name": "token",
                                    "nameLocation": "8871:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 427,
                                    "src": "8864:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$3506",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "id": 381,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 380,
                                            "name": "IERC20",
                                            "nameLocations": [
                                                "8864:6:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 3506,
                                            "src": "8864:6:0"
                                        },
                                        "referencedDeclaration": 3506,
                                        "src": "8864:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$3506",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "8847:30:0"
                        },
                        "returnParameters": {
                            "id": 386,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 385,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 427,
                                    "src": "8894:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 384,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8894:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "8893:9:0"
                        },
                        "scope": 484,
                        "src": "8811:703:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 482,
                            "nodeType": "Block",
                            "src": "9611:645:0",
                            "statements": [
                                {
                                    "condition": {
                                        "id": 439,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "9625:40:0",
                                        "subExpression": {
                                            "expression": {
                                                "id": 437,
                                                "name": "activeIncentiveFactor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 71,
                                                "src": "9626:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LPIncentiveFactor_$50_storage",
                                                    "typeString": "struct LPIncentivizedHook.LPIncentiveFactor storage ref"
                                                }
                                            },
                                            "id": 438,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9648:17:0",
                                            "memberName": "timeBaseLiquidity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 49,
                                            "src": "9626:39:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 443,
                                    "nodeType": "IfStatement",
                                    "src": "9622:79:0",
                                    "trueBody": {
                                        "id": 442,
                                        "nodeType": "Block",
                                        "src": "9666:35:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "hexValue": "30",
                                                    "id": 440,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "9688:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "functionReturnParameters": 436,
                                                "id": 441,
                                                "nodeType": "Return",
                                                "src": "9681:8:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "assignments": [
                                        446
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 446,
                                            "mutability": "mutable",
                                            "name": "info",
                                            "nameLocation": "9727:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 482,
                                            "src": "9713:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LPInfo_$45_memory_ptr",
                                                "typeString": "struct LPIncentivizedHook.LPInfo"
                                            },
                                            "typeName": {
                                                "id": 445,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 444,
                                                    "name": "LPInfo",
                                                    "nameLocations": [
                                                        "9713:6:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 45,
                                                    "src": "9713:6:0"
                                                },
                                                "referencedDeclaration": 45,
                                                "src": "9713:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LPInfo_$45_storage_ptr",
                                                    "typeString": "struct LPIncentivizedHook.LPInfo"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 452,
                                    "initialValue": {
                                        "baseExpression": {
                                            "baseExpression": {
                                                "id": 447,
                                                "name": "lpInfos",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 85,
                                                "src": "9734:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$_$",
                                                    "typeString": "mapping(address => mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo storage ref))"
                                                }
                                            },
                                            "id": 449,
                                            "indexExpression": {
                                                "id": 448,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 429,
                                                "src": "9742:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9734:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$3506_$_t_struct$_LPInfo_$45_storage_$",
                                                "typeString": "mapping(contract IERC20 => struct LPIncentivizedHook.LPInfo storage ref)"
                                            }
                                        },
                                        "id": 451,
                                        "indexExpression": {
                                            "id": 450,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 432,
                                            "src": "9750:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3506",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9734:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LPInfo_$45_storage",
                                            "typeString": "struct LPIncentivizedHook.LPInfo storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "9713:43:0"
                                },
                                {
                                    "assignments": [
                                        454
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 454,
                                            "mutability": "mutable",
                                            "name": "duration",
                                            "nameLocation": "9777:8:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 482,
                                            "src": "9769:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 453,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9769:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 460,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 459,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 455,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967292,
                                                "src": "9788:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                }
                                            },
                                            "id": 456,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9794:9:0",
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "9788:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 457,
                                                "name": "info",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 446,
                                                "src": "9806:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LPInfo_$45_memory_ptr",
                                                    "typeString": "struct LPIncentivizedHook.LPInfo memory"
                                                }
                                            },
                                            "id": 458,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9811:18:0",
                                            "memberName": "liquidityStartTime",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 42,
                                            "src": "9806:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "9788:41:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "9769:60:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 464,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 461,
                                            "name": "duration",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 454,
                                            "src": "9853:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 462,
                                                "name": "activeTimeBaseLiquidityParameters",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 77,
                                                "src": "9864:33:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage",
                                                    "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters storage ref"
                                                }
                                            },
                                            "id": 463,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9898:26:0",
                                            "memberName": "higherLiquidityTimeTrigger",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 63,
                                            "src": "9864:60:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "9853:71:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 472,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 469,
                                                "name": "duration",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 454,
                                                "src": "10034:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                                "expression": {
                                                    "id": 470,
                                                    "name": "activeTimeBaseLiquidityParameters",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 77,
                                                    "src": "10045:33:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage",
                                                        "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters storage ref"
                                                    }
                                                },
                                                "id": 471,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "10079:26:0",
                                                "memberName": "mediumLiquidityTimeTrigger",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 61,
                                                "src": "10045:60:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "10034:71:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 479,
                                            "nodeType": "Block",
                                            "src": "10212:37:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "hexValue": "30",
                                                        "id": 477,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10236:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    "functionReturnParameters": 436,
                                                    "id": 478,
                                                    "nodeType": "Return",
                                                    "src": "10229:8:0"
                                                }
                                            ]
                                        },
                                        "id": 480,
                                        "nodeType": "IfStatement",
                                        "src": "10031:218:0",
                                        "trueBody": {
                                            "id": 476,
                                            "nodeType": "Block",
                                            "src": "10106:100:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "expression": {
                                                            "id": 473,
                                                            "name": "activeTimeBaseLiquidityParameters",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 77,
                                                            "src": "10130:33:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage",
                                                                "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters storage ref"
                                                            }
                                                        },
                                                        "id": 474,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "10164:28:0",
                                                        "memberName": "mediumLiquidityTimeRewardFee",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 65,
                                                        "src": "10130:62:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 436,
                                                    "id": 475,
                                                    "nodeType": "Return",
                                                    "src": "10123:69:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 481,
                                    "nodeType": "IfStatement",
                                    "src": "9850:399:0",
                                    "trueBody": {
                                        "id": 468,
                                        "nodeType": "Block",
                                        "src": "9925:100:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "expression": {
                                                        "id": 465,
                                                        "name": "activeTimeBaseLiquidityParameters",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 77,
                                                        "src": "9949:33:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_TimeBaseLiquidityParameters_$68_storage",
                                                            "typeString": "struct LPIncentivizedHook.TimeBaseLiquidityParameters storage ref"
                                                        }
                                                    },
                                                    "id": 466,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "9983:28:0",
                                                    "memberName": "higherLiquidityTimeRewardFee",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 67,
                                                    "src": "9949:62:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 436,
                                                "id": 467,
                                                "nodeType": "Return",
                                                "src": "9942:69:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "id": 483,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_calculateTimeBaseRewards",
                        "nameLocation": "9531:25:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 433,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 429,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "9565:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 483,
                                    "src": "9557:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 428,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9557:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 432,
                                    "mutability": "mutable",
                                    "name": "token",
                                    "nameLocation": "9580:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 483,
                                    "src": "9573:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$3506",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "id": 431,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 430,
                                            "name": "IERC20",
                                            "nameLocations": [
                                                "9573:6:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 3506,
                                            "src": "9573:6:0"
                                        },
                                        "referencedDeclaration": 3506,
                                        "src": "9573:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$3506",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "9556:30:0"
                        },
                        "returnParameters": {
                            "id": 436,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 435,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 483,
                                    "src": "9603:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 434,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9603:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "9602:9:0"
                        },
                        "scope": 484,
                        "src": "9522:734:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "private"
                    }
                ],
                "scope": 485,
                "src": "1684:8575:0",
                "usedErrors": [
                    1686,
                    3124,
                    3129
                ],
                "usedEvents": [
                    94,
                    101,
                    3135
                ]
            }
        ],
        "src": "48:10213:0"
    },
    "functionHashes": {
        "activeAmountBaseLiquidityParameters()": "c9e6e6ca",
        "activeIncentiveFactor()": "6c55c747",
        "activeTimeBaseLiquidityParameters()": "08a13d6a",
        "getHookFlags()": "d77153a7",
        "lpInfos(address,address)": "b389771d",
        "onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)": "976907cc",
        "onAfterInitialize(uint256[],uint256,bytes)": "38be241d",
        "onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)": "2754888d",
        "onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))": "18b6eb55",
        "onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)": "45421ec7",
        "onBeforeInitialize(uint256[],bytes)": "1c149e28",
        "onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)": "ba5f9f40",
        "onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)": "5211fa77",
        "onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)": "a0e8f5ac",
        "onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))": "0b89f182",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "setAmountBaseLiquidityParameters((uint256,uint256,uint256,uint256))": "ec93c2d2",
        "setTimeBaseLiquidityParameters((uint256,uint256,uint256,uint256))": "6683635f",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "857200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "activeAmountBaseLiquidityParameters()": "8977",
            "activeIncentiveFactor()": "2502",
            "activeTimeBaseLiquidityParameters()": "8614",
            "getHookFlags()": "1027",
            "lpInfos(address,address)": "7126",
            "onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)": "infinite",
            "onAfterInitialize(uint256[],uint256,bytes)": "infinite",
            "onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)": "infinite",
            "onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))": "294",
            "onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)": "infinite",
            "onBeforeInitialize(uint256[],bytes)": "infinite",
            "onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)": "infinite",
            "onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)": "461",
            "onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)": "611",
            "onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))": "infinite",
            "owner()": "2521",
            "renounceOwnership()": "28270",
            "setAmountBaseLiquidityParameters((uint256,uint256,uint256,uint256))": "93499",
            "setTimeBaseLiquidityParameters((uint256,uint256,uint256,uint256))": "93285",
            "transferOwnership(address)": "28585"
        },
        "internal": {
            "_calculateAmountBaseRewards(address,contract IERC20)": "infinite",
            "_calculateTimeBaseRewards(address,contract IERC20)": "infinite"
        }
    }
}