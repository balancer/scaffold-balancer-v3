{
    "contractName": "VolatilityFeeHookV1",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "contract IVault",
                    "name": "vault",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "allowedFactory",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "router",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "SenderIsNotVault",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "getHookFlags",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "bool",
                            "name": "enableHookAdjustedAmounts",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallBeforeInitialize",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallAfterInitialize",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallComputeDynamicSwapFee",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallBeforeSwap",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallAfterSwap",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallBeforeAddLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallAfterAddLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallBeforeRemoveLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "shouldCallAfterRemoveLiquidity",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct HookFlags",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "enum AddLiquidityKind",
                    "name": "",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "amountsInRaw",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onAfterAddLiquidity",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onAfterInitialize",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "enum RemoveLiquidityKind",
                    "name": "",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "amountsOutRaw",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onAfterRemoveLiquidity",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "enum SwapKind",
                            "name": "kind",
                            "type": "uint8"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "tokenIn",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "tokenOut",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountInScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountOutScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "tokenInBalanceScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "tokenOutBalanceScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountCalculatedScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountCalculatedRaw",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "pool",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "userData",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct AfterSwapParams",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "name": "onAfterSwap",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "enum AddLiquidityKind",
                    "name": "",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onBeforeAddLiquidity",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onBeforeInitialize",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "enum RemoveLiquidityKind",
                    "name": "",
                    "type": "uint8"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onBeforeRemoveLiquidity",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "enum SwapKind",
                            "name": "kind",
                            "type": "uint8"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountGivenScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "balancesScaled18",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256",
                            "name": "indexIn",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "indexOut",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "userData",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct PoolSwapParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "onBeforeSwap",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "enum SwapKind",
                            "name": "kind",
                            "type": "uint8"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amountGivenScaled18",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "balancesScaled18",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256",
                            "name": "indexIn",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "indexOut",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "userData",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct PoolSwapParams",
                    "name": "params",
                    "type": "tuple"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "staticSwapFeePercentage",
                    "type": "uint256"
                }
            ],
            "name": "onComputeDynamicSwapFeePercentage",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "dynamicSwapFeePercentage",
                    "type": "uint256"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "factory",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "pool",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "enum TokenType",
                            "name": "tokenType",
                            "type": "uint8"
                        },
                        {
                            "internalType": "contract IRateProvider",
                            "name": "rateProvider",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "paysYieldFees",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct TokenConfig[]",
                    "name": "",
                    "type": "tuple[]"
                },
                {
                    "components": [
                        {
                            "internalType": "bool",
                            "name": "disableUnbalancedLiquidity",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "enableAddLiquidityCustom",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "enableRemoveLiquidityCustom",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "enableDonation",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct LiquidityManagement",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "name": "onRegister",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allowedFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getHookFlags\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"}],\"internalType\":\"struct HookFlags\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AfterSwapParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"onAfterSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onBeforeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"staticSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"onComputeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"dynamicSwapFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"onRegister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}]},\"kind\":\"dev\",\"methods\":{\"getHookFlags()\":{\"details\":\"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \\\"mandatory\\\" hook.\",\"returns\":{\"_0\":\"Flags indicating which hooks the contract supports\"}},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsInRaw\":\"Actual amounts of tokens added, sorted in token registration order\",\"amountsInScaled18\":\"Actual amounts of tokens added, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountOut\":\"Amount of pool tokens minted\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsInRaw, potentially modified by the hook\"}},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"details\":\"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"bptAmountOut\":\"Amount of pool tokens minted during initialization\",\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool accepts the initialization results\"}},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsOutRaw\":\"Actual amount of tokens to receive, sorted in token registration order\",\"amountsOutScaled18\":\"Scaled amount of tokens to receive, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountIn\":\"Amount of pool tokens to burn\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsOutRaw, potentially modified by the hook\"}},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"details\":\"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see above for struct definition)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amount calculated, potentially modified by the hook\"}},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"maxAmountsInScaled18\":\"Maximum amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Pool address, used to fetch pool information from the vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeInitialize(uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool wishes to proceed with initialization\"}},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"maxBptAmountIn\":\"Maximum amount of input pool tokens\",\"minAmountsOutScaled18\":\"Minimum output amounts, sorted in token registration order\",\"pool\":\"Pool address, used to fetch pool information from the vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"details\":\"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the vault (poolData, token config, etc.)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"details\":\"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.\",\"params\":{\"factory\":\"Address of the pool factory (contract deploying the pool)\",\"liquidityManagement\":\"Liquidity management flags indicating which functions are enabled\",\"pool\":\"Address of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"},\"returns\":{\"_0\":\"success True if the hook allowed the registration, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}]},\"kind\":\"user\",\"methods\":{\"getHookFlags()\":{\"notice\":\"Return the set of hooks implemented by the contract.\"},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed after adding liquidity.\"},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"notice\":\"Hook to be executed after pool initialization.\"},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed after removing liquidity.\"},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"notice\":\"Called after a swap to perform further actions once the balances have been updated by the swap.\"},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed before adding liquidity.\"},\"onBeforeInitialize(uint256[],bytes)\":{\"notice\":\"Hook executed before pool initialization.\"},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed before removing liquidity.\"},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"notice\":\"Called before a swap to give the Pool an opportunity to perform actions.\"},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"notice\":\"Hook executed when a pool is registered with a non-zero hooks contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/contracts/hooks/VolatilityFee/VolatilityFeeHookV1.sol\":\"VolatilityFeeHookV1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/contracts/hooks/VolatilityFee/VolatilityFeeHookV1.sol\":{\"keccak256\":\"0xe092ee90a74a91a1bba9d52e19dc0789c090f223c0a3afa0192d9a1160c57122\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://611149fe4bbe7b024ebdf2c853080c14628bedd2b2a9694177c6a1dd9e464306\",\"dweb:/ipfs/QmNzBoMsjHqmNQA8Pa1MpikK2XT2uwYofxb1DFxQ9ugyR7\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87\",\"dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol\":{\"keccak256\":\"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452\",\"dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c\",\"dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol\":{\"keccak256\":\"0x4c013d3d3f618620a7e1683919f0655ac9abc121274087212d6c3e1a3fd3a2a4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1250e0af94d1ffa96d82ae032592f0058898546b159ed2f00833a263e02f5a6b\",\"dweb:/ipfs/QmcS3nY3ojj8km2k9VrREYWX7vWQtBLDscpehAdQFWjhJ4\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol\":{\"keccak256\":\"0x54b871f720ca30fbbb4acb77964cbaf2c057d16e0d1dba77181e883bd51a64b0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://61a02691ecda842ae23c9fd57e1536153d069ed8ad7d0ff33155872baf020213\",\"dweb:/ipfs/QmR4V8Se3V99o5zqk6YSoggYo57GjYjPjyqxv1EsQix9RB\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol\":{\"keccak256\":\"0xfc7e6d03d16498c524ae8f47115e1123c5cc671a6d5b867f942f26f8ceb9fb15\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8dc2c64f8a1e67e26caeee07aa4212474ce3710c201884af6c66d43871c39c1f\",\"dweb:/ipfs/QmU9eNWz66zedZzBsmoZGZWeQxpdPqqy6Z83fGN1vvssWs\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouter.sol\":{\"keccak256\":\"0x56ea422e4cb83b3313e372844b0f26b14904728238342ae73872c633e5f282ac\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ff425a0bcd5e5ae0f77ac8473ec09f34a77c32395943ee86cbe914484cf9388c\",\"dweb:/ipfs/QmayxqWQEStQ2hKXz2DXBYCVavDM5b9vsrLnkR2AsuniEd\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566\",\"dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol\":{\"keccak256\":\"0x1dbaadd7cb41db8f48055ed49d4b713dccdd18679d7bcea9238843758bbfdf3f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c8e112361171a026ba049387ca19c356d30adcd163412d933f9f808229d9ca6a\",\"dweb:/ipfs/QmSmLxkZtrqLYUwGJ871nyz144oXToiFRhjitUw7RgvqGC\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol\":{\"keccak256\":\"0x9e152ebeacf41f9db62adcababc276342b9a833afd1390367779a78bbde85140\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d45d5beea9c3455994f98c1d20f6f7b337339d97cf96e62b59a5f9b42fe35037\",\"dweb:/ipfs/QmRXMtZpANEZWFDcTyUCwWwvh6N4DFXTYvM9bpW9xAroeq\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol\":{\"keccak256\":\"0xe361e2b5971aabb16b628406bd6d2cfb65a642bcf3e5a25be8e59354eaaa8c1e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://aa91598ea2fd634192f179f72b14497e26d71f709af695116908726a4119eb2a\",\"dweb:/ipfs/QmaVYnoDxN4L3KtsjMHsR5mwQaAegBzkgg4HcmxmZM3Mvt\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol\":{\"keccak256\":\"0x2b3f47cd5db9223fe3c713c67c7c6cba914d7a1c31f6ae370c6b7673d1ca7a6b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e6fe8f6d21546dc1c7701bf8dafe5041d73acc9a9df11bfb0a24ee92bbb3284c\",\"dweb:/ipfs/QmZggds12GD7fTARnS6y6UAD2xEEVae6MPCwDTz5fSh2Eu\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol\":{\"keccak256\":\"0x7a5c0125d6e8ad2d1d7e1d0074f2d91545f121eda2979fc256af366cc0f1c890\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d8d511f86c30b6dc11987bbbe60a6eca8132404a9c4ac8f0b4e1ec3602c6271e\",\"dweb:/ipfs/QmUPCFgU6aGhe8ukERb8dTt8CThAXqhYcHsNmeDdfpnMi6\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol\":{\"keccak256\":\"0x37d992967b0f7a04852642ce717f0d80302d0fdac3a690b2e78e84cc7c2f3e25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1d9942791102c60be9f30a2a70d7978ad54f8544726af48bd1cd9a00311186a1\",\"dweb:/ipfs/Qmc3BPkptagjf28ZJQ22Snn39AZ2afC8UDSpm5XrAr9dZQ\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/FixedPoint.sol\":{\"keccak256\":\"0x25c8e634d9ef59a1ad45c90f084e4a2df3db800ae7904556fc75c3f0bfcdcc4c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6ba69920cfc9218082c6688ce7af0467fedb0cac895f1c6d7ef45ca4228b6a14\",\"dweb:/ipfs/QmWw6sDUZiCWxjmZwxr5XYr6PFVGga63te5CdqK5mRNcBK\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/LogExpMath.sol\":{\"keccak256\":\"0x70449e2b423b9850e39adddd7301205aa8b6e9e4ae788fd44d0968cac018eb2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce2174a3629b45dca032f9cf53df35dea240626913b8882a9e2da21610b02796\",\"dweb:/ipfs/Qmf8E4DePnZXjqb3V4A38gSobjgRK6VqavqPByuXvJxtBG\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0xe59189b0efa1fe42594003a32fa138c5b75c7c1425d5138119cbd1f4487f79d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edce8000a0cb854d2a35a1f301804128808c3ec055c85c0bbe371a8b2f179deb\",\"dweb:/ipfs/QmaZcZASEowAFGaMieJXF3wWamY6Md7Kx8dFxGZ9eDkNDx\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol\":{\"keccak256\":\"0x1ed7976bf1eccab8ee4eb3e4e0dccdac78ed36c45d108a889916e6ca7a82ca48\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ff909c70d2cc024af1e9be95f1412758fed28e94716db26e19da16c9d4b3f4ac\",\"dweb:/ipfs/QmYwpWG9ci4zJLu7xADn4ncCQfoFarpptpPYonQeuDuxtr\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol\":{\"keccak256\":\"0x4bc30a16b6371b2d6e0b9a1a72bd76b5648a59bb9a554823cbdb2b6e2e41c876\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://da06d46e5d606e22337c3600a667cb44534e79be862ba0452154f77820108979\",\"dweb:/ipfs/QmXFVbi1qNG4aCCJ2L6HgQdHbnUgw9QKNfNgy2vvtgSycm\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
    "bytecode": "60e0346100f757601f610d1738819003918201601f19168301916001600160401b038311848410176100fb578084926060946040528339810103126100f7578051906001600160a01b03821682036100f75761006960406100626020840161010f565b920161010f565b33156100e4575f8054336001600160a01b0319821681178355604051959290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360805260a05260c052610bf39081610124823960805181610674015260a05181505060c051816106b00152f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100f75756fe60806040526004361015610011575f80fd5b5f3560e01c80630b89f182146105e657806318b6eb55146105a55780631c149e28146105555780632754888d146104e757806338be241d1461049757806345421ec71461044a5780635211fa7714610411578063715018a6146103ba5780638da5cb5b14610393578063976907cc146102d1578063a0e8f5ac14610278578063ba5f9f40146101e0578063d77153a71461013c5763f2fde38b146100b3575f80fd5b34610138576020366003190112610138576100cc610825565b6100d4610aad565b6001600160a01b03168015610125575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b34610138575f36600319011261013857610154610a52565b50610140610160610a52565b61012060608201916001835260405192815115158452602082015115156020850152604082015115156040850152511515606084015260808101511515608084015260a0810151151560a084015260c0810151151560c084015260e0810151151560e0840152610100810151151561010084015201511515610120820152f35b346101385760e0366003190112610138576101f9610825565b5061020261083b565b5060046044351015610138576084356001600160401b0381116101385761022d903690600401610889565b5060a4356001600160401b0381116101385761024d903690600401610889565b5060c4356001600160401b0381116101385761026d9036906004016108e6565b5060206040515f8152f35b34610138576060366003190112610138576004356001600160401b0381116101385760e06003198236030112610138576102c36040916102b661083b565b50604435906004016109d4565b825191151582526020820152f35b3461013857610100366003190112610138576102eb610825565b506102f461083b565b5060056044351015610138576064356001600160401b0381116101385761031f903690600401610889565b506084356001600160401b0381116101385761033f903690600401610889565b60c4356001600160401b0381116101385761035e903690600401610889565b5060e435906001600160401b0382116101385761038261038f9236906004016108e6565b506040519182918261093b565b0390f35b34610138575f366003190112610138575f546040516001600160a01b039091168152602090f35b34610138575f366003190112610138576103d2610aad565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610138576040366003190112610138576004356001600160401b0381116101385760e09060031990360301126101385761026d61083b565b346101385760e036600319011261013857610463610825565b5061046c61083b565b5060056044351015610138576064356001600160401b0381116101385761022d903690600401610889565b34610138576060366003190112610138576004356001600160401b038111610138576104c7903690600401610889565b506044356001600160401b0381116101385761026d9036906004016108e6565b346101385761010036600319011261013857610501610825565b5061050a61083b565b5060046044351015610138576084356001600160401b03811161013857610535903690600401610889565b5060a4356001600160401b0381116101385761033f903690600401610889565b34610138576040366003190112610138576004356001600160401b03811161013857610585903690600401610889565b506024356001600160401b0381116101385761026d9036906004016108e6565b34610138576020366003190112610138576004356001600160401b0381116101385761018090600319903603011261013857604080515f81525f6020820152f35b346101385760e0366003190112610138576105ff610825565b61060761083b565b906044356001600160401b0381116101385736602382011215610138578060040135906024602061063784610872565b6106446040519182610851565b848152019260071b8201019036821161013857602401915b818310610784575050506080606319360112610138577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610771576001600160a01b03908116917f0000000000000000000000000000000000000000000000000000000000000000909116821490816106e8575b6020826040519015158152f35b604051636634b75360e01b81526001600160a01b0390911660048201529160209150829060249082905afa8015610766575f9061072a575b60209150826106db565b506020813d60201161075e575b8161074460209383610851565b810103126101385751801515810361013857602090610720565b3d9150610737565b6040513d5f823e3d90fd5b63089676d560e01b5f523360045260245ffd5b6080833603126101385760405190608082018281106001600160401b038211176108115760405283356001600160a01b03811681036101385782526020840135600281101561013857602083015260408401356001600160a01b0381168103610138576040830152606084013590811515820361013857826020926060608095015281520192019161065c565b634e487b7160e01b5f52604160045260245ffd5b600435906001600160a01b038216820361013857565b602435906001600160a01b038216820361013857565b90601f801991011681019081106001600160401b0382111761081157604052565b6001600160401b0381116108115760051b60200190565b9080601f830112156101385781356108a081610872565b926108ae6040519485610851565b81845260208085019260051b82010192831161013857602001905b8282106108d65750505090565b81358152602091820191016108c9565b81601f82011215610138578035906001600160401b038211610811576040519261091a601f8401601f191660200185610851565b8284526020838301011161013857815f926020809301838601378301015290565b6020606060408301925f81526040838201528451809452019201905f5b8181106109655750505090565b8251845260209384019390920191600101610958565b903590601e198136030182121561013857018035906001600160401b03821161013857602001918160051b3603831361013857565b91908110156109c05760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91905f925f813560028110156101385780610a1c575050610a179293506020610a0e610a03604084018461097b565b6060850135916109b0565b35910135610ad3565b600191565b9093929190600114610a2c575050565b90919350610a1792506020610a0e610a47604084018461097b565b6080850135916109b0565b6040519061014082018281106001600160401b03821117610811576040525f610120838281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152565b5f546001600160a01b03163303610ac057565b63118cdaa760e01b5f523360045260245ffd5b9060288102811590828104602814821715610b0c5760649004831115610b2057505050603281029080820460321490151715610b0c5790565b634e487b7160e01b5f52601160045260245ffd5b601e8202828104601e14821715610b0c5760649004831115610b5557505050601481029080820460141490151715610b0c5790565b60148202828104601414821715610b0c5760649004831115610b8a57505050600a810290808204600a1490151715610b0c5790565b600a8202918204600a141715610b0c57606490041015610bba57600581029080820460051490151715610b0c5790565b9056fea2646970667358221220beffdca6ea749b6439101173d06e3b090d6b29d424f697a6f498de1c61d8c63364736f6c634300081b0033",
    "deployedBytecode": "60806040526004361015610011575f80fd5b5f3560e01c80630b89f182146105e657806318b6eb55146105a55780631c149e28146105555780632754888d146104e757806338be241d1461049757806345421ec71461044a5780635211fa7714610411578063715018a6146103ba5780638da5cb5b14610393578063976907cc146102d1578063a0e8f5ac14610278578063ba5f9f40146101e0578063d77153a71461013c5763f2fde38b146100b3575f80fd5b34610138576020366003190112610138576100cc610825565b6100d4610aad565b6001600160a01b03168015610125575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b34610138575f36600319011261013857610154610a52565b50610140610160610a52565b61012060608201916001835260405192815115158452602082015115156020850152604082015115156040850152511515606084015260808101511515608084015260a0810151151560a084015260c0810151151560c084015260e0810151151560e0840152610100810151151561010084015201511515610120820152f35b346101385760e0366003190112610138576101f9610825565b5061020261083b565b5060046044351015610138576084356001600160401b0381116101385761022d903690600401610889565b5060a4356001600160401b0381116101385761024d903690600401610889565b5060c4356001600160401b0381116101385761026d9036906004016108e6565b5060206040515f8152f35b34610138576060366003190112610138576004356001600160401b0381116101385760e06003198236030112610138576102c36040916102b661083b565b50604435906004016109d4565b825191151582526020820152f35b3461013857610100366003190112610138576102eb610825565b506102f461083b565b5060056044351015610138576064356001600160401b0381116101385761031f903690600401610889565b506084356001600160401b0381116101385761033f903690600401610889565b60c4356001600160401b0381116101385761035e903690600401610889565b5060e435906001600160401b0382116101385761038261038f9236906004016108e6565b506040519182918261093b565b0390f35b34610138575f366003190112610138575f546040516001600160a01b039091168152602090f35b34610138575f366003190112610138576103d2610aad565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610138576040366003190112610138576004356001600160401b0381116101385760e09060031990360301126101385761026d61083b565b346101385760e036600319011261013857610463610825565b5061046c61083b565b5060056044351015610138576064356001600160401b0381116101385761022d903690600401610889565b34610138576060366003190112610138576004356001600160401b038111610138576104c7903690600401610889565b506044356001600160401b0381116101385761026d9036906004016108e6565b346101385761010036600319011261013857610501610825565b5061050a61083b565b5060046044351015610138576084356001600160401b03811161013857610535903690600401610889565b5060a4356001600160401b0381116101385761033f903690600401610889565b34610138576040366003190112610138576004356001600160401b03811161013857610585903690600401610889565b506024356001600160401b0381116101385761026d9036906004016108e6565b34610138576020366003190112610138576004356001600160401b0381116101385761018090600319903603011261013857604080515f81525f6020820152f35b346101385760e0366003190112610138576105ff610825565b61060761083b565b906044356001600160401b0381116101385736602382011215610138578060040135906024602061063784610872565b6106446040519182610851565b848152019260071b8201019036821161013857602401915b818310610784575050506080606319360112610138577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610771576001600160a01b03908116917f0000000000000000000000000000000000000000000000000000000000000000909116821490816106e8575b6020826040519015158152f35b604051636634b75360e01b81526001600160a01b0390911660048201529160209150829060249082905afa8015610766575f9061072a575b60209150826106db565b506020813d60201161075e575b8161074460209383610851565b810103126101385751801515810361013857602090610720565b3d9150610737565b6040513d5f823e3d90fd5b63089676d560e01b5f523360045260245ffd5b6080833603126101385760405190608082018281106001600160401b038211176108115760405283356001600160a01b03811681036101385782526020840135600281101561013857602083015260408401356001600160a01b0381168103610138576040830152606084013590811515820361013857826020926060608095015281520192019161065c565b634e487b7160e01b5f52604160045260245ffd5b600435906001600160a01b038216820361013857565b602435906001600160a01b038216820361013857565b90601f801991011681019081106001600160401b0382111761081157604052565b6001600160401b0381116108115760051b60200190565b9080601f830112156101385781356108a081610872565b926108ae6040519485610851565b81845260208085019260051b82010192831161013857602001905b8282106108d65750505090565b81358152602091820191016108c9565b81601f82011215610138578035906001600160401b038211610811576040519261091a601f8401601f191660200185610851565b8284526020838301011161013857815f926020809301838601378301015290565b6020606060408301925f81526040838201528451809452019201905f5b8181106109655750505090565b8251845260209384019390920191600101610958565b903590601e198136030182121561013857018035906001600160401b03821161013857602001918160051b3603831361013857565b91908110156109c05760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91905f925f813560028110156101385780610a1c575050610a179293506020610a0e610a03604084018461097b565b6060850135916109b0565b35910135610ad3565b600191565b9093929190600114610a2c575050565b90919350610a1792506020610a0e610a47604084018461097b565b6080850135916109b0565b6040519061014082018281106001600160401b03821117610811576040525f610120838281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152565b5f546001600160a01b03163303610ac057565b63118cdaa760e01b5f523360045260245ffd5b9060288102811590828104602814821715610b0c5760649004831115610b2057505050603281029080820460321490151715610b0c5790565b634e487b7160e01b5f52601160045260245ffd5b601e8202828104601e14821715610b0c5760649004831115610b5557505050601481029080820460141490151715610b0c5790565b60148202828104601414821715610b0c5760649004831115610b8a57505050600a810290808204600a1490151715610b0c5790565b600a8202918204600a141715610b0c57606490041015610bba57600581029080820460051490151715610b0c5790565b9056fea2646970667358221220beffdca6ea749b6439101173d06e3b090d6b29d424f697a6f498de1c61d8c63364736f6c634300081b0033",
    "sourceMap": "2034:3185:0:-:0;;;;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;2324:10;1273:26:20;1269:95;;-1:-1:-1;2034:3185:0;;2324:10;-1:-1:-1;;;;;;2034:3185:0;;;;;;;;;;2324:10;;-1:-1:-1;;;;;2034:3185:0;;3052:40:20;;-1:-1:-1;3052:40:20;547:14:19;;2346:23:0;;2379:32;;2034:3185;;;;;;547:14:19;2034:3185:0;;;;;2346:23;2034:3185;;;;2379:32;2034:3185;;;;;;1269:95:20;1322:31;;;-1:-1:-1;1322:31:20;-1:-1:-1;1322:31:20;2034:3185:0;;-1:-1:-1;1322:31:20;2034:3185:0;-1:-1:-1;2034:3185:0;;;;;;-1:-1:-1;2034:3185:0;;;;;-1:-1:-1;2034:3185:0;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;:::o",
    "deployedSourceMap": "2034:3185:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;;;:::i;:::-;1500:62:20;;:::i;:::-;-1:-1:-1;;;;;2034:3185:0;2627:22:20;;2623:91;;2034:3185:0;;;-1:-1:-1;;;;;;2034:3185:0;;;;;;-1:-1:-1;;;;;2034:3185:0;;3052:40:20;;2034:3185:0;3052:40:20;2034:3185:0;2623:91:20;2672:31;;;2034:3185:0;2672:31:20;2034:3185:0;;;;;2672:31:20;2034:3185:0;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;;;:::i;:::-;;;;;:::i;:::-;;3465:41;;;2034:3185;3509:4;2034:3185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:41;2034:3185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;3552:1015;2034:3185;;;;:::i;:::-;;;;;;;3552:1015;:::i;:::-;2034:3185;;;;;;;;;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;1500:62:20;;:::i;:::-;2034:3185:0;;;-1:-1:-1;;;;;;2034:3185:0;;;;-1:-1:-1;;;;;2034:3185:0;3052:40:20;2034:3185:0;;3052:40:20;2034:3185:0;;;;;;;-1:-1:-1;;2034:3185:0;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2034:3185:0;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2034:3185:0;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2034:3185:0;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2034:3185:0;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2034:3185:0;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:6:19;-1:-1:-1;;;;;2034:3185:0;702:10:19;:29;698:108;;-1:-1:-1;;;;;2034:3185:0;;;;2938:15;2034:3185;;;2927:26;;;;:79;;2034:3185;;;;;;;;;;;2927:79;2034:3185;;-1:-1:-1;;;2957:49:0;;-1:-1:-1;;;;;2034:3185:0;;;;2957:49;;2034:3185;;;;-1:-1:-1;2034:3185:0;;;;;;2957:49;;;;;;2034:3185;2957:49;;;2927:79;2034:3185;2927:79;;;;;2957:49;;2034:3185;2957:49;;2034:3185;2957:49;;;;;;2034:3185;2957:49;;;:::i;:::-;;;2034:3185;;;;;;;;;;;;;2957:49;;;;;;-1:-1:-1;2957:49:0;;;2034:3185;;;;;;;;;698:108:19;754:41;;;2034:3185:0;754:41:19;702:10;2034:3185:0;;;;754:41:19;2034:3185:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;:::o;:::-;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;-1:-1:-1;;2034:3185:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2034:3185:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;3552:1015;;;2034:3185;3751:32;2034:3185;;;;;;;;;3799:32;;;3925:23;;4084:63;3925:23;;;3865:26;3925:39;:23;;;;;;:::i;:::-;3949:14;;;2034:3185;3925:39;;:::i;:::-;2034:3185;3865:26;;2034:3185;4084:63;:::i;:::-;2034:3185;;4161:39::o;3796:765::-;2034:3185;;;;;;4222:33;4218:343;;3796:765;;3552:1015::o;4218:343::-;4351:23;;;;4431:65;4351:23;;4290:26;4351:40;:23;;;;;;:::i;:::-;4375:15;;;2034:3185;4351:40;;:::i;2034:3185::-;;;;;;;;;;-1:-1:-1;;;;;2034:3185:0;;;;;;;-1:-1:-1;2034:3185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:20:-;1710:6;2034:3185:0;-1:-1:-1;;;;;2034:3185:0;735:10:27;1855:23:20;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:27;1901:40:20;2034:3185:0;;1710:6:20;1901:40;4574:638:0;;4731:2;2034:3185;;;;;;;;4731:2;2034:3185;;;;;;4735:3;2034:3185;;4711:28;;4735:3;;;2034:3185;;;4789:2;2034:3185;;;;;;4789:2;2034:3185;;;;;;;4755:37;:::o;2034:3185::-;;;;;;;;;;;;4708:498;4841:2;2034:3185;;;;;4841:2;2034:3185;;;;;;4735:3;2034:3185;;4821:29;;4735:3;;;2034:3185;;;4900:2;2034:3185;;;;;;4900:2;2034:3185;;;;;;;4866:37;:::o;4818:388::-;4953:2;2034:3185;;;;;4953:2;2034:3185;;;;;;4735:3;2034:3185;;4933:29;;4735:3;;;2034:3185;;;5011:2;2034:3185;;;;;;5011:2;2034:3185;;;;;;;4977:37;:::o;4929:277::-;5064:2;2034:3185;;;;;5064:2;2034:3185;;;;;4735:3;2034:3185;;-1:-1:-1;4735:3:0;;;5122:1;2034:3185;;;;;;5122:1;2034:3185;;;;;;;5088:36;:::o;5040:166::-;5163:32;:::o",
    "sourcePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/contracts/hooks/VolatilityFee/VolatilityFeeHookV1.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.27+commit.40a35a09"
    },
    "ast": {
        "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/contracts/hooks/VolatilityFee/VolatilityFeeHookV1.sol",
        "exportedSymbols": {
            "AfterSwapParams": [
                2945
            ],
            "BaseHooks": [
                5770
            ],
            "EnumerableMap": [
                5527
            ],
            "FixedPoint": [
                3316
            ],
            "HookFlags": [
                2771
            ],
            "IBasePoolFactory": [
                365
            ],
            "IERC20": [
                6215
            ],
            "IHooks": [
                567
            ],
            "IRouter": [
                1343
            ],
            "IVault": [
                1380
            ],
            "LiquidityManagement": [
                2724
            ],
            "Ownable": [
                5967
            ],
            "PoolSwapParams": [
                2916
            ],
            "SafeERC20": [
                6567
            ],
            "SwapKind": [
                2879
            ],
            "TokenConfig": [
                2838
            ],
            "VaultGuard": [
                5819
            ],
            "VolatilityFeeHookV1": [
                279
            ]
        },
        "id": 280,
        "license": "GPL-3.0-or-later",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".24"
                ],
                "nodeType": "PragmaDirective",
                "src": "46:24:0"
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 6216,
                "src": "72:143:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6215,
                            "src": "81:6:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 5968,
                "src": "216:140:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 4,
                            "name": "Ownable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5967,
                            "src": "225:7:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                "id": 7,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 6568,
                "src": "357:155:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 6,
                            "name": "SafeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6567,
                            "src": "366:9:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol",
                "id": 9,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 568,
                "src": "514:150:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 8,
                            "name": "IHooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "523:6:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouter.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouter.sol",
                "id": 11,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 1344,
                "src": "665:152:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 10,
                            "name": "IRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "674:7:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol",
                "id": 13,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 1381,
                "src": "818:150:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 12,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "827:6:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol",
                "id": 20,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 3018,
                "src": "969:258:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 14,
                            "name": "AfterSwapParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2945,
                            "src": "982:15:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 15,
                            "name": "LiquidityManagement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2724,
                            "src": "1003:19:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 16,
                            "name": "SwapKind",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2879,
                            "src": "1028:8:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 17,
                            "name": "TokenConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2838,
                            "src": "1042:11:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 18,
                            "name": "HookFlags",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2771,
                            "src": "1059:9:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 19,
                            "name": "PoolSwapParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2916,
                            "src": "1074:14:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/EnumerableMap.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/EnumerableMap.sol",
                "id": 22,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 5528,
                "src": "1229:175:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 21,
                            "name": "EnumerableMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5527,
                            "src": "1238:13:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/FixedPoint.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/FixedPoint.sol",
                "id": 24,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 3317,
                "src": "1405:161:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 23,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3316,
                            "src": "1414:10:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol",
                "id": 26,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 5820,
                "src": "1567:147:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 25,
                            "name": "VaultGuard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5819,
                            "src": "1576:10:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol",
                "id": 28,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 5771,
                "src": "1716:145:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 27,
                            "name": "BaseHooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5770,
                            "src": "1725:9:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol",
                "file": "/Users/abin/Desktop/scaffold-balancer-v3/packages/foundry/lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol",
                "id": 30,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 280,
                "sourceUnit": 366,
                "src": "1862:170:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 29,
                            "name": "IBasePoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "1871:16:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 31,
                            "name": "BaseHooks",
                            "nameLocations": [
                                "2066:9:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5770,
                            "src": "2066:9:0"
                        },
                        "id": 32,
                        "nodeType": "InheritanceSpecifier",
                        "src": "2066:9:0"
                    },
                    {
                        "baseName": {
                            "id": 33,
                            "name": "Ownable",
                            "nameLocations": [
                                "2077:7:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5967,
                            "src": "2077:7:0"
                        },
                        "id": 34,
                        "nodeType": "InheritanceSpecifier",
                        "src": "2077:7:0"
                    },
                    {
                        "baseName": {
                            "id": 35,
                            "name": "VaultGuard",
                            "nameLocations": [
                                "2086:10:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5819,
                            "src": "2086:10:0"
                        },
                        "id": 36,
                        "nodeType": "InheritanceSpecifier",
                        "src": "2086:10:0"
                    }
                ],
                "canonicalName": "VolatilityFeeHookV1",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 279,
                "linearizedBaseContracts": [
                    279,
                    5819,
                    5967,
                    6850,
                    5770,
                    567
                ],
                "name": "VolatilityFeeHookV1",
                "nameLocation": "2043:19:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "global": false,
                        "id": 39,
                        "libraryName": {
                            "id": 37,
                            "name": "FixedPoint",
                            "nameLocations": [
                                "2109:10:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3316,
                            "src": "2109:10:0"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "2103:29:0",
                        "typeName": {
                            "id": 38,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2124:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        }
                    },
                    {
                        "constant": false,
                        "id": 41,
                        "mutability": "immutable",
                        "name": "_trustedRouter",
                        "nameLocation": "2163:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "2137:40:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 40,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2137:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "id": 43,
                        "mutability": "immutable",
                        "name": "_allowedFactory",
                        "nameLocation": "2209:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "2183:41:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 42,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2183:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 68,
                            "nodeType": "Block",
                            "src": "2336:83:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 62,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 60,
                                            "name": "_trustedRouter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41,
                                            "src": "2346:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 61,
                                            "name": "router",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 50,
                                            "src": "2363:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2346:23:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 63,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2346:23:0"
                                },
                                {
                                    "expression": {
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 64,
                                            "name": "_allowedFactory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 43,
                                            "src": "2379:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 65,
                                            "name": "allowedFactory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 48,
                                            "src": "2397:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2379:32:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 67,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2379:32:0"
                                }
                            ]
                        },
                        "id": 69,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 53,
                                        "name": "vault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "2309:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IVault_$1380",
                                            "typeString": "contract IVault"
                                        }
                                    }
                                ],
                                "id": 54,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 52,
                                    "name": "VaultGuard",
                                    "nameLocations": [
                                        "2298:10:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 5819,
                                    "src": "2298:10:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2298:17:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "expression": {
                                            "id": 56,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2324:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 57,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2328:6:0",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2324:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 58,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 55,
                                    "name": "Ownable",
                                    "nameLocations": [
                                        "2316:7:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 5967,
                                    "src": "2316:7:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2316:19:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 51,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 46,
                                    "mutability": "mutable",
                                    "name": "vault",
                                    "nameLocation": "2252:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 69,
                                    "src": "2245:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$1380",
                                        "typeString": "contract IVault"
                                    },
                                    "typeName": {
                                        "id": 45,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 44,
                                            "name": "IVault",
                                            "nameLocations": [
                                                "2245:6:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1380,
                                            "src": "2245:6:0"
                                        },
                                        "referencedDeclaration": 1380,
                                        "src": "2245:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IVault_$1380",
                                            "typeString": "contract IVault"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 48,
                                    "mutability": "mutable",
                                    "name": "allowedFactory",
                                    "nameLocation": "2266:14:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 69,
                                    "src": "2258:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2258:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 50,
                                    "mutability": "mutable",
                                    "name": "router",
                                    "nameLocation": "2290:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 69,
                                    "src": "2282:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 49,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2282:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2244:53:0"
                        },
                        "returnParameters": {
                            "id": 59,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2336:0:0"
                        },
                        "scope": 279,
                        "src": "2233:186:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            5562
                        ],
                        "body": {
                            "id": 100,
                            "nodeType": "Block",
                            "src": "2639:374:0",
                            "statements": [
                                {
                                    "expression": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 98,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 91,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 89,
                                                "name": "factory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 72,
                                                "src": "2927:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "id": 90,
                                                "name": "_allowedFactory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "2938:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "2927:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 96,
                                                    "name": "pool",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 74,
                                                    "src": "3001:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 93,
                                                            "name": "factory",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 72,
                                                            "src": "2974:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 92,
                                                        "name": "IBasePoolFactory",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 365,
                                                        "src": "2957:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IBasePoolFactory_$365_$",
                                                            "typeString": "type(contract IBasePoolFactory)"
                                                        }
                                                    },
                                                    "id": 94,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2957:25:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IBasePoolFactory_$365",
                                                        "typeString": "contract IBasePoolFactory"
                                                    }
                                                },
                                                "id": 95,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "2983:17:0",
                                                "memberName": "isPoolFromFactory",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 346,
                                                "src": "2957:43:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                                    "typeString": "function (address) view external returns (bool)"
                                                }
                                            },
                                            "id": 97,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2957:49:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "2927:79:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 88,
                                    "id": 99,
                                    "nodeType": "Return",
                                    "src": "2920:86:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 70,
                            "nodeType": "StructuredDocumentation",
                            "src": "2425:22:0",
                            "text": "@inheritdoc IHooks"
                        },
                        "functionSelector": "0b89f182",
                        "id": 101,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 85,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 84,
                                    "name": "onlyVault",
                                    "nameLocations": [
                                        "2614:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 5798,
                                    "src": "2614:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2614:9:0"
                            }
                        ],
                        "name": "onRegister",
                        "nameLocation": "2461:10:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 83,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "2605:8:0"
                        },
                        "parameters": {
                            "id": 82,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 72,
                                    "mutability": "mutable",
                                    "name": "factory",
                                    "nameLocation": "2489:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 101,
                                    "src": "2481:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 71,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2481:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 74,
                                    "mutability": "mutable",
                                    "name": "pool",
                                    "nameLocation": "2514:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 101,
                                    "src": "2506:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 73,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2506:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 78,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 101,
                                    "src": "2528:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TokenConfig_$2838_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct TokenConfig[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 76,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 75,
                                                "name": "TokenConfig",
                                                "nameLocations": [
                                                    "2528:11:0"
                                                ],
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 2838,
                                                "src": "2528:11:0"
                                            },
                                            "referencedDeclaration": 2838,
                                            "src": "2528:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenConfig_$2838_storage_ptr",
                                                "typeString": "struct TokenConfig"
                                            }
                                        },
                                        "id": 77,
                                        "nodeType": "ArrayTypeName",
                                        "src": "2528:13:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TokenConfig_$2838_storage_$dyn_storage_ptr",
                                            "typeString": "struct TokenConfig[]"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 81,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 101,
                                    "src": "2558:28:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LiquidityManagement_$2724_calldata_ptr",
                                        "typeString": "struct LiquidityManagement"
                                    },
                                    "typeName": {
                                        "id": 80,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 79,
                                            "name": "LiquidityManagement",
                                            "nameLocations": [
                                                "2558:19:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2724,
                                            "src": "2558:19:0"
                                        },
                                        "referencedDeclaration": 2724,
                                        "src": "2558:19:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LiquidityManagement_$2724_storage_ptr",
                                            "typeString": "struct LiquidityManagement"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2471:121:0"
                        },
                        "returnParameters": {
                            "id": 88,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 87,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 101,
                                    "src": "2633:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 86,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2633:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2632:6:0"
                        },
                        "scope": 279,
                        "src": "2452:561:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            5569
                        ],
                        "body": {
                            "id": 121,
                            "nodeType": "Block",
                            "src": "3118:428:0",
                            "statements": [
                                {
                                    "assignments": [
                                        111
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 111,
                                            "mutability": "mutable",
                                            "name": "hookFlags",
                                            "nameLocation": "3145:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 121,
                                            "src": "3128:26:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_HookFlags_$2771_memory_ptr",
                                                "typeString": "struct HookFlags"
                                            },
                                            "typeName": {
                                                "id": 110,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 109,
                                                    "name": "HookFlags",
                                                    "nameLocations": [
                                                        "3128:9:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 2771,
                                                    "src": "3128:9:0"
                                                },
                                                "referencedDeclaration": 2771,
                                                "src": "3128:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_HookFlags_$2771_storage_ptr",
                                                    "typeString": "struct HookFlags"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 112,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3128:26:0"
                                },
                                {
                                    "expression": {
                                        "id": 117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "id": 113,
                                                "name": "hookFlags",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 111,
                                                "src": "3465:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_HookFlags_$2771_memory_ptr",
                                                    "typeString": "struct HookFlags memory"
                                                }
                                            },
                                            "id": 115,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberLocation": "3475:31:0",
                                            "memberName": "shouldCallComputeDynamicSwapFee",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2758,
                                            "src": "3465:41:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 116,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3509:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "3465:48:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 118,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3465:48:0"
                                },
                                {
                                    "expression": {
                                        "id": 119,
                                        "name": "hookFlags",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 111,
                                        "src": "3530:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HookFlags_$2771_memory_ptr",
                                            "typeString": "struct HookFlags memory"
                                        }
                                    },
                                    "functionReturnParameters": 108,
                                    "id": 120,
                                    "nodeType": "Return",
                                    "src": "3523:16:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 102,
                            "nodeType": "StructuredDocumentation",
                            "src": "3019:22:0",
                            "text": "@inheritdoc IHooks"
                        },
                        "functionSelector": "d77153a7",
                        "id": 122,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getHookFlags",
                        "nameLocation": "3055:12:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 104,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3082:8:0"
                        },
                        "parameters": {
                            "id": 103,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3067:2:0"
                        },
                        "returnParameters": {
                            "id": 108,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 107,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 122,
                                    "src": "3100:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_HookFlags_$2771_memory_ptr",
                                        "typeString": "struct HookFlags"
                                    },
                                    "typeName": {
                                        "id": 106,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 105,
                                            "name": "HookFlags",
                                            "nameLocations": [
                                                "3100:9:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2771,
                                            "src": "3100:9:0"
                                        },
                                        "referencedDeclaration": 2771,
                                        "src": "3100:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HookFlags_$2771_storage_ptr",
                                            "typeString": "struct HookFlags"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3099:18:0"
                        },
                        "scope": 279,
                        "src": "3046:500:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            5769
                        ],
                        "body": {
                            "id": 201,
                            "nodeType": "Block",
                            "src": "3785:782:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_enum$_SwapKind_$2879",
                                            "typeString": "enum SwapKind"
                                        },
                                        "id": 141,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 137,
                                                "name": "params",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 125,
                                                "src": "3799:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                                    "typeString": "struct PoolSwapParams calldata"
                                                }
                                            },
                                            "id": 138,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3806:4:0",
                                            "memberName": "kind",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2902,
                                            "src": "3799:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SwapKind_$2879",
                                                "typeString": "enum SwapKind"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 139,
                                                "name": "SwapKind",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2879,
                                                "src": "3814:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_SwapKind_$2879_$",
                                                    "typeString": "type(enum SwapKind)"
                                                }
                                            },
                                            "id": 140,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "3823:8:0",
                                            "memberName": "EXACT_IN",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2877,
                                            "src": "3814:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_SwapKind_$2879",
                                                "typeString": "enum SwapKind"
                                            }
                                        },
                                        "src": "3799:32:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_enum$_SwapKind_$2879",
                                                "typeString": "enum SwapKind"
                                            },
                                            "id": 172,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "expression": {
                                                    "id": 168,
                                                    "name": "params",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 125,
                                                    "src": "4222:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                                        "typeString": "struct PoolSwapParams calldata"
                                                    }
                                                },
                                                "id": 169,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "4229:4:0",
                                                "memberName": "kind",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2902,
                                                "src": "4222:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_SwapKind_$2879",
                                                    "typeString": "enum SwapKind"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "expression": {
                                                    "id": 170,
                                                    "name": "SwapKind",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2879,
                                                    "src": "4237:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_enum$_SwapKind_$2879_$",
                                                        "typeString": "type(enum SwapKind)"
                                                    }
                                                },
                                                "id": 171,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberLocation": "4246:9:0",
                                                "memberName": "EXACT_OUT",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2878,
                                                "src": "4237:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_SwapKind_$2879",
                                                    "typeString": "enum SwapKind"
                                                }
                                            },
                                            "src": "4222:33:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "id": 199,
                                        "nodeType": "IfStatement",
                                        "src": "4218:343:0",
                                        "trueBody": {
                                            "id": 198,
                                            "nodeType": "Block",
                                            "src": "4256:305:0",
                                            "statements": [
                                                {
                                                    "assignments": [
                                                        174
                                                    ],
                                                    "declarations": [
                                                        {
                                                            "constant": false,
                                                            "id": 174,
                                                            "mutability": "mutable",
                                                            "name": "amountOut",
                                                            "nameLocation": "4278:9:0",
                                                            "nodeType": "VariableDeclaration",
                                                            "scope": 198,
                                                            "src": "4270:17:0",
                                                            "stateVariable": false,
                                                            "storageLocation": "default",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "typeName": {
                                                                "id": 173,
                                                                "name": "uint256",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "4270:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "visibility": "internal"
                                                        }
                                                    ],
                                                    "id": 177,
                                                    "initialValue": {
                                                        "expression": {
                                                            "id": 175,
                                                            "name": "params",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 125,
                                                            "src": "4290:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                                                "typeString": "struct PoolSwapParams calldata"
                                                            }
                                                        },
                                                        "id": 176,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "4297:19:0",
                                                        "memberName": "amountGivenScaled18",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2904,
                                                        "src": "4290:26:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "VariableDeclarationStatement",
                                                    "src": "4270:46:0"
                                                },
                                                {
                                                    "assignments": [
                                                        179
                                                    ],
                                                    "declarations": [
                                                        {
                                                            "constant": false,
                                                            "id": 179,
                                                            "mutability": "mutable",
                                                            "name": "balanceOut",
                                                            "nameLocation": "4338:10:0",
                                                            "nodeType": "VariableDeclaration",
                                                            "scope": 198,
                                                            "src": "4330:18:0",
                                                            "stateVariable": false,
                                                            "storageLocation": "default",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "typeName": {
                                                                "id": 178,
                                                                "name": "uint256",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "4330:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "visibility": "internal"
                                                        }
                                                    ],
                                                    "id": 185,
                                                    "initialValue": {
                                                        "baseExpression": {
                                                            "expression": {
                                                                "id": 180,
                                                                "name": "params",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 125,
                                                                "src": "4351:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                                                    "typeString": "struct PoolSwapParams calldata"
                                                                }
                                                            },
                                                            "id": 181,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "4358:16:0",
                                                            "memberName": "balancesScaled18",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2907,
                                                            "src": "4351:23:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                                "typeString": "uint256[] calldata"
                                                            }
                                                        },
                                                        "id": 184,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 182,
                                                                "name": "params",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 125,
                                                                "src": "4375:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                                                    "typeString": "struct PoolSwapParams calldata"
                                                                }
                                                            },
                                                            "id": 183,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "4382:8:0",
                                                            "memberName": "indexOut",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 2911,
                                                            "src": "4375:15:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "4351:40:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "VariableDeclarationStatement",
                                                    "src": "4330:61:0"
                                                },
                                                {
                                                    "expression": {
                                                        "id": 192,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                            "id": 186,
                                                            "name": "dynamicSwapFeePercentage",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 135,
                                                            "src": "4405:24:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "=",
                                                        "rightHandSide": {
                                                            "arguments": [
                                                                {
                                                                    "id": 188,
                                                                    "name": "amountOut",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 174,
                                                                    "src": "4449:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 189,
                                                                    "name": "balanceOut",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 179,
                                                                    "src": "4460:10:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 190,
                                                                    "name": "staticSwapFeePercentage",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 129,
                                                                    "src": "4472:23:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "id": 187,
                                                                "name": "_calculateSwapFee",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 278,
                                                                "src": "4431:17:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                                                }
                                                            },
                                                            "id": 191,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4431:65:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "4405:91:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 193,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "4405:91:0"
                                                },
                                                {
                                                    "expression": {
                                                        "components": [
                                                            {
                                                                "hexValue": "74727565",
                                                                "id": 194,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4518:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "true"
                                                            },
                                                            {
                                                                "id": 195,
                                                                "name": "dynamicSwapFeePercentage",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 135,
                                                                "src": "4524:24:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "id": 196,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "4517:32:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                                            "typeString": "tuple(bool,uint256)"
                                                        }
                                                    },
                                                    "functionReturnParameters": 136,
                                                    "id": 197,
                                                    "nodeType": "Return",
                                                    "src": "4510:39:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 200,
                                    "nodeType": "IfStatement",
                                    "src": "3796:765:0",
                                    "trueBody": {
                                        "id": 167,
                                        "nodeType": "Block",
                                        "src": "3832:380:0",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    143
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 143,
                                                        "mutability": "mutable",
                                                        "name": "amountIn",
                                                        "nameLocation": "3854:8:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 167,
                                                        "src": "3846:16:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 142,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3846:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 146,
                                                "initialValue": {
                                                    "expression": {
                                                        "id": 144,
                                                        "name": "params",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 125,
                                                        "src": "3865:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                                            "typeString": "struct PoolSwapParams calldata"
                                                        }
                                                    },
                                                    "id": 145,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "3872:19:0",
                                                    "memberName": "amountGivenScaled18",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2904,
                                                    "src": "3865:26:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "3846:45:0"
                                            },
                                            {
                                                "assignments": [
                                                    148
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 148,
                                                        "mutability": "mutable",
                                                        "name": "balanceIn",
                                                        "nameLocation": "3913:9:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 167,
                                                        "src": "3905:17:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 147,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3905:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 154,
                                                "initialValue": {
                                                    "baseExpression": {
                                                        "expression": {
                                                            "id": 149,
                                                            "name": "params",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 125,
                                                            "src": "3925:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                                                "typeString": "struct PoolSwapParams calldata"
                                                            }
                                                        },
                                                        "id": 150,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "3932:16:0",
                                                        "memberName": "balancesScaled18",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2907,
                                                        "src": "3925:23:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                            "typeString": "uint256[] calldata"
                                                        }
                                                    },
                                                    "id": 153,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 151,
                                                            "name": "params",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 125,
                                                            "src": "3949:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                                                "typeString": "struct PoolSwapParams calldata"
                                                            }
                                                        },
                                                        "id": 152,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "3956:7:0",
                                                        "memberName": "indexIn",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2909,
                                                        "src": "3949:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3925:39:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "3905:59:0"
                                            },
                                            {
                                                "expression": {
                                                    "id": 161,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 155,
                                                        "name": "dynamicSwapFeePercentage",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 135,
                                                        "src": "4057:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "id": 157,
                                                                "name": "amountIn",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 143,
                                                                "src": "4102:8:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "id": 158,
                                                                "name": "balanceIn",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 148,
                                                                "src": "4112:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "id": 159,
                                                                "name": "staticSwapFeePercentage",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 129,
                                                                "src": "4123:23:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "id": 156,
                                                            "name": "_calculateSwapFee",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 278,
                                                            "src": "4084:17:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 160,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4084:63:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "4057:90:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 162,
                                                "nodeType": "ExpressionStatement",
                                                "src": "4057:90:0"
                                            },
                                            {
                                                "expression": {
                                                    "components": [
                                                        {
                                                            "hexValue": "74727565",
                                                            "id": 163,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "4169:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        {
                                                            "id": 164,
                                                            "name": "dynamicSwapFeePercentage",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 135,
                                                            "src": "4175:24:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 165,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "4168:32:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                                        "typeString": "tuple(bool,uint256)"
                                                    }
                                                },
                                                "functionReturnParameters": 136,
                                                "id": 166,
                                                "nodeType": "Return",
                                                "src": "4161:39:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "a0e8f5ac",
                        "id": 202,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "onComputeDynamicSwapFeePercentage",
                        "nameLocation": "3561:33:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 131,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3719:8:0"
                        },
                        "parameters": {
                            "id": 130,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 125,
                                    "mutability": "mutable",
                                    "name": "params",
                                    "nameLocation": "3628:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 202,
                                    "src": "3604:30:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolSwapParams_$2916_calldata_ptr",
                                        "typeString": "struct PoolSwapParams"
                                    },
                                    "typeName": {
                                        "id": 124,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 123,
                                            "name": "PoolSwapParams",
                                            "nameLocations": [
                                                "3604:14:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2916,
                                            "src": "3604:14:0"
                                        },
                                        "referencedDeclaration": 2916,
                                        "src": "3604:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolSwapParams_$2916_storage_ptr",
                                            "typeString": "struct PoolSwapParams"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 127,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 202,
                                    "src": "3644:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 126,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3644:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 129,
                                    "mutability": "mutable",
                                    "name": "staticSwapFeePercentage",
                                    "nameLocation": "3677:23:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 202,
                                    "src": "3669:31:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 128,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3669:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3594:112:0"
                        },
                        "returnParameters": {
                            "id": 136,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 133,
                                    "mutability": "mutable",
                                    "name": "success",
                                    "nameLocation": "3742:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 202,
                                    "src": "3737:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 132,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3737:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 135,
                                    "mutability": "mutable",
                                    "name": "dynamicSwapFeePercentage",
                                    "nameLocation": "3759:24:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 202,
                                    "src": "3751:32:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 134,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3751:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3736:48:0"
                        },
                        "scope": 279,
                        "src": "3552:1015:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 277,
                            "nodeType": "Block",
                            "src": "4698:514:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 220,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 213,
                                            "name": "amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 204,
                                            "src": "4711:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                            "components": [
                                                {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 218,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 216,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 214,
                                                            "name": "balance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 206,
                                                            "src": "4721:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "*",
                                                        "rightExpression": {
                                                            "hexValue": "3430",
                                                            "id": 215,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "4731:2:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_40_by_1",
                                                                "typeString": "int_const 40"
                                                            },
                                                            "value": "40"
                                                        },
                                                        "src": "4721:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "/",
                                                    "rightExpression": {
                                                        "hexValue": "313030",
                                                        "id": 217,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "4735:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                    },
                                                    "src": "4721:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "id": 219,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "4720:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "4711:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 234,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 227,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 204,
                                                "src": "4821:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 232,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 230,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 228,
                                                                "name": "balance",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 206,
                                                                "src": "4831:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "*",
                                                            "rightExpression": {
                                                                "hexValue": "3330",
                                                                "id": 229,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4841:2:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_30_by_1",
                                                                    "typeString": "int_const 30"
                                                                },
                                                                "value": "30"
                                                            },
                                                            "src": "4831:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "/",
                                                        "rightExpression": {
                                                            "hexValue": "313030",
                                                            "id": 231,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "4846:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_100_by_1",
                                                                "typeString": "int_const 100"
                                                            },
                                                            "value": "100"
                                                        },
                                                        "src": "4831:18:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "id": 233,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "4830:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "4821:29:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 248,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 241,
                                                    "name": "amount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 204,
                                                    "src": "4933:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 246,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 244,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "id": 242,
                                                                    "name": "balance",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 206,
                                                                    "src": "4943:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "*",
                                                                "rightExpression": {
                                                                    "hexValue": "3230",
                                                                    "id": 243,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "4953:2:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_20_by_1",
                                                                        "typeString": "int_const 20"
                                                                    },
                                                                    "value": "20"
                                                                },
                                                                "src": "4943:12:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "/",
                                                            "rightExpression": {
                                                                "hexValue": "313030",
                                                                "id": 245,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4958:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_100_by_1",
                                                                    "typeString": "int_const 100"
                                                                },
                                                                "value": "100"
                                                            },
                                                            "src": "4943:18:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 247,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "4942:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4933:29:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 262,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 255,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 204,
                                                        "src": "5044:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": ">",
                                                    "rightExpression": {
                                                        "components": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 260,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    "id": 258,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "id": 256,
                                                                        "name": "balance",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 206,
                                                                        "src": "5054:7:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "rightExpression": {
                                                                        "hexValue": "3130",
                                                                        "id": 257,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "5064:2:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_10_by_1",
                                                                            "typeString": "int_const 10"
                                                                        },
                                                                        "value": "10"
                                                                    },
                                                                    "src": "5054:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "/",
                                                                "rightExpression": {
                                                                    "hexValue": "313030",
                                                                    "id": 259,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "5069:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_100_by_1",
                                                                        "typeString": "int_const 100"
                                                                    },
                                                                    "value": "100"
                                                                },
                                                                "src": "5054:18:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "id": 261,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "5053:20:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "5044:29:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseBody": {
                                                    "id": 272,
                                                    "nodeType": "Block",
                                                    "src": "5149:57:0",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "components": [
                                                                    {
                                                                        "id": 269,
                                                                        "name": "staticSwapFeePercentage",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 208,
                                                                        "src": "5171:23:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "id": 270,
                                                                "isConstant": false,
                                                                "isInlineArray": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "TupleExpression",
                                                                "src": "5170:25:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "functionReturnParameters": 212,
                                                            "id": 271,
                                                            "nodeType": "Return",
                                                            "src": "5163:32:0"
                                                        }
                                                    ]
                                                },
                                                "id": 273,
                                                "nodeType": "IfStatement",
                                                "src": "5040:166:0",
                                                "trueBody": {
                                                    "id": 268,
                                                    "nodeType": "Block",
                                                    "src": "5074:61:0",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "components": [
                                                                    {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 265,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "id": 263,
                                                                            "name": "staticSwapFeePercentage",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 208,
                                                                            "src": "5096:23:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "rightExpression": {
                                                                            "hexValue": "35",
                                                                            "id": 264,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "5122:1:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_5_by_1",
                                                                                "typeString": "int_const 5"
                                                                            },
                                                                            "value": "5"
                                                                        },
                                                                        "src": "5096:27:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "id": 266,
                                                                "isConstant": false,
                                                                "isInlineArray": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "TupleExpression",
                                                                "src": "5095:29:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "functionReturnParameters": 212,
                                                            "id": 267,
                                                            "nodeType": "Return",
                                                            "src": "5088:36:0"
                                                        }
                                                    ]
                                                }
                                            },
                                            "id": 274,
                                            "nodeType": "IfStatement",
                                            "src": "4929:277:0",
                                            "trueBody": {
                                                "id": 254,
                                                "nodeType": "Block",
                                                "src": "4963:62:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "components": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    "id": 251,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "id": 249,
                                                                        "name": "staticSwapFeePercentage",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 208,
                                                                        "src": "4985:23:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "rightExpression": {
                                                                        "hexValue": "3130",
                                                                        "id": 250,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "5011:2:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_10_by_1",
                                                                            "typeString": "int_const 10"
                                                                        },
                                                                        "value": "10"
                                                                    },
                                                                    "src": "4985:28:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "id": 252,
                                                            "isConstant": false,
                                                            "isInlineArray": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "TupleExpression",
                                                            "src": "4984:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "functionReturnParameters": 212,
                                                        "id": 253,
                                                        "nodeType": "Return",
                                                        "src": "4977:37:0"
                                                    }
                                                ]
                                            }
                                        },
                                        "id": 275,
                                        "nodeType": "IfStatement",
                                        "src": "4818:388:0",
                                        "trueBody": {
                                            "id": 240,
                                            "nodeType": "Block",
                                            "src": "4852:62:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "components": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 237,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "id": 235,
                                                                    "name": "staticSwapFeePercentage",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 208,
                                                                    "src": "4874:23:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "*",
                                                                "rightExpression": {
                                                                    "hexValue": "3230",
                                                                    "id": 236,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "4900:2:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_20_by_1",
                                                                        "typeString": "int_const 20"
                                                                    },
                                                                    "value": "20"
                                                                },
                                                                "src": "4874:28:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "id": 238,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "4873:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "functionReturnParameters": 212,
                                                    "id": 239,
                                                    "nodeType": "Return",
                                                    "src": "4866:37:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 276,
                                    "nodeType": "IfStatement",
                                    "src": "4708:498:0",
                                    "trueBody": {
                                        "id": 226,
                                        "nodeType": "Block",
                                        "src": "4741:62:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 223,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 221,
                                                                "name": "staticSwapFeePercentage",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 208,
                                                                "src": "4763:23:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "*",
                                                            "rightExpression": {
                                                                "hexValue": "3530",
                                                                "id": 222,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4789:2:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_50_by_1",
                                                                    "typeString": "int_const 50"
                                                                },
                                                                "value": "50"
                                                            },
                                                            "src": "4763:28:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 224,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "4762:30:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 212,
                                                "id": 225,
                                                "nodeType": "Return",
                                                "src": "4755:37:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "id": 278,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_calculateSwapFee",
                        "nameLocation": "4583:17:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 209,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 204,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "4609:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 278,
                                    "src": "4601:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 203,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4601:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 206,
                                    "mutability": "mutable",
                                    "name": "balance",
                                    "nameLocation": "4625:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 278,
                                    "src": "4617:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 205,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4617:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 208,
                                    "mutability": "mutable",
                                    "name": "staticSwapFeePercentage",
                                    "nameLocation": "4642:23:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 278,
                                    "src": "4634:31:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 207,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4634:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4600:66:0"
                        },
                        "returnParameters": {
                            "id": 212,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 211,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 278,
                                    "src": "4690:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 210,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4690:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4689:9:0"
                        },
                        "scope": 279,
                        "src": "4574:638:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 280,
                "src": "2034:3185:0",
                "usedErrors": [
                    1885,
                    5833,
                    5838
                ],
                "usedEvents": [
                    5844
                ]
            }
        ],
        "src": "46:5391:0"
    },
    "functionHashes": {
        "getHookFlags()": "d77153a7",
        "onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)": "976907cc",
        "onAfterInitialize(uint256[],uint256,bytes)": "38be241d",
        "onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)": "2754888d",
        "onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))": "18b6eb55",
        "onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)": "45421ec7",
        "onBeforeInitialize(uint256[],bytes)": "1c149e28",
        "onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)": "ba5f9f40",
        "onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)": "5211fa77",
        "onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)": "a0e8f5ac",
        "onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))": "0b89f182",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "611800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "getHookFlags()": "infinite",
            "onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)": "infinite",
            "onAfterInitialize(uint256[],uint256,bytes)": "infinite",
            "onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)": "infinite",
            "onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))": "263",
            "onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)": "infinite",
            "onBeforeInitialize(uint256[],bytes)": "infinite",
            "onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)": "infinite",
            "onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)": "431",
            "onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)": "1388",
            "onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))": "infinite",
            "owner()": "2447",
            "renounceOwnership()": "28196",
            "transferOwnership(address)": "28445"
        },
        "internal": {
            "_calculateSwapFee(uint256,uint256,uint256)": "433"
        }
    }
}