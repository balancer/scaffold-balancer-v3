{"abi":[{"type":"constructor","inputs":[{"name":"pauseWindowDuration","type":"uint32","internalType":"uint32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNewPoolPauseWindowEndTime","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getOriginalPauseWindowEndTime","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getPauseWindowDuration","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"error","name":"PoolPauseWindowDurationOverflow","inputs":[]}],"bytecode":{"object":"0x60c060405234801561000f575f80fd5b5060405161022e38038061022e83398101604081905261002e9161007a565b5f61003f63ffffffff8316426100a4565b905063ffffffff811115610066576040516368755a1160e01b815260040160405180910390fd5b63ffffffff9182166080521660a0526100c9565b5f6020828403121561008a575f80fd5b815163ffffffff8116811461009d575f80fd5b9392505050565b808201808211156100c357634e487b7160e01b5f52601160045260245ffd5b92915050565b60805160a05161013a6100f45f395f818160880152818160af015260e201525f6045015261013a5ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806378da80cb14610043578063db035ebc1461007e578063e9d56e1914610086575b5f80fd5b7f00000000000000000000000000000000000000000000000000000000000000005b60405163ffffffff909116815260200160405180910390f35b6100656100ac565b7f0000000000000000000000000000000000000000000000000000000000000000610065565b5f7f000000000000000000000000000000000000000000000000000000000000000063ffffffff1642106100df57505f90565b507f00000000000000000000000000000000000000000000000000000000000000009056fea2646970667358221220d7d3b649f2b15104062601301655407e67d9fa5d74dd692a1d6f42f375f5f75664736f6c63430008180033","sourceMap":"803:2395:48:-:0;;;1382:413;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1432:26;1461:37;;;;:15;:37;:::i;:::-;1432:66;-1:-1:-1;1047:16:48;1513:35;;1509:106;;;1571:33;;-1:-1:-1;;;1571:33:48;;;;;;;;;;;1509:106;1625:42;;;;;;1735:53;;;803:2395;;14:280:157;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;184:9;178:16;234:10;227:5;223:22;216:5;213:33;203:61;;260:1;257;250:12;203:61;283:5;14:280;-1:-1:-1;;;14:280:157:o;299:222::-;364:9;;;385:10;;;382:133;;;437:10;432:3;428:20;425:1;418:31;472:4;469:1;462:15;500:4;497:1;490:15;382:133;299:222;;;;:::o;:::-;803:2395:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b506004361061003f575f3560e01c806378da80cb14610043578063db035ebc1461007e578063e9d56e1914610086575b5f80fd5b7f00000000000000000000000000000000000000000000000000000000000000005b60405163ffffffff909116815260200160405180910390f35b6100656100ac565b7f0000000000000000000000000000000000000000000000000000000000000000610065565b5f7f000000000000000000000000000000000000000000000000000000000000000063ffffffff1642106100df57505f90565b507f00000000000000000000000000000000000000000000000000000000000000009056fea2646970667358221220d7d3b649f2b15104062601301655407e67d9fa5d74dd692a1d6f42f375f5f75664736f6c63430008180033","sourceMap":"803:2395:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:109;2053:20;1971:109;;;188:10:157;176:23;;;158:42;;146:2;131:18;1971:109:48;;;;;;;2864:332;;;:::i;2241:120::-;2330:24;2241:120;;2864:332;2925:6;3133:24;3115:42;;:15;:42;3114:75;;-1:-1:-1;3188:1:48;;2864:332::o;3114:75::-;-1:-1:-1;3161:24:48;;2864:332::o","linkReferences":{},"immutableReferences":{"8556":[{"start":69,"length":32}],"8558":[{"start":136,"length":32},{"start":175,"length":32},{"start":226,"length":32}]}},"methodIdentifiers":{"getNewPoolPauseWindowEndTime()":"db035ebc","getOriginalPauseWindowEndTime()":"e9d56e19","getPauseWindowDuration()":"78da80cb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"pauseWindowDuration\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PoolPauseWindowDurationOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getNewPoolPauseWindowEndTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOriginalPauseWindowEndTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPauseWindowDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Each pool deployment calls `getPauseWindowDuration` on the factory so that all Pools created by this factory will share the same Pause Window end time, after which both old and new Pools will not be pausable. All pools are reversibly pausable until the pause window expires. Afterward, there is an additional buffer period, set to the same duration as the Vault's buffer period. If a pool was paused, it will remain paused through this buffer period, and cannot be unpaused. When the buffer period expires, it will unpause automatically, and remain permissionless forever after.\",\"kind\":\"dev\",\"methods\":{\"getNewPoolPauseWindowEndTime()\":{\"details\":\"We intend for all pools deployed by this factory to have the same pause window end time (i.e., after this date, all future pools will be unpausable). This function will return `_poolsPauseWindowEndTime` until it passes, after which it will return 0.\",\"returns\":{\"_0\":\"The resolved pause window end time (0 indicating it's no longer pausable)\"}},\"getOriginalPauseWindowEndTime()\":{\"returns\":{\"_0\":\"The end time as a timestamp\"}},\"getPauseWindowDuration()\":{\"returns\":{\"_0\":\"The duration in seconds\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"PoolPauseWindowDurationOverflow()\":[{\"notice\":\"The factory deployer gave a duration that would overflow the Unix timestamp.\"}]},\"kind\":\"user\",\"methods\":{\"getNewPoolPauseWindowEndTime()\":{\"notice\":\"Returns the current pauseWindowEndTime that will be applied to Pools created by this factory.\"},\"getOriginalPauseWindowEndTime()\":{\"notice\":\"Returns the original factory pauseWindowEndTime, regardless of the current time.\"},\"getPauseWindowDuration()\":{\"notice\":\"Return the pause window duration. This is the time pools will be pausable after factory deployment.\"}},\"notice\":\"Base contract for v3 factories to support pause windows for pools based on the factory deployment time.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/FactoryWidePauseWindow.sol\":\"FactoryWidePauseWindow\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/FactoryWidePauseWindow.sol\":{\"keccak256\":\"0x460a0a0d240f5e071e8e35bcba1ef8b0771f0f1a0ea93cb224a5d5af35f3fda4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad6d91163e835026b653bcf6d8e3836bd98b6f936dcf30b515bc383dd14d5752\",\"dweb:/ipfs/QmRaPpYZGqLhtLKERdKayqy69RXt8K2BsWSLRSdXGrsibP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint32","name":"pauseWindowDuration","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"PoolPauseWindowDurationOverflow"},{"inputs":[],"stateMutability":"view","type":"function","name":"getNewPoolPauseWindowEndTime","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getOriginalPauseWindowEndTime","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPauseWindowDuration","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]}],"devdoc":{"kind":"dev","methods":{"getNewPoolPauseWindowEndTime()":{"details":"We intend for all pools deployed by this factory to have the same pause window end time (i.e., after this date, all future pools will be unpausable). This function will return `_poolsPauseWindowEndTime` until it passes, after which it will return 0.","returns":{"_0":"The resolved pause window end time (0 indicating it's no longer pausable)"}},"getOriginalPauseWindowEndTime()":{"returns":{"_0":"The end time as a timestamp"}},"getPauseWindowDuration()":{"returns":{"_0":"The duration in seconds"}}},"version":1},"userdoc":{"kind":"user","methods":{"getNewPoolPauseWindowEndTime()":{"notice":"Returns the current pauseWindowEndTime that will be applied to Pools created by this factory."},"getOriginalPauseWindowEndTime()":{"notice":"Returns the original factory pauseWindowEndTime, regardless of the current time."},"getPauseWindowDuration()":{"notice":"Return the pause window duration. This is the time pools will be pausable after factory deployment."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/FactoryWidePauseWindow.sol":"FactoryWidePauseWindow"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/FactoryWidePauseWindow.sol":{"keccak256":"0x460a0a0d240f5e071e8e35bcba1ef8b0771f0f1a0ea93cb224a5d5af35f3fda4","urls":["bzz-raw://ad6d91163e835026b653bcf6d8e3836bd98b6f936dcf30b515bc383dd14d5752","dweb:/ipfs/QmRaPpYZGqLhtLKERdKayqy69RXt8K2BsWSLRSdXGrsibP"],"license":"GPL-3.0-or-later"}},"version":1},"id":48}