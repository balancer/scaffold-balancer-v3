{"abi":[{"type":"function","name":"getActionId","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"error","name":"SenderNotAllowed","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SenderNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used via the `authenticate` modifier (or the `_authenticateCaller` function), which can be applied to external functions to make them only callable by authorized accounts. Derived contracts must implement the `_canPerform` function, which holds the actual access control logic.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in multi-contract systems. There are two main uses for it:  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers    unique. The contract's own address is a good option.  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier    shared by the entire family (and no other contract) should be used instead.\"},\"getActionId(bytes4)\":{\"params\":{\"selector\":\"The 4-byte selector of the permissioned function\"},\"returns\":{\"_0\":\"actionId The computed actionId\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"SenderNotAllowed()\":[{\"notice\":\"The sender does not have permission to call a function.\"}]},\"kind\":\"user\",\"methods\":{\"getActionId(bytes4)\":{\"notice\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"notice\":\"Building block for performing access control on external functions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/Authentication.sol\":\"Authentication\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87\",\"dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/Authentication.sol\":{\"keccak256\":\"0x807237870f3aaa26cd815c5f600c1d0c60861a2f962fcc341d4b80942288ab52\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://90f108409488d0c38147d2ac7b9facd694dbf1001c501136a249091788c22232\",\"dweb:/ipfs/QmRCaCCGcuL4kxBEbrpq6FfENBJk4Zo8CNe8TRusatuYJ6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"SenderNotAllowed"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"view","type":"function","name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in multi-contract systems. There are two main uses for it:  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers    unique. The contract's own address is a good option.  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier    shared by the entire family (and no other contract) should be used instead."},"getActionId(bytes4)":{"params":{"selector":"The 4-byte selector of the permissioned function"},"returns":{"_0":"actionId The computed actionId"}}},"version":1},"userdoc":{"kind":"user","methods":{"getActionId(bytes4)":{"notice":"Returns the action identifier associated with the external function described by `selector`."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/Authentication.sol":"Authentication"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"keccak256":"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2","urls":["bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87","dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/Authentication.sol":{"keccak256":"0x807237870f3aaa26cd815c5f600c1d0c60861a2f962fcc341d4b80942288ab52","urls":["bzz-raw://90f108409488d0c38147d2ac7b9facd694dbf1001c501136a249091788c22232","dweb:/ipfs/QmRCaCCGcuL4kxBEbrpq6FfENBJk4Zo8CNe8TRusatuYJ6"],"license":"GPL-3.0-or-later"}},"version":1},"ast":{"absolutePath":"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/Authentication.sol","id":8070,"exportedSymbols":{"Authentication":[8069],"IAuthentication":[3592]},"nodeType":"SourceUnit","src":"46:2723:42","nodes":[{"id":7991,"nodeType":"PragmaDirective","src":"46:24:42","nodes":[],"literals":["solidity","^","0.8",".24"]},{"id":7993,"nodeType":"ImportDirective","src":"72:116:42","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","file":"@balancer-labs/v3-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","nameLocation":"-1:-1:-1","scope":8070,"sourceUnit":3593,"symbolAliases":[{"foreign":{"id":7992,"name":"IAuthentication","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"81:15:42","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":8069,"nodeType":"ContractDefinition","src":"589:2179:42","nodes":[{"id":7998,"nodeType":"VariableDeclaration","src":"647:48:42","nodes":[],"constant":false,"mutability":"immutable","name":"_actionIdDisambiguator","nameLocation":"673:22:42","scope":8069,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"id":8009,"nodeType":"FunctionDefinition","src":"1294:106:42","nodes":[],"body":{"id":8008,"nodeType":"Block","src":"1337:63:42","nodes":[],"statements":[{"expression":{"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8004,"name":"_actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"1347:22:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8005,"name":"actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"1372:21:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1347:46:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8007,"nodeType":"ExpressionStatement","src":"1347:46:42"}]},"documentation":{"id":7999,"nodeType":"StructuredDocumentation","src":"702:587:42","text":" @dev The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in\n multi-contract systems.\n There are two main uses for it:\n  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers\n    unique. The contract's own address is a good option.\n  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier\n    shared by the entire family (and no other contract) should be used instead."},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"mutability":"mutable","name":"actionIdDisambiguator","nameLocation":"1314:21:42","nodeType":"VariableDeclaration","scope":8009,"src":"1306:29:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1306:7:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1305:31:42"},"returnParameters":{"id":8003,"nodeType":"ParameterList","parameters":[],"src":"1337:0:42"},"scope":8069,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":8017,"nodeType":"ModifierDefinition","src":"1525:73:42","nodes":[],"body":{"id":8016,"nodeType":"Block","src":"1549:49:42","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8012,"name":"_authenticateCaller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"1559:19:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1559:21:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8014,"nodeType":"ExpressionStatement","src":"1559:21:42"},{"id":8015,"nodeType":"PlaceholderStatement","src":"1590:1:42"}]},"documentation":{"id":8010,"nodeType":"StructuredDocumentation","src":"1406:114:42","text":"@dev Reverts unless the caller is allowed to call this function. Should only be applied to external functions."},"name":"authenticate","nameLocation":"1534:12:42","parameters":{"id":8011,"nodeType":"ParameterList","parameters":[],"src":"1546:2:42"},"virtual":false,"visibility":"internal"},{"id":8040,"nodeType":"FunctionDefinition","src":"1688:201:42","nodes":[],"body":{"id":8039,"nodeType":"Block","src":"1733:156:42","nodes":[],"statements":[{"assignments":[8022],"declarations":[{"constant":false,"id":8022,"mutability":"mutable","name":"actionId","nameLocation":"1751:8:42","nodeType":"VariableDeclaration","scope":8039,"src":"1743:16:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1743:7:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8027,"initialValue":{"arguments":[{"expression":{"id":8024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1774:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1778:3:42","memberName":"sig","nodeType":"MemberAccess","src":"1774:7:42","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8023,"name":"getActionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"1762:11:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bytes32_$","typeString":"function (bytes4) view returns (bytes32)"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1762:20:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1743:39:42"},{"condition":{"id":8033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:34:42","subExpression":{"arguments":[{"id":8029,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8022,"src":"1810:8:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8030,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1820:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:6:42","memberName":"sender","nodeType":"MemberAccess","src":"1820:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8028,"name":"_canPerform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"1798:11:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1798:33:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8038,"nodeType":"IfStatement","src":"1793:90:42","trueBody":{"id":8037,"nodeType":"Block","src":"1833:50:42","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8034,"name":"SenderNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"1854:16:42","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1854:18:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8036,"nodeType":"RevertStatement","src":"1847:25:42"}]}}]},"documentation":{"id":8018,"nodeType":"StructuredDocumentation","src":"1604:79:42","text":"@dev Reverts unless the caller is allowed to call the entry point function."},"implemented":true,"kind":"function","modifiers":[],"name":"_authenticateCaller","nameLocation":"1697:19:42","parameters":{"id":8019,"nodeType":"ParameterList","parameters":[],"src":"1716:2:42"},"returnParameters":{"id":8020,"nodeType":"ParameterList","parameters":[],"src":"1733:0:42"},"scope":8069,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":8058,"nodeType":"FunctionDefinition","src":"1931:430:42","nodes":[],"body":{"id":8057,"nodeType":"Block","src":"2008:353:42","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":8052,"name":"_actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"2320:22:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8053,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"2344:8:42","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8050,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2303:3:42","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2307:12:42","memberName":"encodePacked","nodeType":"MemberAccess","src":"2303:16:42","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:50:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8049,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2293:9:42","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:61:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8048,"id":8056,"nodeType":"Return","src":"2286:68:42"}]},"baseFunctions":[3591],"documentation":{"id":8041,"nodeType":"StructuredDocumentation","src":"1895:31:42","text":"@inheritdoc IAuthentication"},"functionSelector":"851c1bb3","implemented":true,"kind":"function","modifiers":[],"name":"getActionId","nameLocation":"1940:11:42","overrides":{"id":8045,"nodeType":"OverrideSpecifier","overrides":[],"src":"1981:8:42"},"parameters":{"id":8044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8043,"mutability":"mutable","name":"selector","nameLocation":"1959:8:42","nodeType":"VariableDeclaration","scope":8058,"src":"1952:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8042,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1952:6:42","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1951:17:42"},"returnParameters":{"id":8048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8058,"src":"1999:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1999:7:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1998:9:42"},"scope":8069,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":8068,"nodeType":"FunctionDefinition","src":"2676:90:42","nodes":[],"documentation":{"id":8059,"nodeType":"StructuredDocumentation","src":"2367:304:42","text":" @dev Derived contracts must implement this function to perform the actual access control logic.\n @param actionId The action identifier associated with an external function\n @param user The account performing the action\n @return success True if the action is permitted"},"implemented":false,"kind":"function","modifiers":[],"name":"_canPerform","nameLocation":"2685:11:42","parameters":{"id":8064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"actionId","nameLocation":"2705:8:42","nodeType":"VariableDeclaration","scope":8068,"src":"2697:16:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2697:7:42","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8063,"mutability":"mutable","name":"user","nameLocation":"2723:4:42","nodeType":"VariableDeclaration","scope":8068,"src":"2715:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8062,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2696:32:42"},"returnParameters":{"id":8067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8068,"src":"2760:4:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8065,"name":"bool","nodeType":"ElementaryTypeName","src":"2760:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2759:6:42"},"scope":8069,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":7995,"name":"IAuthentication","nameLocations":["625:15:42"],"nodeType":"IdentifierPath","referencedDeclaration":3592,"src":"625:15:42"},"id":7996,"nodeType":"InheritanceSpecifier","src":"625:15:42"}],"canonicalName":"Authentication","contractDependencies":[],"contractKind":"contract","documentation":{"id":7994,"nodeType":"StructuredDocumentation","src":"190:398:42","text":" @notice Building block for performing access control on external functions.\n @dev This contract is used via the `authenticate` modifier (or the `_authenticateCaller` function), which can be\n applied to external functions to make them only callable by authorized accounts.\n Derived contracts must implement the `_canPerform` function, which holds the actual access control logic."},"fullyImplemented":false,"linearizedBaseContracts":[8069,3592],"name":"Authentication","nameLocation":"607:14:42","scope":8070,"usedErrors":[3583],"usedEvents":[]}],"license":"GPL-3.0-or-later"},"id":42}