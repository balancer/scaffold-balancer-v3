{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x84496688b0b80f8e592f0db8ef82c3e7172a1658169b8f0832b522e935e216c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c98e6288d465afdbe084108995c6a8f19db173d6f068b92ef1f70f7edf6ffb3a\",\"dweb:/ipfs/QmShqKgJLqoRK2vv4sFU3iouqFGvWUbvGopbZS8Qn9Bp1X\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x84496688b0b80f8e592f0db8ef82c3e7172a1658169b8f0832b522e935e216c0","urls":["bzz-raw://c98e6288d465afdbe084108995c6a8f19db173d6f068b92ef1f70f7edf6ffb3a","dweb:/ipfs/QmShqKgJLqoRK2vv4sFU3iouqFGvWUbvGopbZS8Qn9Bp1X"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol","id":54572,"exportedSymbols":{"ReentrancyGuard":[54571]},"nodeType":"SourceUnit","src":"109:3275:108","nodes":[{"id":54504,"nodeType":"PragmaDirective","src":"109:24:108","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":54571,"nodeType":"ContractDefinition","src":"1030:2353:108","nodes":[{"id":54508,"nodeType":"VariableDeclaration","src":"1818:40:108","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:108","scope":54571,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":54507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:108","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":54511,"nodeType":"VariableDeclaration","src":"1864:36:108","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:108","scope":54571,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":54510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:108","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":54513,"nodeType":"VariableDeclaration","src":"1907:23:108","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1923:7:108","scope":54571,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":54516,"nodeType":"ErrorDefinition","src":"1994:37:108","nodes":[],"documentation":{"id":54514,"nodeType":"StructuredDocumentation","src":"1937:52:108","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:108","parameters":{"id":54515,"nodeType":"ParameterList","parameters":[],"src":"2028:2:108"}},{"id":54524,"nodeType":"FunctionDefinition","src":"2037:52:108","nodes":[],"body":{"id":54523,"nodeType":"Block","src":"2051:38:108","nodes":[],"statements":[{"expression":{"id":54521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":54519,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54513,"src":"2061:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":54520,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54508,"src":"2071:11:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":54522,"nodeType":"ExpressionStatement","src":"2061:21:108"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":54517,"nodeType":"ParameterList","parameters":[],"src":"2048:2:108"},"returnParameters":{"id":54518,"nodeType":"ParameterList","parameters":[],"src":"2051:0:108"},"scope":54571,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":54535,"nodeType":"ModifierDefinition","src":"2466:103:108","nodes":[],"body":{"id":54534,"nodeType":"Block","src":"2490:79:108","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":54527,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54551,"src":"2500:19:108","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":54528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:108","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54529,"nodeType":"ExpressionStatement","src":"2500:21:108"},{"id":54530,"nodeType":"PlaceholderStatement","src":"2531:1:108"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":54531,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54559,"src":"2542:18:108","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":54532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:108","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54533,"nodeType":"ExpressionStatement","src":"2542:20:108"}]},"documentation":{"id":54525,"nodeType":"StructuredDocumentation","src":"2095:366:108","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2475:12:108","parameters":{"id":54526,"nodeType":"ParameterList","parameters":[],"src":"2487:2:108"},"virtual":false,"visibility":"internal"},{"id":54551,"nodeType":"FunctionDefinition","src":"2575:307:108","nodes":[],"body":{"id":54550,"nodeType":"Block","src":"2614:268:108","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":54540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":54538,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54513,"src":"2702:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":54539,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54511,"src":"2713:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:108","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":54545,"nodeType":"IfStatement","src":"2698:86:108","trueBody":{"id":54544,"nodeType":"Block","src":"2722:62:108","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":54541,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54516,"src":"2743:28:108","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":54542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:108","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54543,"nodeType":"RevertStatement","src":"2736:37:108"}]}},{"expression":{"id":54548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":54546,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54513,"src":"2858:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":54547,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54511,"src":"2868:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":54549,"nodeType":"ExpressionStatement","src":"2858:17:108"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:108","parameters":{"id":54536,"nodeType":"ParameterList","parameters":[],"src":"2603:2:108"},"returnParameters":{"id":54537,"nodeType":"ParameterList","parameters":[],"src":"2614:0:108"},"scope":54571,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":54559,"nodeType":"FunctionDefinition","src":"2888:208:108","nodes":[],"body":{"id":54558,"nodeType":"Block","src":"2926:170:108","nodes":[],"statements":[{"expression":{"id":54556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":54554,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54513,"src":"3068:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":54555,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54508,"src":"3078:11:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":54557,"nodeType":"ExpressionStatement","src":"3068:21:108"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:108","parameters":{"id":54552,"nodeType":"ParameterList","parameters":[],"src":"2915:2:108"},"returnParameters":{"id":54553,"nodeType":"ParameterList","parameters":[],"src":"2926:0:108"},"scope":54571,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":54570,"nodeType":"FunctionDefinition","src":"3275:106:108","nodes":[],"body":{"id":54569,"nodeType":"Block","src":"3339:42:108","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":54567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":54565,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54513,"src":"3356:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":54566,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54511,"src":"3367:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:108","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":54564,"id":54568,"nodeType":"Return","src":"3349:25:108"}]},"documentation":{"id":54560,"nodeType":"StructuredDocumentation","src":"3102:168:108","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:108","parameters":{"id":54561,"nodeType":"ParameterList","parameters":[],"src":"3307:2:108"},"returnParameters":{"id":54564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54570,"src":"3333:4:108","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":54562,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:108","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:108"},"scope":54571,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":54505,"nodeType":"StructuredDocumentation","src":"135:894:108","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[54571],"name":"ReentrancyGuard","nameLocation":"1048:15:108","scope":54572,"usedErrors":[54516],"usedEvents":[]}],"license":"MIT"},"id":108}