{"abi":[{"type":"function","name":"accountDelta","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"delta","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addLiquidity","inputs":[{"name":"params","type":"tuple","internalType":"struct AddLiquidityParams","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"maxAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"minBptAmountOut","type":"uint256","internalType":"uint256"},{"name":"kind","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"userData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"amountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"bptAmountOut","type":"uint256","internalType":"uint256"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"addLiquidityToBuffer","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"exactSharesToIssue","type":"uint256","internalType":"uint256"},{"name":"sharesOwner","type":"address","internalType":"address"}],"outputs":[{"name":"amountUnderlyingRaw","type":"uint256","internalType":"uint256"},{"name":"amountWrappedRaw","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"addLiquidityToBufferUnbalancedForTests","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"underlyingAmount","type":"uint256","internalType":"uint256"},{"name":"wrappedAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allowance","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"areBuffersPaused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"balanceOf","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"buildTokenConfig","inputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"}],"outputs":[{"name":"tokenConfig","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"buildTokenConfig","inputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"rateProviders","type":"address[]","internalType":"contract IRateProvider[]"}],"outputs":[{"name":"tokenConfig","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"buildTokenConfig","inputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenTypes","type":"uint8[]","internalType":"enum TokenType[]"},{"name":"rateProviders","type":"address[]","internalType":"contract IRateProvider[]"},{"name":"yieldFeeFlags","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"tokenConfig","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"buildTokenConfig","inputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"rateProviders","type":"address[]","internalType":"contract IRateProvider[]"},{"name":"yieldFeeFlags","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"tokenConfig","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"burnERC20","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"collectAggregateFees","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"swapFeeAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"yieldFeeAmounts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"computeDynamicSwapFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"swapParams","type":"tuple","internalType":"struct PoolSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"computeYieldFeesDue","inputs":[{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"lastLiveBalance","type":"uint256","internalType":"uint256"},{"name":"tokenIndex","type":"uint256","internalType":"uint256"},{"name":"aggregateYieldFeePercentage","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"disableQuery","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"disableRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enableRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensurePoolNotPaused","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"ensureUnpausedAndGetVaultState","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct VaultState","components":[{"name":"isQueryDisabled","type":"bool","internalType":"bool"},{"name":"isVaultPaused","type":"bool","internalType":"bool"},{"name":"areBuffersPaused","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"ensureValidSwapAmount","inputs":[{"name":"tradeAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"ensureValidTradeAmount","inputs":[{"name":"tradeAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"erc4626BufferWrapOrUnwrap","inputs":[{"name":"params","type":"tuple","internalType":"struct BufferWrapOrUnwrapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"direction","type":"uint8","internalType":"enum WrappingDirection"},{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"amountGivenRaw","type":"uint256","internalType":"uint256"},{"name":"limitRaw","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"amountCalculatedRaw","type":"uint256","internalType":"uint256"},{"name":"amountInRaw","type":"uint256","internalType":"uint256"},{"name":"amountOutRaw","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"forceLock","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"forceUnlock","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getActionId","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getAddLiquidityCalledFlag","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getAggregateSwapFeeAmount","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAggregateYieldFeeAmount","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAuthorizer","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAuthorizer"}],"stateMutability":"view"},{"type":"function","name":"getBptRate","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"rate","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBufferAsset","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}],"outputs":[{"name":"underlyingToken","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getBufferBalance","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}],"outputs":[{"name":"underlyingBalanceRaw","type":"uint256","internalType":"uint256"},{"name":"wrappedBalanceRaw","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBufferMinimumTotalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"getBufferOwnerShares","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"liquidityOwner","type":"address","internalType":"address"}],"outputs":[{"name":"ownerShares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBufferPeriodDuration","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getBufferPeriodEndTime","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getBufferTokenBalancesBytes","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getBufferTotalShares","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}],"outputs":[{"name":"bufferShares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentLiveBalances","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getHooksConfig","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct HooksConfig","components":[{"name":"enableHookAdjustedAmounts","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallAfterInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallComputeDynamicSwapFee","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeSwap","type":"bool","internalType":"bool"},{"name":"shouldCallAfterSwap","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"hooksContract","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"getLastLiveBalances","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"lastBalancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getMaximumPoolTokens","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"getMinimumPoolTokens","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"getMinimumTradeAmount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMinimumWrapAmount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getNonzeroDeltaCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPauseWindowEndTime","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getPoolConfig","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PoolConfig","components":[{"name":"liquidityManagement","type":"tuple","internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]},{"name":"staticSwapFeePercentage","type":"uint256","internalType":"uint256"},{"name":"aggregateSwapFeePercentage","type":"uint256","internalType":"uint256"},{"name":"aggregateYieldFeePercentage","type":"uint256","internalType":"uint256"},{"name":"tokenDecimalDiffs","type":"uint40","internalType":"uint40"},{"name":"pauseWindowEndTime","type":"uint32","internalType":"uint32"},{"name":"isPoolRegistered","type":"bool","internalType":"bool"},{"name":"isPoolInitialized","type":"bool","internalType":"bool"},{"name":"isPoolPaused","type":"bool","internalType":"bool"},{"name":"isPoolInRecoveryMode","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getPoolData","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"view"},{"type":"function","name":"getPoolFactoryMock","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPoolMinimumTotalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"getPoolPausedState","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint32","internalType":"uint32"},{"name":"","type":"uint32","internalType":"uint32"},{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPoolRoleAccounts","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PoolRoleAccounts","components":[{"name":"pauseManager","type":"address","internalType":"address"},{"name":"swapFeeManager","type":"address","internalType":"address"},{"name":"poolCreator","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"getPoolTokenCountAndIndexOfToken","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPoolTokenInfo","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"lastBalancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getPoolTokenRates","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getPoolTokens","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address[]","internalType":"contract IERC20[]"}],"stateMutability":"view"},{"type":"function","name":"getProtocolFeeController","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IProtocolFeeController"}],"stateMutability":"view"},{"type":"function","name":"getRawBalances","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getReservesOf","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStaticSwapFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTokenDelta","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"getVaultAdmin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getVaultExtension","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getVaultPausedState","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint32","internalType":"uint32"},{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"guardedCheckEntered","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initialize","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"exactAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"minBptAmountOut","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"bptAmountOut","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"initializeBuffer","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"amountUnderlyingRaw","type":"uint256","internalType":"uint256"},{"name":"amountWrappedRaw","type":"uint256","internalType":"uint256"},{"name":"sharesOwner","type":"address","internalType":"address"}],"outputs":[{"name":"issuedShares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"internalGetBufferUnderlyingImbalance","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"internalGetBufferWrappedImbalance","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"isERC4626BufferInitialized","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}],"outputs":[{"name":"isBufferInitialized","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPoolInRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPoolInitialized","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPoolPaused","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPoolRegistered","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isQueryDisabled","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isUnlocked","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isVaultPaused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"loadPoolDataUpdatingBalancesAndYieldFees","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"roundingDirection","type":"uint8","internalType":"enum Rounding"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"loadPoolDataUpdatingBalancesAndYieldFeesReentrancy","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"roundingDirection","type":"uint8","internalType":"enum Rounding"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"manualAddLiquidity","inputs":[{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"params","type":"tuple","internalType":"struct AddLiquidityParams","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"maxAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"minBptAmountOut","type":"uint256","internalType":"uint256"},{"name":"kind","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"maxAmountsInScaled18","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"updatedPoolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"amountsInRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsInScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"bptAmountOut","type":"uint256","internalType":"uint256"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"manualBuildPoolSwapParams","inputs":[{"name":"vaultSwapParams","type":"tuple","internalType":"struct VaultSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"pool","type":"address","internalType":"address"},{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountGivenRaw","type":"uint256","internalType":"uint256"},{"name":"limitRaw","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"state","type":"tuple","internalType":"struct SwapState","components":[{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"}]},{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[{"name":"","type":"tuple","internalType":"struct PoolSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"view"},{"type":"function","name":"manualBurnBufferShares","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"from","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualComputeAndChargeAggregateSwapFees","inputs":[{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"totalSwapFeeAmountScaled18","type":"uint256","internalType":"uint256"},{"name":"pool","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"totalSwapFeeAmountRaw","type":"uint256","internalType":"uint256"},{"name":"aggregateSwapFeeAmountRaw","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"manualDisableRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualEnableRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualErc4626BufferWrapOrUnwrapReentrancy","inputs":[{"name":"params","type":"tuple","internalType":"struct BufferWrapOrUnwrapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"direction","type":"uint8","internalType":"enum WrappingDirection"},{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"amountGivenRaw","type":"uint256","internalType":"uint256"},{"name":"limitRaw","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"amountCalculatedRaw","type":"uint256","internalType":"uint256"},{"name":"amountInRaw","type":"uint256","internalType":"uint256"},{"name":"amountOutRaw","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"manualFindTokenIndex","inputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"manualGetAggregateSwapFeeAmount","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"manualGetAggregateYieldFeeAmount","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"manualGetIsUnlocked","inputs":[],"outputs":[{"name":"slot","type":"bytes32","internalType":"StorageSlotExtension.BooleanSlotType"}],"stateMutability":"pure"},{"type":"function","name":"manualGetNonzeroDeltaCount","inputs":[],"outputs":[{"name":"slot","type":"bytes32","internalType":"StorageSlotExtension.Uint256SlotType"}],"stateMutability":"pure"},{"type":"function","name":"manualGetPoolConfigBits","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"PoolConfigBits"}],"stateMutability":"view"},{"type":"function","name":"manualGetTokenDeltas","inputs":[],"outputs":[{"name":"slot","type":"bytes32","internalType":"TokenDeltaMappingSlotType"}],"stateMutability":"pure"},{"type":"function","name":"manualInitializePoolReentrancy","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"exactAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"minBptAmountOut","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualInternalSwap","inputs":[{"name":"vaultSwapParams","type":"tuple","internalType":"struct VaultSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"pool","type":"address","internalType":"address"},{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountGivenRaw","type":"uint256","internalType":"uint256"},{"name":"limitRaw","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"state","type":"tuple","internalType":"struct SwapState","components":[{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"}]},{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[{"name":"amountCalculatedRaw","type":"uint256","internalType":"uint256"},{"name":"amountCalculatedScaled18","type":"uint256","internalType":"uint256"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"","type":"tuple","internalType":"struct VaultSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"pool","type":"address","internalType":"address"},{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountGivenRaw","type":"uint256","internalType":"uint256"},{"name":"limitRaw","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"","type":"tuple","internalType":"struct SwapState","components":[{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"}]},{"name":"","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"manualMintBufferShares","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualMintMinimumBufferSupplyReserve","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualPausePool","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualPauseVault","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualReentrancyAddLiquidity","inputs":[{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"params","type":"tuple","internalType":"struct AddLiquidityParams","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"maxAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"minBptAmountOut","type":"uint256","internalType":"uint256"},{"name":"kind","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"maxAmountsInScaled18","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualReentrancyAddLiquidityToBuffer","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"exactSharesToIssue","type":"uint256","internalType":"uint256"},{"name":"sharesOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualReentrancyDisableRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualReentrancyInitializeBuffer","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"amountUnderlying","type":"uint256","internalType":"uint256"},{"name":"amountWrapped","type":"uint256","internalType":"uint256"},{"name":"sharesOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualReentrancyRemoveLiquidity","inputs":[{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"params","type":"tuple","internalType":"struct RemoveLiquidityParams","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"maxBptAmountIn","type":"uint256","internalType":"uint256"},{"name":"minAmountsOut","type":"uint256[]","internalType":"uint256[]"},{"name":"kind","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"minAmountsOutScaled18","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualReentrancyRemoveLiquidityFromBufferHook","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"sharesToRemove","type":"uint256","internalType":"uint256"},{"name":"sharesOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualReentrancySwap","inputs":[{"name":"vaultSwapParams","type":"tuple","internalType":"struct VaultSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"pool","type":"address","internalType":"address"},{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountGivenRaw","type":"uint256","internalType":"uint256"},{"name":"limitRaw","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"state","type":"tuple","internalType":"struct SwapState","components":[{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"}]},{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualRegisterPool","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualRegisterPoolAtTimestamp","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"timestamp","type":"uint32","internalType":"uint32"},{"name":"roleAccounts","type":"tuple","internalType":"struct PoolRoleAccounts","components":[{"name":"pauseManager","type":"address","internalType":"address"},{"name":"swapFeeManager","type":"address","internalType":"address"},{"name":"poolCreator","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualRegisterPoolPassThruTokens","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualRegisterPoolReentrancy","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokenConfig","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"},{"name":"pauseWindowEndTime","type":"uint32","internalType":"uint32"},{"name":"protocolFeeExempt","type":"bool","internalType":"bool"},{"name":"roleAccounts","type":"tuple","internalType":"struct PoolRoleAccounts","components":[{"name":"pauseManager","type":"address","internalType":"address"},{"name":"swapFeeManager","type":"address","internalType":"address"},{"name":"poolCreator","type":"address","internalType":"address"}]},{"name":"poolHooksContract","type":"address","internalType":"address"},{"name":"liquidityManagement","type":"tuple","internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualRegisterPoolWithSwapFee","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualRemoveLiquidity","inputs":[{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"params","type":"tuple","internalType":"struct RemoveLiquidityParams","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"maxBptAmountIn","type":"uint256","internalType":"uint256"},{"name":"minAmountsOut","type":"uint256[]","internalType":"uint256[]"},{"name":"kind","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"minAmountsOutScaled18","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"updatedPoolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"bptAmountIn","type":"uint256","internalType":"uint256"},{"name":"amountsOutRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsOutScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"manualSendToReentrancy","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetAccountDelta","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"delta","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetAddLiquidityCalledFlag","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"flag","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetAggregateSwapFeeAmount","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetAggregateSwapFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetAggregateYieldFeeAmount","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetAggregateYieldFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetBufferAsset","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"underlyingToken","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetBufferBalances","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"underlyingAmount","type":"uint256","internalType":"uint256"},{"name":"wrappedAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetBufferOwnerShares","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"owner","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetBufferTotalShares","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetHooksConfig","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"config","type":"tuple","internalType":"struct HooksConfig","components":[{"name":"enableHookAdjustedAmounts","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallAfterInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallComputeDynamicSwapFee","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeSwap","type":"bool","internalType":"bool"},{"name":"shouldCallAfterSwap","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"hooksContract","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetInitializedPool","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"isPoolInitialized","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetNonZeroDeltaCount","inputs":[{"name":"deltaCount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolBalances","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolConfig","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"config","type":"tuple","internalType":"struct PoolConfig","components":[{"name":"liquidityManagement","type":"tuple","internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]},{"name":"staticSwapFeePercentage","type":"uint256","internalType":"uint256"},{"name":"aggregateSwapFeePercentage","type":"uint256","internalType":"uint256"},{"name":"aggregateYieldFeePercentage","type":"uint256","internalType":"uint256"},{"name":"tokenDecimalDiffs","type":"uint40","internalType":"uint40"},{"name":"pauseWindowEndTime","type":"uint32","internalType":"uint32"},{"name":"isPoolRegistered","type":"bool","internalType":"bool"},{"name":"isPoolInitialized","type":"bool","internalType":"bool"},{"name":"isPoolPaused","type":"bool","internalType":"bool"},{"name":"isPoolInRecoveryMode","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolConfigBits","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"config","type":"bytes32","internalType":"PoolConfigBits"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolCreator","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"newPoolCreator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolPauseWindowEndTime","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolPaused","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolRegistered","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"status","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolTokenInfo","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address[]","internalType":"contract IERC20[]"},{"name":"","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolTokenInfo","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetPoolTokensAndBalances","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address[]","internalType":"contract IERC20[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetReservesOf","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"reserves","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetStaticSwapFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetVaultPaused","inputs":[{"name":"","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSetVaultState","inputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSettleReentrancy","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"paid","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"manualSettleUnwrap","inputs":[{"name":"underlyingToken","type":"address","internalType":"contract IERC20"},{"name":"wrappedToken","type":"address","internalType":"contract IERC20"},{"name":"underlyingHint","type":"uint256","internalType":"uint256"},{"name":"wrappedHint","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualSettleWrap","inputs":[{"name":"underlyingToken","type":"address","internalType":"contract IERC20"},{"name":"wrappedToken","type":"address","internalType":"contract IERC20"},{"name":"underlyingHint","type":"uint256","internalType":"uint256"},{"name":"wrappedHint","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualTransfer","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualUnpausePool","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualUnpauseVault","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualUnsafeSetStaticSwapFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"manualUpdatePoolDataLiveBalancesAndRates","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"roundingDirection","type":"uint8","internalType":"enum Rounding"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"view"},{"type":"function","name":"manuallySetSwapFee","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mintERC20","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockEnsurePoolNotInRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"mockIsUnlocked","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"mockWithInitializedPool","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"mockWithValidPercentage","inputs":[{"name":"percentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"pausePool","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseVault","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseVaultBuffers","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"quote","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"quoteAndRevert","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recoveryModeExit","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"registerPool","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokenConfig","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"},{"name":"pauseWindowEndTime","type":"uint32","internalType":"uint32"},{"name":"protocolFeeExempt","type":"bool","internalType":"bool"},{"name":"roleAccounts","type":"tuple","internalType":"struct PoolRoleAccounts","components":[{"name":"pauseManager","type":"address","internalType":"address"},{"name":"swapFeeManager","type":"address","internalType":"address"},{"name":"poolCreator","type":"address","internalType":"address"}]},{"name":"poolHooksContract","type":"address","internalType":"address"},{"name":"liquidityManagement","type":"tuple","internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeLiquidity","inputs":[{"name":"params","type":"tuple","internalType":"struct RemoveLiquidityParams","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"maxBptAmountIn","type":"uint256","internalType":"uint256"},{"name":"minAmountsOut","type":"uint256[]","internalType":"uint256[]"},{"name":"kind","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"userData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"bptAmountIn","type":"uint256","internalType":"uint256"},{"name":"amountsOut","type":"uint256[]","internalType":"uint256[]"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeLiquidityFromBuffer","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"sharesToRemove","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"removedUnderlyingBalanceRaw","type":"uint256","internalType":"uint256"},{"name":"removedWrappedBalanceRaw","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeLiquidityRecovery","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"exactBptAmountIn","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountsOut","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"sendTo","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAuthorizer","inputs":[{"name":"newAuthorizer","type":"address","internalType":"contract IAuthorizer"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setProtocolFeeController","inputs":[{"name":"newProtocolFeeController","type":"address","internalType":"contract IProtocolFeeController"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setStaticSwapFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"swapFeePercentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"settle","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"amountHint","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"credit","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"supplyCredit","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"credit","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"swap","inputs":[{"name":"vaultSwapParams","type":"tuple","internalType":"struct VaultSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"pool","type":"address","internalType":"address"},{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountGivenRaw","type":"uint256","internalType":"uint256"},{"name":"limitRaw","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"amountCalculatedRaw","type":"uint256","internalType":"uint256"},{"name":"amountInRaw","type":"uint256","internalType":"uint256"},{"name":"amountOutRaw","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"takeDebt","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"debt","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalSupply","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"unguardedCheckNotEntered","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"unlock","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"unpausePool","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unpauseVault","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unpauseVaultBuffers","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateAggregateSwapFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"newAggregateSwapFeePercentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateAggregateYieldFeePercentage","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"newAggregateYieldFeePercentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateLiveTokenBalanceInPoolData","inputs":[{"name":"poolData","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]},{"name":"newRawBalance","type":"uint256","internalType":"uint256"},{"name":"roundingDirection","type":"uint8","internalType":"enum Rounding"},{"name":"tokenIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PoolData","components":[{"name":"poolConfigBits","type":"bytes32","internalType":"PoolConfigBits"},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"tokenInfo","type":"tuple[]","internalType":"struct TokenInfo[]","components":[{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"balancesRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesLiveScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"tokenRates","type":"uint256[]","internalType":"uint256[]"},{"name":"decimalScalingFactors","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"pure"},{"type":"function","name":"vault","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IVault"}],"stateMutability":"view"},{"type":"event","name":"AggregateSwapFeePercentageChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"aggregateSwapFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AggregateYieldFeePercentageChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"aggregateYieldFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AuthorizerChanged","inputs":[{"name":"newAuthorizer","type":"address","indexed":true,"internalType":"contract IAuthorizer"}],"anonymous":false},{"type":"event","name":"BufferSharesBurned","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"burnedShares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BufferSharesMinted","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"issuedShares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LiquidityAddedToBuffer","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"amountUnderlying","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountWrapped","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LiquidityRemovedFromBuffer","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"amountUnderlying","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountWrapped","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PoolBalanceChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"liquidityProvider","type":"address","indexed":true,"internalType":"address"},{"name":"totalSupply","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"deltas","type":"int256[]","indexed":false,"internalType":"int256[]"},{"name":"swapFeeAmountsRaw","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"PoolInitialized","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PoolPausedStateChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"paused","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"PoolRecoveryModeStateChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"recoveryMode","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"PoolRegistered","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"factory","type":"address","indexed":true,"internalType":"address"},{"name":"tokenConfig","type":"tuple[]","indexed":false,"internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"swapFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"pauseWindowEndTime","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"roleAccounts","type":"tuple","indexed":false,"internalType":"struct PoolRoleAccounts","components":[{"name":"pauseManager","type":"address","internalType":"address"},{"name":"swapFeeManager","type":"address","internalType":"address"},{"name":"poolCreator","type":"address","internalType":"address"}]},{"name":"hooksConfig","type":"tuple","indexed":false,"internalType":"struct HooksConfig","components":[{"name":"enableHookAdjustedAmounts","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallAfterInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallComputeDynamicSwapFee","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeSwap","type":"bool","internalType":"bool"},{"name":"shouldCallAfterSwap","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"hooksContract","type":"address","internalType":"address"}]},{"name":"liquidityManagement","type":"tuple","indexed":false,"internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]}],"anonymous":false},{"type":"event","name":"ProtocolFeeControllerChanged","inputs":[{"name":"newProtocolFeeController","type":"address","indexed":true,"internalType":"contract IProtocolFeeController"}],"anonymous":false},{"type":"event","name":"Swap","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"tokenIn","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"tokenOut","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountOut","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"swapFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"swapFeeAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SwapFeePercentageChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"swapFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Unwrap","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"underlyingToken","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"burnedShares","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"withdrawnUnderlying","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VaultBuffersPausedStateChanged","inputs":[{"name":"paused","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"VaultPausedStateChanged","inputs":[{"name":"paused","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"VaultQueriesDisabled","inputs":[],"anonymous":false},{"type":"event","name":"Wrap","inputs":[{"name":"underlyingToken","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"depositedUnderlying","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"mintedShares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AfterAddLiquidityHookFailed","inputs":[]},{"type":"error","name":"AfterInitializeHookFailed","inputs":[]},{"type":"error","name":"AfterRemoveLiquidityHookFailed","inputs":[]},{"type":"error","name":"AfterSwapHookFailed","inputs":[]},{"type":"error","name":"AmountGivenZero","inputs":[]},{"type":"error","name":"AmountInAboveMax","inputs":[{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"AmountOutBelowMin","inputs":[{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BalanceNotSettled","inputs":[]},{"type":"error","name":"BeforeAddLiquidityHookFailed","inputs":[]},{"type":"error","name":"BeforeInitializeHookFailed","inputs":[]},{"type":"error","name":"BeforeRemoveLiquidityHookFailed","inputs":[]},{"type":"error","name":"BeforeSwapHookFailed","inputs":[]},{"type":"error","name":"BptAmountInAboveMax","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BptAmountOutBelowMin","inputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BufferAlreadyInitialized","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}]},{"type":"error","name":"BufferNotInitialized","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}]},{"type":"error","name":"BufferSharesInvalidOwner","inputs":[]},{"type":"error","name":"BufferSharesInvalidReceiver","inputs":[]},{"type":"error","name":"BufferTotalSupplyTooLow","inputs":[{"name":"totalSupply","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"CannotReceiveEth","inputs":[]},{"type":"error","name":"CannotSwapSameToken","inputs":[]},{"type":"error","name":"DoesNotSupportAddLiquidityCustom","inputs":[]},{"type":"error","name":"DoesNotSupportDonation","inputs":[]},{"type":"error","name":"DoesNotSupportRemoveLiquidityCustom","inputs":[]},{"type":"error","name":"DoesNotSupportUnbalancedLiquidity","inputs":[]},{"type":"error","name":"DynamicSwapFeeHookFailed","inputs":[]},{"type":"error","name":"ERC20InsufficientAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"allowance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InsufficientBalance","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSpender","inputs":[{"name":"spender","type":"address","internalType":"address"}]},{"type":"error","name":"FeePrecisionTooHigh","inputs":[]},{"type":"error","name":"HookAdjustedAmountInAboveMax","inputs":[{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"HookAdjustedAmountOutBelowMin","inputs":[{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"HookAdjustedSwapLimit","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"HookRegistrationFailed","inputs":[{"name":"poolHooksContract","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"poolFactory","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidAddLiquidityKind","inputs":[]},{"type":"error","name":"InvalidRemoveLiquidityKind","inputs":[]},{"type":"error","name":"InvalidToken","inputs":[]},{"type":"error","name":"InvalidTokenConfiguration","inputs":[]},{"type":"error","name":"InvalidTokenType","inputs":[]},{"type":"error","name":"InvalidUnderlyingToken","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}]},{"type":"error","name":"MaxTokens","inputs":[]},{"type":"error","name":"MinTokens","inputs":[]},{"type":"error","name":"NotEnoughBufferShares","inputs":[]},{"type":"error","name":"NotEnoughUnderlying","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"expectedUnderlyingAmount","type":"uint256","internalType":"uint256"},{"name":"actualUnderlyingAmount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotEnoughWrapped","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"expectedWrappedAmount","type":"uint256","internalType":"uint256"},{"name":"actualWrappedAmount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotVaultDelegateCall","inputs":[]},{"type":"error","name":"PauseBufferPeriodDurationTooLarge","inputs":[]},{"type":"error","name":"PercentageAboveMax","inputs":[]},{"type":"error","name":"PoolAlreadyInitialized","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolAlreadyRegistered","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolInRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolNotInRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolNotInitialized","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolNotPaused","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolNotRegistered","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolPauseWindowExpired","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolPaused","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"ProtocolFeesExceedTotalCollected","inputs":[]},{"type":"error","name":"QueriesDisabled","inputs":[]},{"type":"error","name":"QuoteResultSpoofed","inputs":[]},{"type":"error","name":"RouterNotTrusted","inputs":[]},{"type":"error","name":"SenderIsNotVault","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"SenderNotAllowed","inputs":[]},{"type":"error","name":"SwapFeePercentageTooHigh","inputs":[]},{"type":"error","name":"SwapFeePercentageTooLow","inputs":[]},{"type":"error","name":"SwapLimit","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"TokenAlreadyRegistered","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"}]},{"type":"error","name":"TokenNotRegistered","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"}]},{"type":"error","name":"TokensMismatch","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"expectedToken","type":"address","internalType":"address"},{"name":"actualToken","type":"address","internalType":"address"}]},{"type":"error","name":"TradeAmountTooSmall","inputs":[]},{"type":"error","name":"VaultBuffersArePaused","inputs":[]},{"type":"error","name":"VaultIsNotUnlocked","inputs":[]},{"type":"error","name":"VaultNotPaused","inputs":[]},{"type":"error","name":"VaultPauseWindowDurationTooLarge","inputs":[]},{"type":"error","name":"VaultPauseWindowExpired","inputs":[]},{"type":"error","name":"VaultPaused","inputs":[]},{"type":"error","name":"WrapAmountTooSmall","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}]},{"type":"error","name":"WrongProtocolFeeControllerDeployment","inputs":[]},{"type":"error","name":"WrongUnderlyingToken","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"underlyingToken","type":"address","internalType":"address"}]},{"type":"error","name":"WrongVaultAdminDeployment","inputs":[]},{"type":"error","name":"WrongVaultExtensionDeployment","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accountDelta(address,int256)":"80047e26","addLiquidity((address,address,uint256[],uint256,uint8,bytes))":"4af29ec4","addLiquidityToBuffer(address,uint256,address)":"d446e4a6","addLiquidityToBufferUnbalancedForTests(address,uint256,uint256)":"1f568ea3","allowance(address,address,address)":"927da105","approve(address,address,uint256)":"e1f21c67","areBuffersPaused()":"55cba7fe","balanceOf(address,address)":"f7888aec","buildTokenConfig(address[])":"24e7176b","buildTokenConfig(address[],address[])":"5f70f542","buildTokenConfig(address[],address[],bool[])":"e5948689","buildTokenConfig(address[],uint8[],address[],bool[])":"608256f7","burnERC20(address,address,uint256)":"1d27af68","collectAggregateFees(address)":"8f4ab9ca","computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))":"4d472bdd","computeYieldFeesDue((bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]),uint256,uint256,uint256)":"08bade29","disableQuery()":"de1a36a6","disableRecoveryMode(address)":"bffb78b2","enableRecoveryMode(address)":"dc3f574e","ensurePoolNotPaused(address)":"02e1a4aa","ensureUnpausedAndGetVaultState(address)":"e460a8a9","ensureValidSwapAmount(uint256)":"b4eb0bf9","ensureValidTradeAmount(uint256)":"2cbbf198","erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))":"43583be5","forceLock()":"6d4908c4","forceUnlock()":"7965c967","getActionId(bytes4)":"851c1bb3","getAddLiquidityCalledFlag(address)":"ace9b89b","getAggregateSwapFeeAmount(address,address)":"85e0b999","getAggregateYieldFeeAmount(address,address)":"00fdfa13","getAuthorizer()":"aaabadc5","getBptRate(address)":"4f037ee7","getBufferAsset(address)":"0387587d","getBufferBalance(address)":"4021fe0f","getBufferMinimumTotalSupply()":"26a8a991","getBufferOwnerShares(address,address)":"9385e39a","getBufferPeriodDuration()":"20c1fb7a","getBufferPeriodEndTime()":"cd51c12f","getBufferTokenBalancesBytes(address)":"e5b08ffb","getBufferTotalShares(address)":"f2784e07","getCurrentLiveBalances(address)":"535cfd8a","getHooksConfig(address)":"ce8630d4","getLastLiveBalances(address)":"3cce2585","getMaximumPoolTokens()":"2e42f4d5","getMinimumPoolTokens()":"a8175b27","getMinimumTradeAmount()":"e2cb0ba0","getMinimumWrapAmount()":"53956aa2","getNonzeroDeltaCount()":"db817187","getPauseWindowEndTime()":"8a8d123a","getPoolConfig(address)":"f29486a1","getPoolData(address)":"13d21cdf","getPoolFactoryMock()":"87a76c59","getPoolMinimumTotalSupply()":"d0965a6b","getPoolPausedState(address)":"15e32046","getPoolRoleAccounts(address)":"e9ddeb26","getPoolTokenCountAndIndexOfToken(address,address)":"c9c1661b","getPoolTokenInfo(address)":"67e0e076","getPoolTokenRates(address)":"7e361bde","getPoolTokens(address)":"ca4f2803","getProtocolFeeController()":"85f2dbd4","getRawBalances(address)":"19a24bcb","getReservesOf(address)":"96787092","getStaticSwapFeePercentage(address)":"b45090f9","getTokenDelta(address)":"9e825ff5","getVaultAdmin()":"1ba0ae45","getVaultExtension()":"b9a8effa","getVaultPausedState()":"85c8c015","guardedCheckEntered()":"a408f312","initialize(address,address,address[],uint256[],uint256,bytes)":"ba8a2be0","initializeBuffer(address,uint256,uint256,address)":"40058e35","internalGetBufferUnderlyingImbalance(address)":"2606a4de","internalGetBufferWrappedImbalance(address)":"a40f9592","isERC4626BufferInitialized(address)":"6844846b","isPoolInRecoveryMode(address)":"be7d628a","isPoolInitialized(address)":"532cec7c","isPoolPaused(address)":"6c9bc732","isPoolRegistered(address)":"c673bdaf","isQueryDisabled()":"b4aef0ab","isUnlocked()":"8380edb7","isVaultPaused()":"098401f5","loadPoolDataUpdatingBalancesAndYieldFees(address,uint8)":"0f682ba0","loadPoolDataUpdatingBalancesAndYieldFeesReentrancy(address,uint8)":"dc4402ed","manualAddLiquidity((bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]),(address,address,uint256[],uint256,uint8,bytes),uint256[])":"0790de46","manualBuildPoolSwapParams((uint8,address,address,address,uint256,uint256,bytes),(uint256,uint256,uint256,uint256),(bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]))":"16a573c2","manualBurnBufferShares(address,address,uint256)":"e8338894","manualComputeAndChargeAggregateSwapFees((bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]),uint256,address,address,uint256)":"be6b4d2a","manualDisableRecoveryMode(address)":"7578abb9","manualEnableRecoveryMode(address)":"27521d0c","manualErc4626BufferWrapOrUnwrapReentrancy((uint8,uint8,address,uint256,uint256))":"370bc8da","manualFindTokenIndex(address[],address)":"ebfeb0a1","manualGetAggregateSwapFeeAmount(address,address)":"36918d6e","manualGetAggregateYieldFeeAmount(address,address)":"8f5aeb4b","manualGetIsUnlocked()":"b2469499","manualGetNonzeroDeltaCount()":"155075e6","manualGetPoolConfigBits(address)":"557dba68","manualGetTokenDeltas()":"1f4475c5","manualInitializePoolReentrancy(address,address,address[],uint256[],uint256,bytes)":"809846d1","manualInternalSwap((uint8,address,address,address,uint256,uint256,bytes),(uint256,uint256,uint256,uint256),(bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]))":"25b6a844","manualMintBufferShares(address,address,uint256)":"6b230291","manualMintMinimumBufferSupplyReserve(address)":"e99ac9a3","manualPausePool(address)":"1558356e","manualPauseVault()":"071d8a02","manualReentrancyAddLiquidity((bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]),(address,address,uint256[],uint256,uint8,bytes),uint256[])":"eeda9991","manualReentrancyAddLiquidityToBuffer(address,uint256,address)":"91b77cf3","manualReentrancyDisableRecoveryMode(address)":"16df26cb","manualReentrancyInitializeBuffer(address,uint256,uint256,address)":"25002fcf","manualReentrancyRemoveLiquidity((bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]),(address,address,uint256,uint256[],uint8,bytes),uint256[])":"28121e27","manualReentrancyRemoveLiquidityFromBufferHook(address,uint256,address)":"3828ecad","manualReentrancySwap((uint8,address,address,address,uint256,uint256,bytes),(uint256,uint256,uint256,uint256),(bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]))":"96e74a27","manualRegisterPool(address,address[])":"851c65a3","manualRegisterPoolAtTimestamp(address,address[],uint32,(address,address,address))":"0362a513","manualRegisterPoolPassThruTokens(address,address[])":"32333ce6","manualRegisterPoolReentrancy(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))":"e68010c6","manualRegisterPoolWithSwapFee(address,address[],uint256)":"1f495f79","manualRemoveLiquidity((bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]),(address,address,uint256,uint256[],uint8,bytes),uint256[])":"f1320097","manualSendToReentrancy(address,address,uint256)":"d01a3269","manualSetAccountDelta(address,int256)":"d0643b8c","manualSetAddLiquidityCalledFlag(address,bool)":"e2ddce11","manualSetAggregateSwapFeeAmount(address,address,uint256)":"44ea8763","manualSetAggregateSwapFeePercentage(address,uint256)":"cfcc2209","manualSetAggregateYieldFeeAmount(address,address,uint256)":"7004b0f1","manualSetAggregateYieldFeePercentage(address,uint256)":"920af066","manualSetBufferAsset(address,address)":"ab62c2b6","manualSetBufferBalances(address,uint256,uint256)":"0ee4cdd8","manualSetBufferOwnerShares(address,address,uint256)":"ff44deab","manualSetBufferTotalShares(address,uint256)":"3cb5b2af","manualSetHooksConfig(address,(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address))":"c1fdcd62","manualSetInitializedPool(address,bool)":"5e3e00fa","manualSetNonZeroDeltaCount(uint256)":"5eeae6eb","manualSetPoolBalances(address,uint256[],uint256[])":"1c4e1e23","manualSetPoolConfig(address,((bool,bool,bool,bool),uint256,uint256,uint256,uint40,uint32,bool,bool,bool,bool))":"5c1c1c81","manualSetPoolConfigBits(address,bytes32)":"df138458","manualSetPoolCreator(address,address)":"79a2c0ac","manualSetPoolPauseWindowEndTime(address,uint32)":"0c87409b","manualSetPoolPaused(address,bool)":"cbde2b68","manualSetPoolRegistered(address,bool)":"352339ee","manualSetPoolTokenInfo(address,(address,uint8,address,bool)[])":"dab50579","manualSetPoolTokenInfo(address,address[],(uint8,address,bool)[])":"bb14e466","manualSetPoolTokensAndBalances(address,address[],uint256[],uint256[])":"d8f4cf3c","manualSetReservesOf(address,uint256)":"d64bc25d","manualSetStaticSwapFeePercentage(address,uint256)":"195aaef9","manualSetVaultPaused(bool)":"692407ae","manualSetVaultState(bool,bool)":"10c1dc41","manualSettleReentrancy(address)":"2d1c3beb","manualSettleUnwrap(address,address,uint256,uint256)":"b6f680f4","manualSettleWrap(address,address,uint256,uint256)":"ac004855","manualTransfer(address,address,uint256)":"00d7aadb","manualUnpausePool(address)":"52b9e33d","manualUnpauseVault()":"cc671ff7","manualUnsafeSetStaticSwapFeePercentage(address,uint256)":"2b766278","manualUpdatePoolDataLiveBalancesAndRates(address,(bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]),uint8)":"d86c3fef","manuallySetSwapFee(address,uint256)":"70600089","mintERC20(address,address,uint256)":"47c07e88","mockEnsurePoolNotInRecoveryMode(address)":"0b9df1f6","mockIsUnlocked()":"b8caceee","mockWithInitializedPool(address)":"62691e5f","mockWithValidPercentage(uint256)":"88e5101a","pausePool(address)":"55aca1ec","pauseVault()":"9e0879c2","pauseVaultBuffers()":"e085c5a8","quote(bytes)":"edfa3568","quoteAndRevert(bytes)":"757d64b3","recoveryModeExit(address)":"87a530f8","registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))":"eeec802f","removeLiquidity((address,address,uint256,uint256[],uint8,bytes))":"21457897","removeLiquidityFromBuffer(address,uint256)":"35b60a19","removeLiquidityRecovery(address,address,uint256)":"3a2d133b","sendTo(address,address,uint256)":"ae639329","setAuthorizer(address)":"058a628f","setProtocolFeeController(address)":"2d771389","setStaticSwapFeePercentage(address,uint256)":"d15126ba","settle(address,uint256)":"15afd409","supplyCredit(address,uint256)":"b1740c2d","swap((uint8,address,address,address,uint256,uint256,bytes))":"2bfb780c","takeDebt(address,uint256)":"3e262ba3","totalSupply(address)":"e4dc2aa4","transfer(address,address,uint256)":"beabacc8","transferFrom(address,address,address,uint256)":"15dacbea","unguardedCheckNotEntered()":"cecc95a7","unlock(bytes)":"48c89491","unpausePool(address)":"f21c38cd","unpauseVault()":"0b7562be","unpauseVaultBuffers()":"b9212b49","updateAggregateSwapFeePercentage(address,uint256)":"5e0b06f4","updateAggregateYieldFeePercentage(address,uint256)":"e253670a","updateLiveTokenBalanceInPoolData((bytes32,address[],(uint8,address,bool)[],uint256[],uint256[],uint256[],uint256[]),uint256,uint8,uint256)":"aa01edb3","vault()":"fbfa77cf"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AfterAddLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterInitializeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterRemoveLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterSwapHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountGivenZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"AmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"AmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeAddLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeInitializeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeRemoveLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeSwapHookFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"BptAmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"BptAmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"BufferAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"BufferNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BufferSharesInvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BufferSharesInvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"BufferTotalSupplyTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotReceiveEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSwapSameToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportAddLiquidityCustom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportDonation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportRemoveLiquidityCustom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportUnbalancedLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DynamicSwapFeeHookFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeePrecisionTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedAmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedAmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedSwapLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolHooksContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"HookRegistrationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddLiquidityKind\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRemoveLiquidityKind\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenConfiguration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"InvalidUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBufferShares\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedUnderlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUnderlyingAmount\",\"type\":\"uint256\"}],\"name\":\"NotEnoughUnderlying\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedWrappedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualWrappedAmount\",\"type\":\"uint256\"}],\"name\":\"NotEnoughWrapped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVaultDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PauseBufferPeriodDurationTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolInRecoveryMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotInRecoveryMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolPauseWindowExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeesExceedTotalCollected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueriesDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuoteResultSpoofed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterNotTrusted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeePercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeePercentageTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"SwapLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualToken\",\"type\":\"address\"}],\"name\":\"TokensMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradeAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultBuffersArePaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultIsNotUnlocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultNotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPauseWindowDurationTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPauseWindowExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"WrapAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongProtocolFeeControllerDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"}],\"name\":\"WrongUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongVaultAdminDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongVaultExtensionDeployment\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"AggregateSwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"AggregateYieldFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"}],\"name\":\"BufferSharesBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"}],\"name\":\"BufferSharesMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"}],\"name\":\"LiquidityAddedToBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemovedFromBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmountsRaw\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PoolPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"recoveryMode\",\"type\":\"bool\"}],\"name\":\"PoolRecoveryModeStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct HooksConfig\",\"name\":\"hooksConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IProtocolFeeController\",\"name\":\"newProtocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeeAmount\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnUnderlying\",\"type\":\"uint256\"}],\"name\":\"Unwrap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"VaultBuffersPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"VaultPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultQueriesDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositedUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintedShares\",\"type\":\"uint256\"}],\"name\":\"Wrap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"accountDelta\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AddLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactSharesToIssue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"addLiquidityToBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlyingRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWrappedRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wrappedAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidityToBufferUnbalancedForTests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"areBuffersPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"buildTokenConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"contract IRateProvider[]\",\"name\":\"rateProviders\",\"type\":\"address[]\"}],\"name\":\"buildTokenConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"enum TokenType[]\",\"name\":\"tokenTypes\",\"type\":\"uint8[]\"},{\"internalType\":\"contract IRateProvider[]\",\"name\":\"rateProviders\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"yieldFeeFlags\",\"type\":\"bool[]\"}],\"name\":\"buildTokenConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"contract IRateProvider[]\",\"name\":\"rateProviders\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"yieldFeeFlags\",\"type\":\"bool[]\"}],\"name\":\"buildTokenConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"collectAggregateFees\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"yieldFeeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"swapParams\",\"type\":\"tuple\"}],\"name\":\"computeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"lastLiveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"computeYieldFeesDue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableQuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"disableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"enableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ensurePoolNotPaused\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ensureUnpausedAndGetVaultState\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isQueryDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isVaultPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"areBuffersPaused\",\"type\":\"bool\"}],\"internalType\":\"struct VaultState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeAmount\",\"type\":\"uint256\"}],\"name\":\"ensureValidSwapAmount\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeAmount\",\"type\":\"uint256\"}],\"name\":\"ensureValidTradeAmount\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"enum WrappingDirection\",\"name\":\"direction\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"}],\"internalType\":\"struct BufferWrapOrUnwrapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"erc4626BufferWrapOrUnwrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forceLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forceUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getAddLiquidityCalledFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAggregateSwapFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAggregateYieldFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getBptRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wrappedBalanceRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferMinimumTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityOwner\",\"type\":\"address\"}],\"name\":\"getBufferOwnerShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferPeriodDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferPeriodEndTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferTokenBalancesBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bufferShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getCurrentLiveBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getHooksConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"}],\"internalType\":\"struct HooksConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getLastLiveBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"lastBalancesLiveScaled18\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaximumPoolTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumPoolTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumTradeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumWrapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonzeroDeltaCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPauseWindowEndTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"staticSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"tokenDecimalDiffs\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isPoolRegistered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolInRecoveryMode\",\"type\":\"bool\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolData\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolFactoryMock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolMinimumTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolRoleAccounts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenCountAndIndexOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lastBalancesLiveScaled18\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokenRates\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeController\",\"outputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getRawBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getReservesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getStaticSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDelta\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardedCheckEntered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountUnderlyingRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWrappedRaw\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"initializeBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"internalGetBufferUnderlyingImbalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"internalGetBufferWrappedImbalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"isERC4626BufferInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isBufferInitialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolInRecoveryMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isQueryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVaultPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum Rounding\",\"name\":\"roundingDirection\",\"type\":\"uint8\"}],\"name\":\"loadPoolDataUpdatingBalancesAndYieldFees\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum Rounding\",\"name\":\"roundingDirection\",\"type\":\"uint8\"}],\"name\":\"loadPoolDataUpdatingBalancesAndYieldFeesReentrancy\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AddLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsInScaled18\",\"type\":\"uint256[]\"}],\"name\":\"manualAddLiquidity\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"updatedPoolData\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct VaultSwapParams\",\"name\":\"vaultSwapParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct SwapState\",\"name\":\"state\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"}],\"name\":\"manualBuildPoolSwapParams\",\"outputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"manualBurnBufferShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"totalSwapFeeAmountScaled18\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"manualComputeAndChargeAggregateSwapFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSwapFeeAmountRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeeAmountRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"manualDisableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"manualEnableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"enum WrappingDirection\",\"name\":\"direction\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"}],\"internalType\":\"struct BufferWrapOrUnwrapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"manualErc4626BufferWrapOrUnwrapReentrancy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"manualFindTokenIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"manualGetAggregateSwapFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"manualGetAggregateYieldFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualGetIsUnlocked\",\"outputs\":[{\"internalType\":\"StorageSlotExtension.BooleanSlotType\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualGetNonzeroDeltaCount\",\"outputs\":[{\"internalType\":\"StorageSlotExtension.Uint256SlotType\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"manualGetPoolConfigBits\",\"outputs\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualGetTokenDeltas\",\"outputs\":[{\"internalType\":\"TokenDeltaMappingSlotType\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"manualInitializePoolReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct VaultSwapParams\",\"name\":\"vaultSwapParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct SwapState\",\"name\":\"state\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"}],\"name\":\"manualInternalSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct VaultSwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct SwapState\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"manualMintBufferShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"manualMintMinimumBufferSupplyReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"manualPausePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualPauseVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AddLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsInScaled18\",\"type\":\"uint256[]\"}],\"name\":\"manualReentrancyAddLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactSharesToIssue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"manualReentrancyAddLiquidityToBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"manualReentrancyDisableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"manualReentrancyInitializeBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct RemoveLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOutScaled18\",\"type\":\"uint256[]\"}],\"name\":\"manualReentrancyRemoveLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToRemove\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"manualReentrancyRemoveLiquidityFromBufferHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct VaultSwapParams\",\"name\":\"vaultSwapParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct SwapState\",\"name\":\"state\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"}],\"name\":\"manualReentrancySwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"manualRegisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"}],\"name\":\"manualRegisterPoolAtTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"manualRegisterPoolPassThruTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"protocolFeeExempt\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"poolHooksContract\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"manualRegisterPoolReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"manualRegisterPoolWithSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct RemoveLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOutScaled18\",\"type\":\"uint256[]\"}],\"name\":\"manualRemoveLiquidity\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"updatedPoolData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"manualSendToReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"manualSetAccountDelta\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"manualSetAddLiquidityCalledFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"manualSetAggregateSwapFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"manualSetAggregateSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"manualSetAggregateYieldFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"manualSetAggregateYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"}],\"name\":\"manualSetBufferAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wrappedAmount\",\"type\":\"uint256\"}],\"name\":\"manualSetBufferBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"manualSetBufferOwnerShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"manualSetBufferTotalShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"}],\"internalType\":\"struct HooksConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"manualSetHooksConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPoolInitialized\",\"type\":\"bool\"}],\"name\":\"manualSetInitializedPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deltaCount\",\"type\":\"uint256\"}],\"name\":\"manualSetNonZeroDeltaCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"manualSetPoolBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"staticSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"tokenDecimalDiffs\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isPoolRegistered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolInRecoveryMode\",\"type\":\"bool\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"manualSetPoolConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"PoolConfigBits\",\"name\":\"config\",\"type\":\"bytes32\"}],\"name\":\"manualSetPoolConfigBits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPoolCreator\",\"type\":\"address\"}],\"name\":\"manualSetPoolCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"manualSetPoolPauseWindowEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"manualSetPoolPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"manualSetPoolRegistered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"name\":\"manualSetPoolTokenInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"name\":\"manualSetPoolTokenInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"manualSetPoolTokensAndBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"manualSetReservesOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"manualSetStaticSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"manualSetVaultPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"manualSetVaultState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"manualSettleReentrancy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"underlyingHint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wrappedHint\",\"type\":\"uint256\"}],\"name\":\"manualSettleUnwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"underlyingHint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wrappedHint\",\"type\":\"uint256\"}],\"name\":\"manualSettleWrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"manualTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"manualUnpausePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualUnpauseVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"manualUnsafeSetStaticSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"},{\"internalType\":\"enum Rounding\",\"name\":\"roundingDirection\",\"type\":\"uint8\"}],\"name\":\"manualUpdatePoolDataLiveBalancesAndRates\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"manuallySetSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"mockEnsurePoolNotInRecoveryMode\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockIsUnlocked\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"mockWithInitializedPool\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"mockWithValidPercentage\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"pausePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseVaultBuffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"quoteAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"recoveryModeExit\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"protocolFeeExempt\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"poolHooksContract\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct RemoveLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToRemove\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityFromBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"removedUnderlyingBalanceRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"removedWrappedBalanceRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityRecovery\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"newProtocolFeeController\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setStaticSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountHint\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"}],\"name\":\"supplyCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct VaultSwapParams\",\"name\":\"vaultSwapParams\",\"type\":\"tuple\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"name\":\"takeDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unguardedCheckNotEntered\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"unpausePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseVaultBuffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newAggregateSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateAggregateSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newAggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateAggregateYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"newRawBalance\",\"type\":\"uint256\"},{\"internalType\":\"enum Rounding\",\"name\":\"roundingDirection\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"}],\"name\":\"updateLiveTokenBalanceInPoolData\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"One-fits-all solution for hardhat tests. Use the typechain type for errors, events and functions.\",\"errors\":{\"AmountInAboveMax(address,uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total token amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\",\"tokenIn\":\"The incoming token\"}}],\"AmountOutBelowMin(address,uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\",\"tokenOut\":\"The outgoing token\"}}],\"BptAmountInAboveMax(uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total BPT amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\"}}],\"BptAmountOutBelowMin(uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\"}}],\"BufferAlreadyInitialized(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"BufferNotInitialized(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"BufferTotalSupplyTooLow(uint256)\":[{\"params\":{\"totalSupply\":\"The total supply value that was below the minimum\"}}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FeePrecisionTooHigh()\":[{\"details\":\"Primary fee percentages are 18-decimal values, stored here in 64 bits, and calculated with full 256-bit precision. However, the resulting aggregate fees are stored in the Vault with 24-bit precision, which corresponds to 0.00001% resolution (i.e., a fee can be 1%, 1.00001%, 1.00002%, but not 1.000005%). Disallow setting fees such that there would be precision loss in the Vault, leading to a discrepancy between the aggregate fee calculated here and that stored in the Vault.\"}],\"HookAdjustedAmountInAboveMax(address,uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total token amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\",\"tokenIn\":\"The incoming token\"}}],\"HookAdjustedAmountOutBelowMin(address,uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\",\"tokenOut\":\"The outgoing token\"}}],\"HookAdjustedSwapLimit(uint256,uint256)\":[{\"params\":{\"amount\":\"The total amount in or out\",\"limit\":\"The amount of the limit that has been exceeded\"}}],\"HookRegistrationFailed(address,address,address)\":[{\"params\":{\"pool\":\"Address of the rejected pool\",\"poolFactory\":\"Address of the pool factory\",\"poolHooksContract\":\"Address of the hook contract that rejected the pool registration\"}}],\"InvalidUnderlyingToken(address)\":[{\"details\":\"This should never happen, but a malicious wrapper contract might do this (e.g., in an attempt to re-initialize the buffer).\",\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"NotEnoughUnderlying(address,uint256,uint256)\":[{\"details\":\"A wrap/unwrap operation consumed more or returned less underlying tokens than it should.\"}],\"NotEnoughWrapped(address,uint256,uint256)\":[{\"details\":\"A wrap/unwrap operation consumed more or returned less wrapped tokens than it should.\"}],\"NotVaultDelegateCall()\":[{\"details\":\"It can only be called by the Vault via delegatecall.\"}],\"PercentageAboveMax()\":[{\"details\":\"Providing the value might be helpful for debugging.\"}],\"PoolAlreadyInitialized(address)\":[{\"params\":{\"pool\":\"The already initialized pool\"}}],\"PoolAlreadyRegistered(address)\":[{\"params\":{\"pool\":\"The already registered pool\"}}],\"PoolInRecoveryMode(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolNotInRecoveryMode(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolNotInitialized(address)\":[{\"params\":{\"pool\":\"The uninitialized pool\"}}],\"PoolNotPaused(address)\":[{\"params\":{\"pool\":\"The unpaused pool\"}}],\"PoolNotRegistered(address)\":[{\"params\":{\"pool\":\"The unregistered pool\"}}],\"PoolPauseWindowExpired(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolPaused(address)\":[{\"params\":{\"pool\":\"The paused pool\"}}],\"ProtocolFeesExceedTotalCollected()\":[{\"details\":\"This occurs when the sum of the parts (aggregate swap or yield fee) is greater than the whole (total swap or yield fee). Also validated when the protocol fee controller updates aggregate fee percentages in the Vault.\"}],\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}],\"SwapFeePercentageTooHigh()\":[{\"details\":\"The Vault itself does not impose a universal minimum. Rather, it validates against the range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error if it is above the maximum value returned by the pool. Pools with dynamic fees do not check these limits.\"}],\"SwapFeePercentageTooLow()\":[{\"details\":\"The Vault itself does not impose a universal minimum. Rather, it validates against the range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error if it is below the minimum value returned by the pool. Pools with dynamic fees do not check these limits.\"}],\"SwapLimit(uint256,uint256)\":[{\"params\":{\"amount\":\"The total amount in or out\",\"limit\":\"The amount of the limit that has been exceeded\"}}],\"TokenAlreadyRegistered(address)\":[{\"params\":{\"token\":\"The duplicate token\"}}],\"TokenNotRegistered(address)\":[{\"params\":{\"token\":\"The unregistered token\"}}],\"TokensMismatch(address,address,address)\":[{\"params\":{\"actualToken\":\"The actual token found at that index\",\"expectedToken\":\"The correct token at a given index in the pool\",\"pool\":\"Address of the pool\"}}],\"WrapAmountTooSmall(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"WrongUnderlyingToken(address,address)\":[{\"details\":\"This should never happen, but a malicious wrapper contract might not return the correct address. Legitimate wrapper contracts should make the asset a constant or immutable value.\",\"params\":{\"underlyingToken\":\"The underlying token returned by `asset`\",\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}]},\"events\":{\"AggregateSwapFeePercentageChanged(address,uint256)\":{\"details\":\"The `ProtocolFeeController` will emit an event with the underlying change.\",\"params\":{\"aggregateSwapFeePercentage\":\"The new aggregate swap fee percentage\",\"pool\":\"The pool whose aggregate swap fee percentage changed\"}},\"AggregateYieldFeePercentageChanged(address,uint256)\":{\"details\":\"The `ProtocolFeeController` will emit an event with the underlying change.\",\"params\":{\"aggregateYieldFeePercentage\":\"The new aggregate yield fee percentage\",\"pool\":\"The pool whose aggregate yield fee percentage changed\"}},\"AuthorizerChanged(address)\":{\"params\":{\"newAuthorizer\":\"The address of the new authorizer\"}},\"BufferSharesBurned(address,address,uint256)\":{\"details\":\"The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares` retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the \\\"totalSupply\\\" of a buffer.\",\"params\":{\"burnedShares\":\"The amount of \\\"internal BPT\\\" shares burned\",\"from\":\"The owner of the burned shares\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"BufferSharesMinted(address,address,uint256)\":{\"details\":\"The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares` retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the \\\"totalSupply\\\" of a buffer.\",\"params\":{\"issuedShares\":\"The amount of \\\"internal BPT\\\" shares created\",\"to\":\"The owner of the minted shares\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"LiquidityAddedToBuffer(address,uint256,uint256)\":{\"details\":\"The underlying token can be derived from the wrapped token, so it's not included here.\",\"params\":{\"amountUnderlying\":\"The amount of the underlying token that was deposited\",\"amountWrapped\":\"The amount of the wrapped token that was deposited\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"LiquidityRemovedFromBuffer(address,uint256,uint256)\":{\"details\":\"The underlying token can be derived from the wrapped token, so it's not included here.\",\"params\":{\"amountUnderlying\":\"The amount of the underlying token that was withdrawn\",\"amountWrapped\":\"The amount of the wrapped token that was withdrawn\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"PoolBalanceChanged(address,address,uint256,int256[],uint256[])\":{\"params\":{\"deltas\":\"The amount each token changed, sorted in the pool tokens' order\",\"liquidityProvider\":\"The user performing the operation\",\"pool\":\"The pool being registered\",\"totalSupply\":\"The total supply of the pool after the operation\"}},\"PoolInitialized(address)\":{\"params\":{\"pool\":\"The pool being initialized\"}},\"PoolPausedStateChanged(address,bool)\":{\"params\":{\"paused\":\"True if the pool was paused\",\"pool\":\"The pool that was just paused or unpaused\"}},\"PoolRecoveryModeStateChanged(address,bool)\":{\"params\":{\"pool\":\"The pool\",\"recoveryMode\":\"True if recovery mode was enabled\"}},\"PoolRegistered(address,address,(address,uint8,address,bool)[],uint256,uint32,(address,address,address),(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address),(bool,bool,bool,bool))\":{\"params\":{\"factory\":\"The factory creating the pool\",\"hooksConfig\":\"Flags indicating which hooks the pool supports and address of hooks contract\",\"liquidityManagement\":\"Supported liquidity management hook flags\",\"pauseWindowEndTime\":\"The pool's pause window end time\",\"pool\":\"The pool being registered\",\"roleAccounts\":\"Addresses the Vault will allow to change certain pool settings\",\"swapFeePercentage\":\"The static swap fee of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"}},\"ProtocolFeeControllerChanged(address)\":{\"params\":{\"newProtocolFeeController\":\"The address of the new protocol fee controller\"}},\"Swap(address,address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Number of tokenIn tokens\",\"amountOut\":\"Number of tokenOut tokens\",\"pool\":\"The pool with the tokens being swapped\",\"swapFeeAmount\":\"Swap fee amount paid\",\"swapFeePercentage\":\"Swap fee percentage applied (can differ if dynamic)\",\"tokenIn\":\"The token entering the Vault (balance increases)\",\"tokenOut\":\"The token leaving the Vault (balance decreases)\"}},\"SwapFeePercentageChanged(address,uint256)\":{\"params\":{\"swapFeePercentage\":\"The new swap fee percentage for the pool\"}},\"Unwrap(address,address,uint256,uint256)\":{\"params\":{\"burnedShares\":\"Number of shares (wrapped tokens) burned\",\"underlyingToken\":\"The underlying token address\",\"withdrawnUnderlying\":\"Number of underlying tokens withdrawn\",\"wrappedToken\":\"The wrapped token address\"}},\"VaultBuffersPausedStateChanged(bool)\":{\"details\":\"If buffers all paused, all buffer operations (i.e., all calls through the Router with `isBuffer` set to true) will revert.\",\"params\":{\"paused\":\"True if the Vault buffers were paused\"}},\"VaultPausedStateChanged(bool)\":{\"params\":{\"paused\":\"True if the Vault was paused\"}},\"Wrap(address,address,uint256,uint256)\":{\"params\":{\"depositedUnderlying\":\"Number of underlying tokens deposited\",\"mintedShares\":\"Number of shares (wrapped tokens) minted\",\"underlyingToken\":\"The underlying token address\",\"wrappedToken\":\"The wrapped token address\"}}},\"kind\":\"dev\",\"methods\":{\"addLiquidity((address,address,uint256[],uint256,uint8,bytes))\":{\"details\":\"Caution should be exercised when adding liquidity because the Vault has the capability to transfer tokens from any user, given that it holds all allowances.\",\"params\":{\"params\":\"Parameters for the add liquidity (see above for struct definition)\"},\"returns\":{\"amountsIn\":\"Actual amounts of input tokens\",\"bptAmountOut\":\"Output pool token amount\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"addLiquidityToBuffer(address,uint256,address)\":{\"details\":\"The buffer needs to be initialized beforehand.\",\"params\":{\"exactSharesToIssue\":\"The value in underlying tokens that `sharesOwner` wants to add to the buffer, in underlying token decimals\",\"sharesOwner\":\"Address that will own the deposited liquidity. Only this address will be able to remove liquidity from the buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"amountUnderlyingRaw\":\"Amount of underlying tokens deposited into the buffer\",\"amountWrappedRaw\":\"Amount of wrapped tokens deposited into the buffer\"}},\"addLiquidityToBufferUnbalancedForTests(address,uint256,uint256)\":{\"details\":\"Adds liquidity to buffer unbalanced, so it can unbalance the buffer.\"},\"allowance(address,address,address)\":{\"params\":{\"owner\":\"Address of the owner\",\"spender\":\"Address of the spender\",\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"allowance Amount of tokens the spender is allowed to spend\"}},\"approve(address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to approve\",\"owner\":\"Address of the owner\",\"spender\":\"Address of the spender\"},\"returns\":{\"_0\":\"success True if successful, false otherwise\"}},\"areBuffersPaused()\":{\"details\":\"When buffers are paused, all buffer operations (i.e., calls on the Router with `isBuffer` true) will revert. Pausing buffers is reversible.\",\"returns\":{\"_0\":\"buffersPaused True if the Vault buffers are paused\"}},\"balanceOf(address,address)\":{\"params\":{\"account\":\"Address of the account\",\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"balance Balance of the account for the token\"}},\"buildTokenConfig(address[],address[])\":{\"details\":\"Infers TokenType (STANDARD or WITH_RATE) from the presence or absence of the rate provider.\"},\"buildTokenConfig(address[],address[],bool[])\":{\"details\":\"Infers TokenType (STANDARD or WITH_RATE) from the presence or absence of the rate provider.\"},\"collectAggregateFees(address)\":{\"details\":\"Fees are sent to the ProtocolFeeController address.\",\"params\":{\"pool\":\"The pool on which all aggregate fees should be collected\"},\"returns\":{\"swapFeeAmounts\":\"An array with the total swap fees collected, sorted in token registration order\",\"yieldFeeAmounts\":\"An array with the total yield fees collected, sorted in token registration order\"}},\"computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))\":{\"details\":\"Reverts if the hook doesn't return the success flag set to `true`.\",\"params\":{\"pool\":\"The pool\",\"swapParams\":\"The swap parameters used to compute the fee\"},\"returns\":{\"_0\":\"dynamicSwapFeePercentage The dynamic swap fee percentage\"}},\"disableRecoveryMode(address)\":{\"details\":\"This is a permissioned function. It re-syncs live balances (which could not be updated during Recovery Mode), forfeiting any yield fees that accrued while enabled. It makes external calls, and could potentially fail if there is an issue with any associated Rate Providers.\",\"params\":{\"pool\":\"The address of the pool\"}},\"enableRecoveryMode(address)\":{\"details\":\"This is a permissioned function. It enables a safe proportional withdrawal, with no external calls. Since there are no external calls, live balances cannot be updated while in Recovery Mode.\",\"params\":{\"pool\":\"The address of the pool\"}},\"erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))\":{\"details\":\"All parameters are given in raw token decimal encoding. It requires the buffer to be initialized, and uses the internal wrapped token buffer when it has enough liquidity to avoid external calls.\",\"params\":{\"params\":\"Parameters for the wrap/unwrap operation (see struct definition)\"},\"returns\":{\"amountCalculatedRaw\":\"Calculated swap amount\",\"amountInRaw\":\"Amount of input tokens for the swap\",\"amountOutRaw\":\"Amount of output tokens from the swap\"}},\"getActionId(bytes4)\":{\"params\":{\"selector\":\"The 4-byte selector of the permissioned function\"},\"returns\":{\"_0\":\"actionId The computed actionId\"}},\"getAddLiquidityCalledFlag(address)\":{\"details\":\"Taxing remove liquidity proportional whenever liquidity was added in the same transaction adds an extra layer of security, discouraging operations that try to undo others for profit. Remove liquidity proportional is the only standard way to exit a position without fees, and this flag is used to enable fees in that case. It also discourages indirect swaps via unbalanced add and remove proportional, as they are expected to be worse than a simple swap for every pool type.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"_0\":\"liquidityAdded True if liquidity has been added to this pool in the current transaction\"}},\"getAggregateSwapFeeAmount(address,address)\":{\"params\":{\"pool\":\"The address of the pool for which aggregate fees have been collected\",\"token\":\"The address of the token in which fees have been accumulated\"},\"returns\":{\"_0\":\"swapFeeAmount The total amount of fees accumulated in the specified token\"}},\"getAggregateYieldFeeAmount(address,address)\":{\"params\":{\"pool\":\"The address of the pool for which aggregate fees have been collected\",\"token\":\"The address of the token in which fees have been accumulated\"},\"returns\":{\"_0\":\"yieldFeeAmount The total amount of fees accumulated in the specified token\"}},\"getAuthorizer()\":{\"details\":\"The authorizer holds the permissions granted by governance. It is set on Vault deployment, and can be changed through a permissioned call.\",\"returns\":{\"_0\":\"authorizer Address of the authorizer contract\"}},\"getBptRate(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"rate\":\"BPT rate\"}},\"getBufferAsset(address)\":{\"details\":\"The asset can never change after buffer initialization.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"underlyingToken\":\"Address of the underlying token registered for the wrapper; `address(0)` if the buffer has not been initialized.\"}},\"getBufferBalance(address)\":{\"details\":\"All values are in native token decimals of the wrapped or underlying tokens.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"underlyingBalanceRaw\":\"Amount of underlying tokens deposited into the buffer, in native token decimals\",\"wrappedBalanceRaw\":\"Amount of wrapped tokens deposited into the buffer, in native token decimals\"}},\"getBufferMinimumTotalSupply()\":{\"details\":\"This prevents buffers from being completely drained. When the buffer is initialized, this minimum number of shares is added to the shares resulting from the initial deposit. Buffer total supply accounting is internal to the Vault, as buffers are not tokenized.\",\"returns\":{\"_0\":\"minimumTotalSupply The minimum total supply a buffer can have after initialization\"}},\"getBufferOwnerShares(address,address)\":{\"params\":{\"liquidityOwner\":\"Address of the user that owns liquidity in the wrapped token's buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"ownerShares\":\"Amount of shares allocated to the liquidity owner, in native underlying token decimals\"}},\"getBufferPeriodDuration()\":{\"details\":\"This value is immutable. It represents the period during which, if paused, the Vault will remain paused. This ensures there is time available to address whatever issue caused the Vault to be paused.\",\"returns\":{\"_0\":\"bufferPeriodDuration The length of the buffer period in seconds\"}},\"getBufferPeriodEndTime()\":{\"details\":\"This value is immutable. If already paused, the Vault can be unpaused until this timestamp.\",\"returns\":{\"_0\":\"bufferPeriodEndTime The timestamp after which the Vault remains permanently unpaused\"}},\"getBufferTotalShares(address)\":{\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"bufferShares\":\"Amount of supply shares of the buffer, in native underlying token decimals\"}},\"getCurrentLiveBalances(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"balancesLiveScaled18\":\"Token balances after paying yield fees, applying decimal scaling and rates\"}},\"getHooksConfig(address)\":{\"details\":\"The `HooksConfig` contains flags indicating which pool hooks are implemented.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"_0\":\"hooksConfig The hooks configuration as a `HooksConfig` struct\"}},\"getMaximumPoolTokens()\":{\"returns\":{\"_0\":\"maxTokens The maximum token count of a pool\"}},\"getMinimumPoolTokens()\":{\"details\":\"We expect the vast majority of pools to be 2-token.\",\"returns\":{\"_0\":\"minTokens The minimum token count of a pool\"}},\"getMinimumTradeAmount()\":{\"details\":\"This limit is applied to the 18-decimal \\\"upscaled\\\" amount in any operation (swap, add/remove liquidity).\",\"returns\":{\"_0\":\"minimumTradeAmount The minimum trade amount as an 18-decimal floating point number\"}},\"getMinimumWrapAmount()\":{\"details\":\"This limit is applied to the wrap operation amount, in native underlying token decimals.\",\"returns\":{\"_0\":\"minimumWrapAmount The minimum wrap amount in native underlying token decimals\"}},\"getNonzeroDeltaCount()\":{\"returns\":{\"_0\":\"nonzeroDeltaCount The current value of `_nonzeroDeltaCount`\"}},\"getPauseWindowEndTime()\":{\"details\":\"This value is immutable, and represents the timestamp after which the Vault can no longer be paused by governance.\",\"returns\":{\"_0\":\"pauseWindowEndTime The timestamp when the Vault's pause window ends\"}},\"getPoolConfig(address)\":{\"details\":\"The `PoolConfig` contains liquidity management and other state flags, fee percentages, the pause window.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"_0\":\"poolConfig The pool configuration as a `PoolConfig` struct\"}},\"getPoolData(address)\":{\"details\":\"This contains the pool configuration (flags), tokens and token types, rates, scaling factors, and balances.\",\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"poolData The `PoolData` result\"}},\"getPoolMinimumTotalSupply()\":{\"details\":\"This prevents pools from being completely drained. When the pool is initialized, this minimum amount of BPT is minted to the zero address. This is an 18-decimal floating point number; BPT are always 18 decimals.\",\"returns\":{\"_0\":\"minimumTotalSupply The minimum total supply a pool can have after initialization\"}},\"getPoolPausedState(address)\":{\"details\":\"Note that even when set to a paused state, the pool will automatically unpause at the end of the buffer period.\",\"params\":{\"pool\":\"The pool whose data is requested\"},\"returns\":{\"_0\":\"paused True if the Pool is paused\",\"_1\":\"poolPauseWindowEndTime The timestamp of the end of the Pool's pause window\",\"_2\":\"poolBufferPeriodEndTime The timestamp after which the Pool unpauses itself (if paused)\",\"_3\":\"pauseManager The pause manager, or the zero address\"}},\"getPoolRoleAccounts(address)\":{\"params\":{\"pool\":\"The address of the pool whose roles are being queried\"},\"returns\":{\"_0\":\"roleAccounts A struct containing the role accounts for the pool (or 0 if unassigned)\"}},\"getPoolTokenCountAndIndexOfToken(address,address)\":{\"details\":\"Reverts if the pool is not registered, or if the token does not belong to the pool.\",\"params\":{\"pool\":\"Address of the pool\",\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"tokenCount Number of tokens in the pool\",\"_1\":\"index Index corresponding to the given token in the pool's token list\"}},\"getPoolTokenInfo(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"balancesRaw\":\"Current native decimal balances of the pool tokens, sorted in pool registration order\",\"lastBalancesLiveScaled18\":\"Last saved live balances, sorted in token registration order\",\"tokenInfo\":\"Token info structs (type, rate provider, yield flag), sorted in pool registration order\",\"tokens\":\"The pool tokens, sorted in registration order\"}},\"getPoolTokenRates(address)\":{\"details\":\"This function performs external calls if tokens are yield-bearing. All returned arrays are in token registration order.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"decimalScalingFactors\":\"Conversion factor used to adjust for token decimals for uniform precision in calculations. FP(1) for 18-decimal tokens\",\"tokenRates\":\"18-decimal FP values for rate tokens (e.g., yield-bearing), or FP(1) for standard tokens\"}},\"getPoolTokens(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"_0\":\"tokens List of tokens in the pool\"}},\"getProtocolFeeController()\":{\"returns\":{\"_0\":\"protocolFeeController Address of the ProtocolFeeController\"}},\"getReservesOf(address)\":{\"params\":{\"token\":\"The token for which to retrieve the reserve\"},\"returns\":{\"_0\":\"reserveAmount The amount of reserves for the given token\"}},\"getStaticSwapFeePercentage(address)\":{\"params\":{\"pool\":\"The address of the pool whose static swap fee percentage is being queried\"},\"returns\":{\"_0\":\"swapFeePercentage The current static swap fee percentage for the specified pool\"}},\"getTokenDelta(address)\":{\"details\":\"This function allows reading the value from the `_tokenDeltas` mapping.\",\"params\":{\"token\":\"The token for which the delta is being fetched\"},\"returns\":{\"_0\":\"tokenDelta The delta of the specified token\"}},\"getVaultAdmin()\":{\"details\":\"The VaultAdmin contract mostly implements permissioned functions.\",\"returns\":{\"_0\":\"vaultAdmin The address of the Vault admin\"}},\"getVaultExtension()\":{\"details\":\"Function is in the main Vault contract. The VaultExtension handles less critical or frequently used functions, since delegate calls through the Vault are more expensive than direct calls.\",\"returns\":{\"_0\":\"vaultExtension Address of the VaultExtension\"}},\"getVaultPausedState()\":{\"returns\":{\"_0\":\"paused True if the Vault is paused\",\"_1\":\"vaultPauseWindowEndTime The timestamp of the end of the Vault's pause window\",\"_2\":\"vaultBufferPeriodEndTime The timestamp of the end of the Vault's buffer period\"}},\"initialize(address,address,address[],uint256[],uint256,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Address of the pool to initialize\",\"to\":\"Address that will receive the output BPT\",\"tokens\":\"Tokens used to seed the pool (must match the registered tokens)\",\"userData\":\"Additional (optional) data required for adding initial liquidity\"},\"returns\":{\"bptAmountOut\":\"Output pool token amount\"}},\"initializeBuffer(address,uint256,uint256,address)\":{\"params\":{\"amountUnderlyingRaw\":\"Amount of underlying tokens that will be deposited into the buffer\",\"amountWrappedRaw\":\"Amount of wrapped tokens that will be deposited into the buffer\",\"sharesOwner\":\"Address that will own the deposited liquidity. Only this address will be able to remove liquidity from the buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"issuedShares\":\"the amount of tokens sharesOwner has in the buffer, expressed in underlying token amounts. (it is the BPT of an internal ERC4626 buffer). It is expressed in underlying token native decimals.\"}},\"isERC4626BufferInitialized(address)\":{\"details\":\"An initialized buffer should have an asset registered in the Vault.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"isBufferInitialized\":\"True if the ERC4626 buffer is initialized\"}},\"isPoolInRecoveryMode(address)\":{\"details\":\"Recovery Mode enables a safe proportional withdrawal path, with no external calls.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"_0\":\"recoveryMode True if the pool is in Recovery Mode, false otherwise\"}},\"isPoolInitialized(address)\":{\"details\":\"An initialized pool can be considered registered as well.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"_0\":\"initialized True if the pool is initialized, false otherwise\"}},\"isPoolPaused(address)\":{\"details\":\"If a pool is paused, all non-Recovery Mode state-changing operations will revert.\",\"params\":{\"pool\":\"The pool to be checked\"},\"returns\":{\"_0\":\"paused True if the pool is paused\"}},\"isPoolRegistered(address)\":{\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"_0\":\"registered True if the pool is registered, false otherwise\"}},\"isQueryDisabled()\":{\"details\":\"This is a one-way switch. Once queries are disabled, they can never be re-enabled. The query functions rely on a specific EVM feature to detect static calls. Query operations are exempt from settlement constraints, so it's critical that no state changes can occur. We retain the ability to disable queries in the unlikely event that EVM changes violate its assumptions (perhaps on an L2).\",\"returns\":{\"_0\":\"queryDisabled If true, then queries are disabled\"}},\"isUnlocked()\":{\"details\":\"The Vault must be unlocked to perform state-changing liquidity operations.\",\"returns\":{\"_0\":\"unlocked True if the Vault is unlocked, false otherwise\"}},\"isVaultPaused()\":{\"details\":\"If the Vault is paused, all non-Recovery Mode state-changing operations will revert.\",\"returns\":{\"_0\":\"paused True if the Vault is paused\"}},\"manualUnsafeSetStaticSwapFeePercentage(address,uint256)\":{\"details\":\"Does not check the value against any min/max limits normally enforced by the pool.\"},\"pausePool(address)\":{\"details\":\"This is a permissioned function that will only work during the Pause Window set during pool factory deployment.\",\"params\":{\"pool\":\"The pool being paused\"}},\"pauseVault()\":{\"details\":\"This is a permissioned function that will only work during the Pause Window set during deployment.\"},\"pauseVaultBuffers()\":{\"details\":\"When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. Currently it's not possible to pause vault buffers individually. This is a permissioned call, and is reversible (see `unpauseVaultBuffers`).\"},\"quote(bytes)\":{\"details\":\"Used to query a set of operations on the Vault. Only off-chain eth_call are allowed, anything else will revert. Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier. Allows the external calling of a function via the Vault contract to access Vault's functions guarded by `onlyWhenUnlocked`. `transient` modifier ensuring balances changes within the Vault are settled.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"},\"returns\":{\"result\":\"Resulting data from the call\"}},\"quoteAndRevert(bytes)\":{\"details\":\"Used to query a set of operations on the Vault. Only off-chain eth_call are allowed, anything else will revert. Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier. Allows the external calling of a function via the Vault contract to access Vault's functions guarded by `onlyWhenUnlocked`. `transient` modifier ensuring balances changes within the Vault are settled. This call always reverts, returning the result in the revert reason.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"}},\"registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))\":{\"details\":\"A pool can opt-out of pausing by providing a zero value for the pause window, or allow pausing indefinitely by providing a large value. (Pool pause windows are not limited by the Vault maximums.) The vault defines an additional buffer period during which a paused pool will stay paused. After the buffer period passes, a paused pool will automatically unpause. A pool can opt out of Balancer governance pausing by providing a custom `pauseManager`. This might be a multi-sig contract or an arbitrary smart contract with its own access controls, that forwards calls to the Vault. If the zero address is provided for the `pauseManager`, permissions for pausing the pool will default to the authorizer.\",\"params\":{\"liquidityManagement\":\"Liquidity management flags with implemented methods\",\"pauseWindowEndTime\":\"The timestamp after which it is no longer possible to pause the pool\",\"pool\":\"The address of the pool being registered\",\"poolHooksContract\":\"Contract that implements the hooks for the pool\",\"protocolFeeExempt\":\"If true, the pool's initial aggregate fees will be set to 0\",\"roleAccounts\":\"Addresses the Vault will allow to change certain pool settings\",\"swapFeePercentage\":\"The initial static swap fee percentage of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"}},\"removeLiquidity((address,address,uint256,uint256[],uint8,bytes))\":{\"details\":\"Trusted routers can burn pool tokens belonging to any user and require no prior approval from the user. Untrusted routers require prior approval from the user. This is the only function allowed to call _queryModeBalanceIncrease (and only in a query context).\",\"params\":{\"params\":\"Parameters for the remove liquidity (see above for struct definition)\"},\"returns\":{\"amountsOut\":\"Actual amounts of output tokens\",\"bptAmountIn\":\"Actual amount of BPT burned\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"removeLiquidityFromBuffer(address,uint256)\":{\"details\":\"Only proportional exits are supported, and the sender has to be the owner of the shares. This function unlocks the Vault just for this operation; it does not work with a Router as an entrypoint. Pre-conditions: - The buffer needs to be initialized. - sharesOwner is the original msg.sender, it needs to be checked in the Router. That's why   this call is authenticated; only routers approved by the DAO can remove the liquidity of a buffer. - The buffer needs to have some liquidity and have its asset registered in `_bufferAssets` storage.\",\"params\":{\"sharesToRemove\":\"Amount of shares to remove from the buffer. Cannot be greater than sharesOwner's total shares. It is expressed in underlying token native decimals.\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"removedUnderlyingBalanceRaw\":\"Amount of underlying tokens returned to the user\",\"removedWrappedBalanceRaw\":\"Amount of wrapped tokens returned to the user\"}},\"removeLiquidityRecovery(address,address,uint256)\":{\"params\":{\"exactBptAmountIn\":\"Input pool token amount\",\"from\":\"Address of user to burn pool tokens from\",\"pool\":\"Address of the pool\"},\"returns\":{\"amountsOut\":\"Actual calculated amounts of output tokens, sorted in token registration order\"}},\"sendTo(address,address,uint256)\":{\"details\":\"There is no inverse operation for this function. Transfer funds to the Vault and call `settle` to cancel debts.\",\"params\":{\"amount\":\"Amount of tokens to send\",\"to\":\"Recipient address\",\"token\":\"Address of the token\"}},\"setAuthorizer(address)\":{\"details\":\"This is a permissioned call. Emits an `AuthorizerChanged` event.\",\"params\":{\"newAuthorizer\":\"The address of the new authorizer\"}},\"setProtocolFeeController(address)\":{\"details\":\"This is a permissioned call. Emits a `ProtocolFeeControllerChanged` event.\",\"params\":{\"newProtocolFeeController\":\"The address of the new Protocol Fee Controller\"}},\"setStaticSwapFeePercentage(address,uint256)\":{\"details\":\"This is a permissioned function, disabled if the pool is paused. The swap fee percentage must be within the bounds specified by the pool's implementation of `ISwapFeePercentageBounds`. Emits the SwapFeePercentageChanged event.\",\"params\":{\"pool\":\"The address of the pool for which the static swap fee will be changed\",\"swapFeePercentage\":\"The new swap fee percentage to apply to the pool\"}},\"settle(address,uint256)\":{\"details\":\"Protects the caller against leftover dust in the Vault for the token being settled. The caller should know in advance how many tokens were paid to the Vault, so it can provide it as a hint to discard any excess in the Vault balance. If the given hint is equal to or higher than the difference in reserves, the difference in reserves is given as credit to the caller. If it's higher, the caller sent fewer tokens than expected, so settlement would fail. If the given hint is lower than the difference in reserves, the hint is given as credit to the caller. In this case, the excess would be absorbed by the Vault (and reflected correctly in the reserves), but would not affect settlement. The credit supplied by the Vault can be calculated as `min(reserveDifference, amountHint)`, where the reserve difference equals current balance of the token minus existing reserves of the token when the function is called.\",\"params\":{\"amountHint\":\"Amount paid as reported by the caller\",\"token\":\"Address of the token\"},\"returns\":{\"credit\":\"Credit received in return of the payment\"}},\"swap((uint8,address,address,address,uint256,uint256,bytes))\":{\"details\":\"All parameters are given in raw token decimal encoding.\",\"params\":{\"vaultSwapParams\":\"Parameters for the swap (see above for struct definition)\"},\"returns\":{\"amountCalculatedRaw\":\"Calculated swap amount\",\"amountInRaw\":\"Amount of input tokens for the swap\",\"amountOutRaw\":\"Amount of output tokens from the swap\"}},\"totalSupply(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"_0\":\"totalSupply Total supply of the token\"}},\"transfer(address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"owner\":\"Address of the owner\",\"to\":\"Address of the recipient\"},\"returns\":{\"_0\":\"success True if successful, false otherwise\"}},\"transferFrom(address,address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"from\":\"Address of the sender\",\"spender\":\"Address allowed to perform the transfer\",\"to\":\"Address of the recipient\"},\"returns\":{\"_0\":\"success True if successful, false otherwise\"}},\"unlock(bytes)\":{\"details\":\"Performs a callback on msg.sender with arguments provided in `data`. The Callback is `transient`, meaning all balances for the caller have to be settled at the end.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"},\"returns\":{\"result\":\"Resulting data from the call\"}},\"unpausePool(address)\":{\"details\":\"This is a permissioned function that will only work on a paused Pool within the Buffer Period set during deployment. Note that the Pool will automatically unpause after the Buffer Period expires.\",\"params\":{\"pool\":\"The pool being unpaused\"}},\"unpauseVault()\":{\"details\":\"This is a permissioned function that will only work on a paused Vault within the Buffer Period set during deployment. Note that the Vault will automatically unpause after the Buffer Period expires.\"},\"unpauseVaultBuffers()\":{\"details\":\"When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. This is a permissioned call.\"},\"updateAggregateSwapFeePercentage(address,uint256)\":{\"details\":\"Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol). Emits an `AggregateSwapFeePercentageChanged` event.\",\"params\":{\"newAggregateSwapFeePercentage\":\"The new aggregate swap fee percentage\",\"pool\":\"The pool whose fee will be updated\"}},\"updateAggregateYieldFeePercentage(address,uint256)\":{\"details\":\"Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol). Emits an `AggregateYieldFeePercentageChanged` event.\",\"params\":{\"newAggregateYieldFeePercentage\":\"The new aggregate yield fee percentage\",\"pool\":\"The pool whose fee will be updated\"}},\"vault()\":{\"details\":\"Returns the main Vault address.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"AfterAddLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the afterAddLiquidity hook, indicating the transaction should revert.\"}],\"AfterInitializeHookFailed()\":[{\"notice\":\"The pool has returned false to the afterInitialize hook, indicating the transaction should revert.\"}],\"AfterRemoveLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the afterRemoveLiquidity hook, indicating the transaction should revert.\"}],\"AfterSwapHookFailed()\":[{\"notice\":\"The pool has returned false to the afterSwap hook, indicating the transaction should revert.\"}],\"AmountGivenZero()\":[{\"notice\":\"The user tried to swap zero tokens.\"}],\"AmountInAboveMax(address,uint256,uint256)\":[{\"notice\":\"A required amountIn exceeds the maximum limit specified for the operation.\"}],\"AmountOutBelowMin(address,uint256,uint256)\":[{\"notice\":\"The actual amount out is below the minimum limit specified for the operation.\"}],\"BalanceNotSettled()\":[{\"notice\":\"A transient accounting operation completed with outstanding token deltas.\"}],\"BeforeAddLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeAddLiquidity hook, indicating the transaction should revert.\"}],\"BeforeInitializeHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeInitialize hook, indicating the transaction should revert.\"}],\"BeforeRemoveLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeRemoveLiquidity hook, indicating the transaction should revert.\"}],\"BeforeSwapHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\"}],\"BptAmountInAboveMax(uint256,uint256)\":[{\"notice\":\"The required BPT amount in exceeds the maximum limit specified for the operation.\"}],\"BptAmountOutBelowMin(uint256,uint256)\":[{\"notice\":\"The BPT amount received from adding liquidity is below the minimum specified for the operation.\"}],\"BufferAlreadyInitialized(address)\":[{\"notice\":\"The buffer for the given wrapped token was already initialized.\"}],\"BufferNotInitialized(address)\":[{\"notice\":\"The buffer for the given wrapped token was not initialized.\"}],\"BufferSharesInvalidOwner()\":[{\"notice\":\"Buffer shares were burned from the zero address.\"}],\"BufferSharesInvalidReceiver()\":[{\"notice\":\"Buffer shares were minted to the zero address.\"}],\"BufferTotalSupplyTooLow(uint256)\":[{\"notice\":\"The total supply of a buffer can't be lower than the absolute minimum.\"}],\"CannotReceiveEth()\":[{\"notice\":\"The contract should not receive ETH.\"}],\"CannotSwapSameToken()\":[{\"notice\":\"The user attempted to swap a token for itself.\"}],\"DoesNotSupportAddLiquidityCustom()\":[{\"notice\":\"Pool does not support adding liquidity with a customized input.\"}],\"DoesNotSupportDonation()\":[{\"notice\":\"Pool does not support adding liquidity through donation.\"}],\"DoesNotSupportRemoveLiquidityCustom()\":[{\"notice\":\"Pool does not support removing liquidity with a customized input.\"}],\"DoesNotSupportUnbalancedLiquidity()\":[{\"notice\":\"Pool does not support adding / removing liquidity with an unbalanced input.\"}],\"DynamicSwapFeeHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\"}],\"FeePrecisionTooHigh()\":[{\"notice\":\"Primary fee percentages result in an aggregate fee that cannot be stored with the required precision.\"}],\"HookAdjustedAmountInAboveMax(address,uint256,uint256)\":[{\"notice\":\"A hook adjusted amountIn exceeds the maximum limit specified for the operation.\"}],\"HookAdjustedAmountOutBelowMin(address,uint256,uint256)\":[{\"notice\":\"The hook adjusted amount out is below the minimum limit specified for the operation.\"}],\"HookAdjustedSwapLimit(uint256,uint256)\":[{\"notice\":\"A hook adjusted amount in or out has exceeded the limit specified in the swap request.\"}],\"HookRegistrationFailed(address,address,address)\":[{\"notice\":\"A hook contract rejected a pool on registration.\"}],\"InvalidAddLiquidityKind()\":[{\"notice\":\"Add liquidity kind not supported.\"}],\"InvalidRemoveLiquidityKind()\":[{\"notice\":\"Remove liquidity kind not supported.\"}],\"InvalidToken()\":[{\"notice\":\"Invalid tokens (e.g., zero) cannot be registered.\"}],\"InvalidTokenConfiguration()\":[{\"notice\":\"The data in a TokenConfig struct is inconsistent or unsupported.\"}],\"InvalidTokenType()\":[{\"notice\":\"The token type given in a TokenConfig during pool registration is invalid.\"}],\"InvalidUnderlyingToken(address)\":[{\"notice\":\"A wrapped token reported the zero address as its underlying token asset.\"}],\"MaxTokens()\":[{\"notice\":\"The token count is above the maximum allowed.\"}],\"MinTokens()\":[{\"notice\":\"The token count is below the minimum allowed.\"}],\"NotEnoughBufferShares()\":[{\"notice\":\"The user is trying to remove more than their allocated shares from the buffer.\"}],\"NotVaultDelegateCall()\":[{\"notice\":\"The `VaultExtension` contract was called by an account directly.\"}],\"PauseBufferPeriodDurationTooLarge()\":[{\"notice\":\"The caller specified a buffer period longer than the maximum.\"}],\"PercentageAboveMax()\":[{\"notice\":\"A given percentage is above the maximum (usually FixedPoint.ONE, or 1e18 wei).\"}],\"PoolAlreadyInitialized(address)\":[{\"notice\":\"A pool has already been initialized. `initialize` may only be called once.\"}],\"PoolAlreadyRegistered(address)\":[{\"notice\":\"A pool has already been registered. `registerPool` may only be called once.\"}],\"PoolInRecoveryMode(address)\":[{\"notice\":\"Cannot enable recovery mode when already enabled.\"}],\"PoolNotInRecoveryMode(address)\":[{\"notice\":\"Cannot disable recovery mode when not enabled.\"}],\"PoolNotInitialized(address)\":[{\"notice\":\"A referenced pool has not been initialized.\"}],\"PoolNotPaused(address)\":[{\"notice\":\"Governance tried to unpause the Pool when it was not paused.\"}],\"PoolNotRegistered(address)\":[{\"notice\":\"A pool has not been registered.\"}],\"PoolPauseWindowExpired(address)\":[{\"notice\":\"Governance tried to pause a Pool after the pause period expired.\"}],\"PoolPaused(address)\":[{\"notice\":\"A user tried to perform an operation involving a paused Pool.\"}],\"ProtocolFeesExceedTotalCollected()\":[{\"notice\":\"Error raised when there is an overflow in the fee calculation.\"}],\"QueriesDisabled()\":[{\"notice\":\"A user tried to execute a query operation when they were disabled.\"}],\"QuoteResultSpoofed()\":[{\"notice\":\"Quote reverted with a reserved error code.\"}],\"RouterNotTrusted()\":[{\"notice\":\"An unauthorized Router tried to call a permissioned function (i.e., using the Vault's token allowance).\"}],\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}],\"SenderNotAllowed()\":[{\"notice\":\"The sender does not have permission to call a function.\"}],\"SwapFeePercentageTooHigh()\":[{\"notice\":\"Error raised when the swap fee percentage is greater than the maximum allowed value.\"}],\"SwapFeePercentageTooLow()\":[{\"notice\":\"Error raised when the swap fee percentage is less than the minimum allowed value.\"}],\"SwapLimit(uint256,uint256)\":[{\"notice\":\"An amount in or out has exceeded the limit specified in the swap request.\"}],\"TokenAlreadyRegistered(address)\":[{\"notice\":\"A token was already registered (i.e., it is a duplicate in the pool).\"}],\"TokenNotRegistered(address)\":[{\"notice\":\"The user attempted to operate with a token that is not in the pool.\"}],\"TokensMismatch(address,address,address)\":[{\"notice\":\"The token list passed into an operation does not match the pool tokens in the pool.\"}],\"TradeAmountTooSmall()\":[{\"notice\":\"The amount given or calculated for an operation is below the minimum limit.\"}],\"VaultBuffersArePaused()\":[{\"notice\":\"Buffer operation attempted while vault buffers are paused.\"}],\"VaultIsNotUnlocked()\":[{\"notice\":\"A user called a Vault function (swap, add/remove liquidity) outside the lock context.\"}],\"VaultNotPaused()\":[{\"notice\":\"Governance tried to unpause the Vault when it was not paused.\"}],\"VaultPauseWindowDurationTooLarge()\":[{\"notice\":\"The caller specified a pause window period longer than the maximum.\"}],\"VaultPauseWindowExpired()\":[{\"notice\":\"Governance tried to pause the Vault after the pause period expired.\"}],\"VaultPaused()\":[{\"notice\":\"A user tried to perform an operation while the Vault was paused.\"}],\"WrapAmountTooSmall(address)\":[{\"notice\":\"The amount given to wrap/unwrap was too small, which can introduce rounding issues.\"}],\"WrongProtocolFeeControllerDeployment()\":[{\"notice\":\"The `ProtocolFeeController` contract was configured with an incorrect Vault address.\"}],\"WrongUnderlyingToken(address,address)\":[{\"notice\":\"The wrapped token asset does not match the underlying token.\"}],\"WrongVaultAdminDeployment()\":[{\"notice\":\"The `VaultAdmin` contract was configured with an incorrect Vault address.\"}],\"WrongVaultExtensionDeployment()\":[{\"notice\":\"The `VaultExtension` contract was configured with an incorrect Vault address.\"}]},\"events\":{\"AggregateSwapFeePercentageChanged(address,uint256)\":{\"notice\":\"A protocol or pool creator fee has changed, causing an update to the aggregate swap fee.\"},\"AggregateYieldFeePercentageChanged(address,uint256)\":{\"notice\":\"A protocol or pool creator fee has changed, causing an update to the aggregate yield fee.\"},\"AuthorizerChanged(address)\":{\"notice\":\"A new authorizer is set by `setAuthorizer`.\"},\"BufferSharesBurned(address,address,uint256)\":{\"notice\":\"Buffer shares were burned for an ERC4626 buffer corresponding to a given wrapped token.\"},\"BufferSharesMinted(address,address,uint256)\":{\"notice\":\"Buffer shares were minted for an ERC4626 buffer corresponding to a given wrapped token.\"},\"LiquidityAddedToBuffer(address,uint256,uint256)\":{\"notice\":\"Liquidity was added to an ERC4626 buffer corresponding to the given wrapped token.\"},\"LiquidityRemovedFromBuffer(address,uint256,uint256)\":{\"notice\":\"Liquidity was removed from an ERC4626 buffer.\"},\"PoolBalanceChanged(address,address,uint256,int256[],uint256[])\":{\"notice\":\"Pool balances have changed (e.g., after initialization, add/remove liquidity).\"},\"PoolInitialized(address)\":{\"notice\":\"A Pool was initialized by calling `initialize`.\"},\"PoolPausedStateChanged(address,bool)\":{\"notice\":\"A Pool's pause status has changed.\"},\"PoolRecoveryModeStateChanged(address,bool)\":{\"notice\":\"Recovery mode has been enabled or disabled for a pool.\"},\"PoolRegistered(address,address,(address,uint8,address,bool)[],uint256,uint32,(address,address,address),(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address),(bool,bool,bool,bool))\":{\"notice\":\"A Pool was registered by calling `registerPool`.\"},\"ProtocolFeeControllerChanged(address)\":{\"notice\":\"A new protocol fee controller is set by `setProtocolFeeController`.\"},\"Swap(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"A swap has occurred.\"},\"SwapFeePercentageChanged(address,uint256)\":{\"notice\":\"Emitted when the swap fee percentage of a pool is updated.\"},\"Unwrap(address,address,uint256,uint256)\":{\"notice\":\"An unwrap operation has occurred.\"},\"VaultBuffersPausedStateChanged(bool)\":{\"notice\":\"The Vault buffers pause status has changed.\"},\"VaultPausedStateChanged(bool)\":{\"notice\":\"The Vault's pause status has changed.\"},\"VaultQueriesDisabled()\":{\"notice\":\"`disableQuery` has been called on the Vault, permanently disabling query functionality.\"},\"Wrap(address,address,uint256,uint256)\":{\"notice\":\"A wrap operation has occurred.\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity((address,address,uint256[],uint256,uint8,bytes))\":{\"notice\":\"Adds liquidity to a pool.\"},\"addLiquidityToBuffer(address,uint256,address)\":{\"notice\":\"Adds liquidity to an internal ERC4626 buffer in the Vault, proportionally.\"},\"allowance(address,address,address)\":{\"notice\":\"Gets the allowance of a spender for a given ERC20 token and owner.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to spend pool tokens on behalf of sender.\"},\"areBuffersPaused()\":{\"notice\":\"Indicates whether the Vault buffers are paused.\"},\"balanceOf(address,address)\":{\"notice\":\"Gets the balance of an account for a given ERC20 token.\"},\"collectAggregateFees(address)\":{\"notice\":\"Collects accumulated aggregate swap and yield fees for the specified pool.\"},\"computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))\":{\"notice\":\"Query the current dynamic swap fee percentage of a pool, given a set of swap parameters.\"},\"disableQuery()\":{\"notice\":\"Disables queries functionality on the Vault. Can only be called by governance.\"},\"disableRecoveryMode(address)\":{\"notice\":\"Disable recovery mode for a pool.\"},\"enableRecoveryMode(address)\":{\"notice\":\"Enable recovery mode for a pool.\"},\"erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))\":{\"notice\":\"Wraps/unwraps tokens based on the parameters provided.\"},\"getActionId(bytes4)\":{\"notice\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAddLiquidityCalledFlag(address)\":{\"notice\":\"This flag is used to detect and tax \\\"round trip\\\" transactions (adding and removing liquidity in the same pool).\"},\"getAggregateSwapFeeAmount(address,address)\":{\"notice\":\"Returns the accumulated swap fees (including aggregate fees) in `token` collected by the pool.\"},\"getAggregateYieldFeeAmount(address,address)\":{\"notice\":\"Returns the accumulated yield fees (including aggregate fees) in `token` collected by the pool.\"},\"getAuthorizer()\":{\"notice\":\"Returns the Authorizer address.\"},\"getBptRate(address)\":{\"notice\":\"The current rate of a pool token (BPT) = invariant / totalSupply.\"},\"getBufferAsset(address)\":{\"notice\":\"Returns the asset registered for a given wrapped token.\"},\"getBufferBalance(address)\":{\"notice\":\"Returns the amount of underlying and wrapped tokens deposited in the internal buffer of the Vault.\"},\"getBufferMinimumTotalSupply()\":{\"notice\":\"Get the minimum total supply of an ERC4626 wrapped token buffer in the Vault.\"},\"getBufferOwnerShares(address,address)\":{\"notice\":\"Returns the shares (internal buffer BPT) of a liquidity owner: a user that deposited assets in the buffer.\"},\"getBufferPeriodDuration()\":{\"notice\":\"Returns the Vault's buffer period duration.\"},\"getBufferPeriodEndTime()\":{\"notice\":\"Returns the Vault's buffer period end time.\"},\"getBufferTotalShares(address)\":{\"notice\":\"Returns the supply shares (internal buffer BPT) of the ERC4626 buffer.\"},\"getCurrentLiveBalances(address)\":{\"notice\":\"Gets current live balances of a given pool (fixed-point, 18 decimals), corresponding to its tokens in registration order.\"},\"getHooksConfig(address)\":{\"notice\":\"Gets the hooks configuration parameters of a pool.\"},\"getMaximumPoolTokens()\":{\"notice\":\"Get the maximum number of tokens in a pool.\"},\"getMinimumPoolTokens()\":{\"notice\":\"Get the minimum number of tokens in a pool.\"},\"getMinimumTradeAmount()\":{\"notice\":\"Get the minimum trade amount in a pool operation.\"},\"getMinimumWrapAmount()\":{\"notice\":\"Get the minimum wrap amount in a buffer operation.\"},\"getNonzeroDeltaCount()\":{\"notice\":\"Returns the count of non-zero deltas.\"},\"getPauseWindowEndTime()\":{\"notice\":\"Returns the Vault's pause window end time.\"},\"getPoolConfig(address)\":{\"notice\":\"Gets the configuration parameters of a pool.\"},\"getPoolData(address)\":{\"notice\":\"Returns comprehensive pool data for the given pool.\"},\"getPoolMinimumTotalSupply()\":{\"notice\":\"Get the minimum total supply of pool tokens (BPT) for an initialized pool.\"},\"getPoolPausedState(address)\":{\"notice\":\"Returns the paused status, and end times of the Pool's pause window and buffer period.\"},\"getPoolRoleAccounts(address)\":{\"notice\":\"Fetches the role accounts for a given pool (pause manager, swap manager, pool creator)\"},\"getPoolTokenCountAndIndexOfToken(address,address)\":{\"notice\":\"Gets the index of a token in a given pool.\"},\"getPoolTokenInfo(address)\":{\"notice\":\"Gets the raw data for a pool: tokens, raw balances, scaling factors.\"},\"getPoolTokenRates(address)\":{\"notice\":\"Gets pool token rates.\"},\"getPoolTokens(address)\":{\"notice\":\"Gets the tokens registered to a pool.\"},\"getProtocolFeeController()\":{\"notice\":\"Returns the Protocol Fee Controller address.\"},\"getReservesOf(address)\":{\"notice\":\"Retrieves the reserve (i.e., total Vault balance) of a given token.\"},\"getStaticSwapFeePercentage(address)\":{\"notice\":\"Fetches the static swap fee percentage for a given pool.\"},\"getTokenDelta(address)\":{\"notice\":\"Retrieves the token delta for a specific token.\"},\"getVaultAdmin()\":{\"notice\":\"Returns the VaultAdmin contract address.\"},\"getVaultExtension()\":{\"notice\":\"Returns the VaultExtension contract address.\"},\"getVaultPausedState()\":{\"notice\":\"Returns the paused status, and end times of the Vault's pause window and buffer period.\"},\"initialize(address,address,address[],uint256[],uint256,bytes)\":{\"notice\":\"Initializes a registered pool by adding liquidity; mints BPT tokens for the first time in exchange.\"},\"initializeBuffer(address,uint256,uint256,address)\":{\"notice\":\"Initializes buffer for the given wrapped token.\"},\"isERC4626BufferInitialized(address)\":{\"notice\":\"Checks if the wrapped token has an initialized buffer in the Vault.\"},\"isPoolInRecoveryMode(address)\":{\"notice\":\"Checks whether a pool is in Recovery Mode.\"},\"isPoolInitialized(address)\":{\"notice\":\"Checks whether a pool is initialized.\"},\"isPoolPaused(address)\":{\"notice\":\"Indicates whether a pool is paused.\"},\"isPoolRegistered(address)\":{\"notice\":\"Checks whether a pool is registered.\"},\"isQueryDisabled()\":{\"notice\":\"Checks if the queries enabled on the Vault.\"},\"isUnlocked()\":{\"notice\":\"Returns whether the Vault is unlocked (i.e., executing an operation).\"},\"isVaultPaused()\":{\"notice\":\"Indicates whether the Vault is paused.\"},\"pausePool(address)\":{\"notice\":\"Pause the Pool: an emergency action which disables all pool functions.\"},\"pauseVault()\":{\"notice\":\"Pause the Vault: an emergency action which disables all operational state-changing functions.\"},\"pauseVaultBuffers()\":{\"notice\":\"Pauses native vault buffers globally.\"},\"quote(bytes)\":{\"notice\":\"Performs a callback on msg.sender with arguments provided in `data`.\"},\"quoteAndRevert(bytes)\":{\"notice\":\"Performs a callback on msg.sender with arguments provided in `data`.\"},\"registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))\":{\"notice\":\"Registers a pool, associating it with its factory and the tokens it manages.\"},\"removeLiquidity((address,address,uint256,uint256[],uint8,bytes))\":{\"notice\":\"Removes liquidity from a pool.\"},\"removeLiquidityFromBuffer(address,uint256)\":{\"notice\":\"Removes liquidity from an internal ERC4626 buffer in the Vault.\"},\"removeLiquidityRecovery(address,address,uint256)\":{\"notice\":\"Remove liquidity from a pool specifying exact pool tokens in, with proportional token amounts out. The request is implemented by the Vault without any interaction with the pool, ensuring that it works the same for all pools, and cannot be disabled by a new pool type.\"},\"sendTo(address,address,uint256)\":{\"notice\":\"Sends tokens to a recipient.\"},\"setAuthorizer(address)\":{\"notice\":\"Sets a new Authorizer for the Vault.\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets a new Protocol Fee Controller for the Vault.\"},\"setStaticSwapFeePercentage(address,uint256)\":{\"notice\":\"Assigns a new static swap fee percentage to the specified pool.\"},\"settle(address,uint256)\":{\"notice\":\"Settles deltas for a token; must be successful for the current lock to be released.\"},\"swap((uint8,address,address,address,uint256,uint256,bytes))\":{\"notice\":\"Swaps tokens based on provided parameters.\"},\"totalSupply(address)\":{\"notice\":\"Gets the total supply of a given ERC20 token.\"},\"transfer(address,address,uint256)\":{\"notice\":\"Transfers pool token from owner to a recipient.\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"Transfers pool token from a sender to a recipient using an allowance.\"},\"unlock(bytes)\":{\"notice\":\"Creates a context for a sequence of operations (i.e., \\\"unlocks\\\" the Vault).\"},\"unpausePool(address)\":{\"notice\":\"Reverse a `pause` operation, and restore the Pool to normal functionality.\"},\"unpauseVault()\":{\"notice\":\"Reverse a `pause` operation, and restore the Vault to normal functionality.\"},\"unpauseVaultBuffers()\":{\"notice\":\"Unpauses native vault buffers globally.\"},\"updateAggregateSwapFeePercentage(address,uint256)\":{\"notice\":\"Update an aggregate swap fee percentage.\"},\"updateAggregateYieldFeePercentage(address,uint256)\":{\"notice\":\"Update an aggregate yield fee percentage.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultMock.sol\":\"IVaultMock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87\",\"dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol\":{\"keccak256\":\"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452\",\"dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultAdminMock.sol\":{\"keccak256\":\"0x8879bfdcd6c6bbf04fb6524645186fadb46b31e2278ecde83ff855cb10865109\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://170a8da61479ea43e5ce9736a60cf3fe053ae0529b5712d2679581754fc63c63\",\"dweb:/ipfs/QmUW6ScWNWpDVP2c1HPF6hJm5TkQ9REmZxSmJpF5XZaok4\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultExtensionMock.sol\":{\"keccak256\":\"0x18c434c91bbcd260bd305f2cdc01684a3040bc633c1b185f95cb323a336ac76c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://270260ba29c81dc6d862a0830ccbbdcd81b4543bd9c9b54228493a92568532d4\",\"dweb:/ipfs/QmTHp7v5dGwLujPRaWkoEM22Loy3MuspodMGcm4syAPUvk\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultMainMock.sol\":{\"keccak256\":\"0x257153a11d01686420d4815811361964fd12e4c7b9c4d47d4f97582b8dc16dd1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7aa5dff945e46eb2646fc29c7ff1865418d6dae4ea8cd37afe4961baeb08b33e\",\"dweb:/ipfs/QmfSRWBBbQ3nBqMLBHuyhvPv6xy6XnEFr18tNpqp6dguFE\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultMock.sol\":{\"keccak256\":\"0x0490632b8c42381468055beaf49d1e01adf9d06fbfdf3d5ef9ecd20aab3b2aff\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d0769731c6e87cf5a9e5ed4a93dea5125b2e028c6f2cade0b6054d99d5230c62\",\"dweb:/ipfs/QmYveTwXZQzi37F3PBCzVwfFqcgi7QH5SXBGA1VPrCHmUx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultStorageMock.sol\":{\"keccak256\":\"0xb59762a929624826418e57ef85207703bedfbab512eeb422fd16d40520ab05d9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8f6363f3ac816ff34ac5b78a564ed0febc9772d1dc130674e73db0a63b29273d\",\"dweb:/ipfs/QmSbmTTFb4vGqHSGQu974CHu146pCfzJRGFMxyN8ujopf7\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c\",\"dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol\":{\"keccak256\":\"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f\",\"dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol\":{\"keccak256\":\"0x265cba6f0225fae5867e47ead3b7d51ea124c6599d450b361bb86795ffb0a586\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9363b61e7b592c6d9476cfcdc9d468669f3e9d2d232ad426f6c5c6c00247258e\",\"dweb:/ipfs/QmT771Kpp4VswEcBCJCMxKKKiRNMcLJeziKCisjLrc2opx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566\",\"dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol\":{\"keccak256\":\"0xe68fbe2bef8c4fda8cf43d186d0e5518f9d76e57ac1c2f8082a1d0bcf444ace7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://614fb11ff5f7ea15cab882dfe4c7f69656eb5ad0e7cb217338664d8f1d0403c7\",\"dweb:/ipfs/QmUPZRXKFLsGEiPM38uDz14EVvJV81NCNBoWajmAbEmDka\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol\":{\"keccak256\":\"0x3bf1cfa4716401af08fd265db6ebbaad011d94d4531be5a6289aafbe4dc02f0f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7969b076f81af1fec02a0cc572ea56be691315bbcc761bb47e38aecb86ae15fc\",\"dweb:/ipfs/QmPkYWjEEj9Kzrbhcc6i8mmB1WAopcf13Ue2ZhayTXtnBm\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol\":{\"keccak256\":\"0xfa87a090e0b1fc87e34b6a891b7abd4697e75997e37d073020b91c7c408bffe3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b33f211008d57462d8b4598b78e477ce6ee53f0c1172682b94e896954752fe9\",\"dweb:/ipfs/QmVzjPRey6qss4ucJx3Mb1gs5MAyLKcLUD5tLt9KNn2SNR\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol\":{\"keccak256\":\"0x2c6f4f4d714a0f1e7e648909753839da8182117f22018f4337f9632f9c40597b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://99fb94d7fcf9f972f4aec716d7d4be43e3d28f90f8f5923b9b8245be178e01aa\",\"dweb:/ipfs/QmeLSFfcvYwmPpQ58yESVjYXPY13NzGU28WjxkWUj8sgqx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol\":{\"keccak256\":\"0x976def53871db0ad0db3504086a783508b0c293b86364c8985d6700283986799\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9a2904288327a95373e32d99b2244a7afcf9f741b970ff34af6a933076076e6\",\"dweb:/ipfs/QmaS4adLMjzagUsqYhtxo7KJW2kZogx5orQgvfVzLR3dzW\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol\":{\"keccak256\":\"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3\",\"dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/TransientStorageHelpers.sol\":{\"keccak256\":\"0x2a672a27fd968b130cbd556e0769a21cc7822766f39fd4f85079d8b3c3b94f04\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://57de967064b8c99e4f3b9b1d1b7918e70fafe36c69904695c9f2d22b8fd0210d\",\"dweb:/ipfs/QmX8CALkUGdZzovGMXx6CgMqBY4MsYsLFfDvKquKYVy8ef\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/SlotDerivation.sol\":{\"keccak256\":\"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2\",\"dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/StorageSlotExtension.sol\":{\"keccak256\":\"0xba524eab3f4f1b735008624cf11264842bec509e05ac025f93b8c843547fbfd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c539df1afd342c47fdbd96fb28a183b7b30e055c4e435cdf77140ec92e68a42\",\"dweb:/ipfs/QmZ4akawS7TKrJkBeoi4bfyGWRmQgXshtkAMupuxkgH5Ur\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf\",\"dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AfterAddLiquidityHookFailed"},{"inputs":[],"type":"error","name":"AfterInitializeHookFailed"},{"inputs":[],"type":"error","name":"AfterRemoveLiquidityHookFailed"},{"inputs":[],"type":"error","name":"AfterSwapHookFailed"},{"inputs":[],"type":"error","name":"AmountGivenZero"},{"inputs":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"type":"error","name":"AmountInAboveMax"},{"inputs":[{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"type":"error","name":"AmountOutBelowMin"},{"inputs":[],"type":"error","name":"BalanceNotSettled"},{"inputs":[],"type":"error","name":"BeforeAddLiquidityHookFailed"},{"inputs":[],"type":"error","name":"BeforeInitializeHookFailed"},{"inputs":[],"type":"error","name":"BeforeRemoveLiquidityHookFailed"},{"inputs":[],"type":"error","name":"BeforeSwapHookFailed"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"type":"error","name":"BptAmountInAboveMax"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"type":"error","name":"BptAmountOutBelowMin"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"type":"error","name":"BufferAlreadyInitialized"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"type":"error","name":"BufferNotInitialized"},{"inputs":[],"type":"error","name":"BufferSharesInvalidOwner"},{"inputs":[],"type":"error","name":"BufferSharesInvalidReceiver"},{"inputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"type":"error","name":"BufferTotalSupplyTooLow"},{"inputs":[],"type":"error","name":"CannotReceiveEth"},{"inputs":[],"type":"error","name":"CannotSwapSameToken"},{"inputs":[],"type":"error","name":"DoesNotSupportAddLiquidityCustom"},{"inputs":[],"type":"error","name":"DoesNotSupportDonation"},{"inputs":[],"type":"error","name":"DoesNotSupportRemoveLiquidityCustom"},{"inputs":[],"type":"error","name":"DoesNotSupportUnbalancedLiquidity"},{"inputs":[],"type":"error","name":"DynamicSwapFeeHookFailed"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"type":"error","name":"ERC20InsufficientAllowance"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"type":"error","name":"ERC20InsufficientBalance"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"type":"error","name":"ERC20InvalidApprover"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"type":"error","name":"ERC20InvalidReceiver"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"ERC20InvalidSender"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"type":"error","name":"ERC20InvalidSpender"},{"inputs":[],"type":"error","name":"FeePrecisionTooHigh"},{"inputs":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"type":"error","name":"HookAdjustedAmountInAboveMax"},{"inputs":[{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"type":"error","name":"HookAdjustedAmountOutBelowMin"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"type":"error","name":"HookAdjustedSwapLimit"},{"inputs":[{"internalType":"address","name":"poolHooksContract","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"poolFactory","type":"address"}],"type":"error","name":"HookRegistrationFailed"},{"inputs":[],"type":"error","name":"InvalidAddLiquidityKind"},{"inputs":[],"type":"error","name":"InvalidRemoveLiquidityKind"},{"inputs":[],"type":"error","name":"InvalidToken"},{"inputs":[],"type":"error","name":"InvalidTokenConfiguration"},{"inputs":[],"type":"error","name":"InvalidTokenType"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"type":"error","name":"InvalidUnderlyingToken"},{"inputs":[],"type":"error","name":"MaxTokens"},{"inputs":[],"type":"error","name":"MinTokens"},{"inputs":[],"type":"error","name":"NotEnoughBufferShares"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"expectedUnderlyingAmount","type":"uint256"},{"internalType":"uint256","name":"actualUnderlyingAmount","type":"uint256"}],"type":"error","name":"NotEnoughUnderlying"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"expectedWrappedAmount","type":"uint256"},{"internalType":"uint256","name":"actualWrappedAmount","type":"uint256"}],"type":"error","name":"NotEnoughWrapped"},{"inputs":[],"type":"error","name":"NotVaultDelegateCall"},{"inputs":[],"type":"error","name":"PauseBufferPeriodDurationTooLarge"},{"inputs":[],"type":"error","name":"PercentageAboveMax"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolAlreadyInitialized"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolAlreadyRegistered"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolInRecoveryMode"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolNotInRecoveryMode"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolNotInitialized"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolNotPaused"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolNotRegistered"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolPauseWindowExpired"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolPaused"},{"inputs":[],"type":"error","name":"ProtocolFeesExceedTotalCollected"},{"inputs":[],"type":"error","name":"QueriesDisabled"},{"inputs":[],"type":"error","name":"QuoteResultSpoofed"},{"inputs":[],"type":"error","name":"RouterNotTrusted"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"SenderIsNotVault"},{"inputs":[],"type":"error","name":"SenderNotAllowed"},{"inputs":[],"type":"error","name":"SwapFeePercentageTooHigh"},{"inputs":[],"type":"error","name":"SwapFeePercentageTooLow"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"type":"error","name":"SwapLimit"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"type":"error","name":"TokenAlreadyRegistered"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"type":"error","name":"TokenNotRegistered"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"expectedToken","type":"address"},{"internalType":"address","name":"actualToken","type":"address"}],"type":"error","name":"TokensMismatch"},{"inputs":[],"type":"error","name":"TradeAmountTooSmall"},{"inputs":[],"type":"error","name":"VaultBuffersArePaused"},{"inputs":[],"type":"error","name":"VaultIsNotUnlocked"},{"inputs":[],"type":"error","name":"VaultNotPaused"},{"inputs":[],"type":"error","name":"VaultPauseWindowDurationTooLarge"},{"inputs":[],"type":"error","name":"VaultPauseWindowExpired"},{"inputs":[],"type":"error","name":"VaultPaused"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"type":"error","name":"WrapAmountTooSmall"},{"inputs":[],"type":"error","name":"WrongProtocolFeeControllerDeployment"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"underlyingToken","type":"address"}],"type":"error","name":"WrongUnderlyingToken"},{"inputs":[],"type":"error","name":"WrongVaultAdminDeployment"},{"inputs":[],"type":"error","name":"WrongVaultExtensionDeployment"},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256","indexed":false}],"type":"event","name":"AggregateSwapFeePercentageChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256","indexed":false}],"type":"event","name":"AggregateYieldFeePercentageChanged","anonymous":false},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address","indexed":true}],"type":"event","name":"AuthorizerChanged","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"uint256","name":"burnedShares","type":"uint256","indexed":false}],"type":"event","name":"BufferSharesBurned","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"issuedShares","type":"uint256","indexed":false}],"type":"event","name":"BufferSharesMinted","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"uint256","name":"amountUnderlying","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountWrapped","type":"uint256","indexed":false}],"type":"event","name":"LiquidityAddedToBuffer","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"uint256","name":"amountUnderlying","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountWrapped","type":"uint256","indexed":false}],"type":"event","name":"LiquidityRemovedFromBuffer","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"address","name":"liquidityProvider","type":"address","indexed":true},{"internalType":"uint256","name":"totalSupply","type":"uint256","indexed":false},{"internalType":"int256[]","name":"deltas","type":"int256[]","indexed":false},{"internalType":"uint256[]","name":"swapFeeAmountsRaw","type":"uint256[]","indexed":false}],"type":"event","name":"PoolBalanceChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true}],"type":"event","name":"PoolInitialized","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"bool","name":"paused","type":"bool","indexed":false}],"type":"event","name":"PoolPausedStateChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"bool","name":"recoveryMode","type":"bool","indexed":false}],"type":"event","name":"PoolRecoveryModeStateChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"address","name":"factory","type":"address","indexed":true},{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"indexed":false},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256","indexed":false},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32","indexed":false},{"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple","components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}],"indexed":false},{"internalType":"struct HooksConfig","name":"hooksConfig","type":"tuple","components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"},{"internalType":"address","name":"hooksContract","type":"address"}],"indexed":false},{"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"indexed":false}],"type":"event","name":"PoolRegistered","anonymous":false},{"inputs":[{"internalType":"contract IProtocolFeeController","name":"newProtocolFeeController","type":"address","indexed":true}],"type":"event","name":"ProtocolFeeControllerChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"contract IERC20","name":"tokenIn","type":"address","indexed":true},{"internalType":"contract IERC20","name":"tokenOut","type":"address","indexed":true},{"internalType":"uint256","name":"amountIn","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountOut","type":"uint256","indexed":false},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256","indexed":false},{"internalType":"uint256","name":"swapFeeAmount","type":"uint256","indexed":false}],"type":"event","name":"Swap","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256","indexed":false}],"type":"event","name":"SwapFeePercentageChanged","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"contract IERC20","name":"underlyingToken","type":"address","indexed":true},{"internalType":"uint256","name":"burnedShares","type":"uint256","indexed":false},{"internalType":"uint256","name":"withdrawnUnderlying","type":"uint256","indexed":false}],"type":"event","name":"Unwrap","anonymous":false},{"inputs":[{"internalType":"bool","name":"paused","type":"bool","indexed":false}],"type":"event","name":"VaultBuffersPausedStateChanged","anonymous":false},{"inputs":[{"internalType":"bool","name":"paused","type":"bool","indexed":false}],"type":"event","name":"VaultPausedStateChanged","anonymous":false},{"inputs":[],"type":"event","name":"VaultQueriesDisabled","anonymous":false},{"inputs":[{"internalType":"contract IERC20","name":"underlyingToken","type":"address","indexed":true},{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"uint256","name":"depositedUnderlying","type":"uint256","indexed":false},{"internalType":"uint256","name":"mintedShares","type":"uint256","indexed":false}],"type":"event","name":"Wrap","anonymous":false},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"int256","name":"delta","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"accountDelta"},{"inputs":[{"internalType":"struct AddLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"addLiquidity","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"exactSharesToIssue","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addLiquidityToBuffer","outputs":[{"internalType":"uint256","name":"amountUnderlyingRaw","type":"uint256"},{"internalType":"uint256","name":"amountWrappedRaw","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"underlyingAmount","type":"uint256"},{"internalType":"uint256","name":"wrappedAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addLiquidityToBufferUnbalancedForTests"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"areBuffersPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"stateMutability":"view","type":"function","name":"buildTokenConfig","outputs":[{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]}]},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"contract IRateProvider[]","name":"rateProviders","type":"address[]"}],"stateMutability":"view","type":"function","name":"buildTokenConfig","outputs":[{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]}]},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"enum TokenType[]","name":"tokenTypes","type":"uint8[]"},{"internalType":"contract IRateProvider[]","name":"rateProviders","type":"address[]"},{"internalType":"bool[]","name":"yieldFeeFlags","type":"bool[]"}],"stateMutability":"view","type":"function","name":"buildTokenConfig","outputs":[{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]}]},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"contract IRateProvider[]","name":"rateProviders","type":"address[]"},{"internalType":"bool[]","name":"yieldFeeFlags","type":"bool[]"}],"stateMutability":"view","type":"function","name":"buildTokenConfig","outputs":[{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burnERC20"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"collectAggregateFees","outputs":[{"internalType":"uint256[]","name":"swapFeeAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"yieldFeeAmounts","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct PoolSwapParams","name":"swapParams","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]}],"stateMutability":"view","type":"function","name":"computeDynamicSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"uint256","name":"lastLiveBalance","type":"uint256"},{"internalType":"uint256","name":"tokenIndex","type":"uint256"},{"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeYieldFeesDue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"disableQuery"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"disableRecoveryMode"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"enableRecoveryMode"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"ensurePoolNotPaused"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"ensureUnpausedAndGetVaultState","outputs":[{"internalType":"struct VaultState","name":"","type":"tuple","components":[{"internalType":"bool","name":"isQueryDisabled","type":"bool"},{"internalType":"bool","name":"isVaultPaused","type":"bool"},{"internalType":"bool","name":"areBuffersPaused","type":"bool"}]}]},{"inputs":[{"internalType":"uint256","name":"tradeAmount","type":"uint256"}],"stateMutability":"view","type":"function","name":"ensureValidSwapAmount"},{"inputs":[{"internalType":"uint256","name":"tradeAmount","type":"uint256"}],"stateMutability":"view","type":"function","name":"ensureValidTradeAmount"},{"inputs":[{"internalType":"struct BufferWrapOrUnwrapParams","name":"params","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"enum WrappingDirection","name":"direction","type":"uint8"},{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"erc4626BufferWrapOrUnwrap","outputs":[{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"uint256","name":"amountInRaw","type":"uint256"},{"internalType":"uint256","name":"amountOutRaw","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"forceLock"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"forceUnlock"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"view","type":"function","name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getAddLiquidityCalledFlag","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getAggregateSwapFeeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getAggregateYieldFeeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getBptRate","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"stateMutability":"view","type":"function","name":"getBufferAsset","outputs":[{"internalType":"address","name":"underlyingToken","type":"address"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"stateMutability":"view","type":"function","name":"getBufferBalance","outputs":[{"internalType":"uint256","name":"underlyingBalanceRaw","type":"uint256"},{"internalType":"uint256","name":"wrappedBalanceRaw","type":"uint256"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"getBufferMinimumTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"liquidityOwner","type":"address"}],"stateMutability":"view","type":"function","name":"getBufferOwnerShares","outputs":[{"internalType":"uint256","name":"ownerShares","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBufferPeriodDuration","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBufferPeriodEndTime","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"stateMutability":"view","type":"function","name":"getBufferTokenBalancesBytes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"stateMutability":"view","type":"function","name":"getBufferTotalShares","outputs":[{"internalType":"uint256","name":"bufferShares","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getCurrentLiveBalances","outputs":[{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getHooksConfig","outputs":[{"internalType":"struct HooksConfig","name":"","type":"tuple","components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"},{"internalType":"address","name":"hooksContract","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getLastLiveBalances","outputs":[{"internalType":"uint256[]","name":"lastBalancesLiveScaled18","type":"uint256[]"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"getMaximumPoolTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"getMinimumPoolTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getMinimumTradeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getMinimumWrapAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getNonzeroDeltaCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPauseWindowEndTime","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolConfig","outputs":[{"internalType":"struct PoolConfig","name":"","type":"tuple","components":[{"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}]},{"internalType":"uint256","name":"staticSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"},{"internalType":"uint40","name":"tokenDecimalDiffs","type":"uint40"},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"internalType":"bool","name":"isPoolRegistered","type":"bool"},{"internalType":"bool","name":"isPoolInitialized","type":"bool"},{"internalType":"bool","name":"isPoolPaused","type":"bool"},{"internalType":"bool","name":"isPoolInRecoveryMode","type":"bool"}]}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolData","outputs":[{"internalType":"struct PoolData","name":"","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPoolFactoryMock","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"getPoolMinimumTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolPausedState","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolRoleAccounts","outputs":[{"internalType":"struct PoolRoleAccounts","name":"","type":"tuple","components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolTokenCountAndIndexOfToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolTokenInfo","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"lastBalancesLiveScaled18","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolTokenRates","outputs":[{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getProtocolFeeController","outputs":[{"internalType":"contract IProtocolFeeController","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getRawBalances","outputs":[{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"}]},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getReservesOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getStaticSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getTokenDelta","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getVaultAdmin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getVaultExtension","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getVaultPausedState","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"guardedCheckEntered"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"initialize","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"amountUnderlyingRaw","type":"uint256"},{"internalType":"uint256","name":"amountWrappedRaw","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initializeBuffer","outputs":[{"internalType":"uint256","name":"issuedShares","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"stateMutability":"view","type":"function","name":"internalGetBufferUnderlyingImbalance","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"stateMutability":"view","type":"function","name":"internalGetBufferWrappedImbalance","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"stateMutability":"view","type":"function","name":"isERC4626BufferInitialized","outputs":[{"internalType":"bool","name":"isBufferInitialized","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"isPoolInRecoveryMode","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"isPoolInitialized","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"isPoolPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"isPoolRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isQueryDisabled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isUnlocked","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isVaultPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum Rounding","name":"roundingDirection","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"loadPoolDataUpdatingBalancesAndYieldFees","outputs":[{"internalType":"struct PoolData","name":"","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum Rounding","name":"roundingDirection","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"loadPoolDataUpdatingBalancesAndYieldFeesReentrancy","outputs":[{"internalType":"struct PoolData","name":"","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}]},{"inputs":[{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"struct AddLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"uint256[]","name":"maxAmountsInScaled18","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"manualAddLiquidity","outputs":[{"internalType":"struct PoolData","name":"updatedPoolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"uint256[]","name":"amountsInRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsInScaled18","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}]},{"inputs":[{"internalType":"struct VaultSwapParams","name":"vaultSwapParams","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"struct SwapState","name":"state","type":"tuple","components":[{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}]},{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}],"stateMutability":"view","type":"function","name":"manualBuildPoolSwapParams","outputs":[{"internalType":"struct PoolSwapParams","name":"","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualBurnBufferShares"},{"inputs":[{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"uint256","name":"totalSwapFeeAmountScaled18","type":"uint256"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualComputeAndChargeAggregateSwapFees","outputs":[{"internalType":"uint256","name":"totalSwapFeeAmountRaw","type":"uint256"},{"internalType":"uint256","name":"aggregateSwapFeeAmountRaw","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualDisableRecoveryMode"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualEnableRecoveryMode"},{"inputs":[{"internalType":"struct BufferWrapOrUnwrapParams","name":"params","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"enum WrappingDirection","name":"direction","type":"uint8"},{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"manualErc4626BufferWrapOrUnwrapReentrancy","outputs":[{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"uint256","name":"amountInRaw","type":"uint256"},{"internalType":"uint256","name":"amountOutRaw","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"pure","type":"function","name":"manualFindTokenIndex","outputs":[{"internalType":"uint256","name":"index","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"manualGetAggregateSwapFeeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"manualGetAggregateYieldFeeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"manualGetIsUnlocked","outputs":[{"internalType":"StorageSlotExtension.BooleanSlotType","name":"slot","type":"bytes32"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"manualGetNonzeroDeltaCount","outputs":[{"internalType":"StorageSlotExtension.Uint256SlotType","name":"slot","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"manualGetPoolConfigBits","outputs":[{"internalType":"PoolConfigBits","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"manualGetTokenDeltas","outputs":[{"internalType":"TokenDeltaMappingSlotType","name":"slot","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"manualInitializePoolReentrancy"},{"inputs":[{"internalType":"struct VaultSwapParams","name":"vaultSwapParams","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"struct SwapState","name":"state","type":"tuple","components":[{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}]},{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}],"stateMutability":"nonpayable","type":"function","name":"manualInternalSwap","outputs":[{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedScaled18","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"struct VaultSwapParams","name":"","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"struct SwapState","name":"","type":"tuple","components":[{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}]},{"internalType":"struct PoolData","name":"","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualMintBufferShares"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualMintMinimumBufferSupplyReserve"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualPausePool"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"manualPauseVault"},{"inputs":[{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"struct AddLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"uint256[]","name":"maxAmountsInScaled18","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"manualReentrancyAddLiquidity"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"exactSharesToIssue","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualReentrancyAddLiquidityToBuffer"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualReentrancyDisableRecoveryMode"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"amountUnderlying","type":"uint256"},{"internalType":"uint256","name":"amountWrapped","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualReentrancyInitializeBuffer"},{"inputs":[{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"struct RemoveLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"uint256[]","name":"minAmountsOutScaled18","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"manualReentrancyRemoveLiquidity"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"sharesToRemove","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualReentrancyRemoveLiquidityFromBufferHook"},{"inputs":[{"internalType":"struct VaultSwapParams","name":"vaultSwapParams","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"struct SwapState","name":"state","type":"tuple","components":[{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}]},{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}],"stateMutability":"nonpayable","type":"function","name":"manualReentrancySwap"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"manualRegisterPool"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple","components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"manualRegisterPoolAtTimestamp"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"manualRegisterPoolPassThruTokens"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"internalType":"bool","name":"protocolFeeExempt","type":"bool"},{"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple","components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}]},{"internalType":"address","name":"poolHooksContract","type":"address"},{"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"manualRegisterPoolReentrancy"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualRegisterPoolWithSwapFee"},{"inputs":[{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"struct RemoveLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"uint256[]","name":"minAmountsOutScaled18","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"manualRemoveLiquidity","outputs":[{"internalType":"struct PoolData","name":"updatedPoolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOutRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsOutScaled18","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}]},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSendToReentrancy"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"int256","name":"delta","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetAccountDelta"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"bool","name":"flag","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"manualSetAddLiquidityCalledFlag"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetAggregateSwapFeeAmount"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetAggregateSwapFeePercentage"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetAggregateYieldFeeAmount"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetAggregateYieldFeePercentage"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"underlyingToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualSetBufferAsset"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"underlyingAmount","type":"uint256"},{"internalType":"uint256","name":"wrappedAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetBufferBalances"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetBufferOwnerShares"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetBufferTotalShares"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct HooksConfig","name":"config","type":"tuple","components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"},{"internalType":"address","name":"hooksContract","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"manualSetHooksConfig"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"bool","name":"isPoolInitialized","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"manualSetInitializedPool"},{"inputs":[{"internalType":"uint256","name":"deltaCount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetNonZeroDeltaCount"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolBalances"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct PoolConfig","name":"config","type":"tuple","components":[{"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}]},{"internalType":"uint256","name":"staticSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"},{"internalType":"uint40","name":"tokenDecimalDiffs","type":"uint40"},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"internalType":"bool","name":"isPoolRegistered","type":"bool"},{"internalType":"bool","name":"isPoolInitialized","type":"bool"},{"internalType":"bool","name":"isPoolPaused","type":"bool"},{"internalType":"bool","name":"isPoolInRecoveryMode","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolConfig"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"PoolConfigBits","name":"config","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolConfigBits"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"newPoolCreator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolCreator"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolPauseWindowEndTime"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolPaused"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolRegistered"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"contract IERC20[]","name":"","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolTokenInfo"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct TokenConfig[]","name":"","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolTokenInfo"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"contract IERC20[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"manualSetPoolTokensAndBalances"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"reserves","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetReservesOf"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSetStaticSwapFeePercentage"},{"inputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"manualSetVaultPaused"},{"inputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"manualSetVaultState"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualSettleReentrancy","outputs":[{"internalType":"uint256","name":"paid","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC20","name":"underlyingToken","type":"address"},{"internalType":"contract IERC20","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"underlyingHint","type":"uint256"},{"internalType":"uint256","name":"wrappedHint","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSettleUnwrap"},{"inputs":[{"internalType":"contract IERC20","name":"underlyingToken","type":"address"},{"internalType":"contract IERC20","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"underlyingHint","type":"uint256"},{"internalType":"uint256","name":"wrappedHint","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualSettleWrap"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualTransfer"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualUnpausePool"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"manualUnpauseVault"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manualUnsafeSetStaticSwapFeePercentage"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"enum Rounding","name":"roundingDirection","type":"uint8"}],"stateMutability":"view","type":"function","name":"manualUpdatePoolDataLiveBalancesAndRates","outputs":[{"internalType":"struct PoolData","name":"","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"manuallySetSwapFee"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mintERC20"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"mockEnsurePoolNotInRecoveryMode"},{"inputs":[],"stateMutability":"view","type":"function","name":"mockIsUnlocked"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"mockWithInitializedPool"},{"inputs":[{"internalType":"uint256","name":"percentage","type":"uint256"}],"stateMutability":"view","type":"function","name":"mockWithValidPercentage"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"pausePool"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseVault"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseVaultBuffers"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"quote","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"quoteAndRevert"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"recoveryModeExit"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"internalType":"bool","name":"protocolFeeExempt","type":"bool"},{"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple","components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}]},{"internalType":"address","name":"poolHooksContract","type":"address"},{"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"registerPool"},{"inputs":[{"internalType":"struct RemoveLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}]},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"sharesToRemove","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeLiquidityFromBuffer","outputs":[{"internalType":"uint256","name":"removedUnderlyingBalanceRaw","type":"uint256"},{"internalType":"uint256","name":"removedWrappedBalanceRaw","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeLiquidityRecovery","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}]},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sendTo"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setAuthorizer"},{"inputs":[{"internalType":"contract IProtocolFeeController","name":"newProtocolFeeController","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setProtocolFeeController"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setStaticSwapFeePercentage"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amountHint","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"settle","outputs":[{"internalType":"uint256","name":"credit","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"credit","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"supplyCredit"},{"inputs":[{"internalType":"struct VaultSwapParams","name":"vaultSwapParams","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"swap","outputs":[{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"uint256","name":"amountInRaw","type":"uint256"},{"internalType":"uint256","name":"amountOutRaw","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"debt","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"takeDebt"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"unguardedCheckNotEntered"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"unlock","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"unpausePool"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpauseVault"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpauseVaultBuffers"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"newAggregateSwapFeePercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateAggregateSwapFeePercentage"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"newAggregateYieldFeePercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateAggregateYieldFeePercentage"},{"inputs":[{"internalType":"struct PoolData","name":"poolData","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]},{"internalType":"uint256","name":"newRawBalance","type":"uint256"},{"internalType":"enum Rounding","name":"roundingDirection","type":"uint8"},{"internalType":"uint256","name":"tokenIndex","type":"uint256"}],"stateMutability":"pure","type":"function","name":"updateLiveTokenBalanceInPoolData","outputs":[{"internalType":"struct PoolData","name":"","type":"tuple","components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]","components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"addLiquidity((address,address,uint256[],uint256,uint8,bytes))":{"details":"Caution should be exercised when adding liquidity because the Vault has the capability to transfer tokens from any user, given that it holds all allowances.","params":{"params":"Parameters for the add liquidity (see above for struct definition)"},"returns":{"amountsIn":"Actual amounts of input tokens","bptAmountOut":"Output pool token amount","returnData":"Arbitrary (optional) data with an encoded response from the pool"}},"addLiquidityToBuffer(address,uint256,address)":{"details":"The buffer needs to be initialized beforehand.","params":{"exactSharesToIssue":"The value in underlying tokens that `sharesOwner` wants to add to the buffer, in underlying token decimals","sharesOwner":"Address that will own the deposited liquidity. Only this address will be able to remove liquidity from the buffer","wrappedToken":"Address of the wrapped token that implements IERC4626"},"returns":{"amountUnderlyingRaw":"Amount of underlying tokens deposited into the buffer","amountWrappedRaw":"Amount of wrapped tokens deposited into the buffer"}},"addLiquidityToBufferUnbalancedForTests(address,uint256,uint256)":{"details":"Adds liquidity to buffer unbalanced, so it can unbalance the buffer."},"allowance(address,address,address)":{"params":{"owner":"Address of the owner","spender":"Address of the spender","token":"Address of the token"},"returns":{"_0":"allowance Amount of tokens the spender is allowed to spend"}},"approve(address,address,uint256)":{"details":"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.","params":{"amount":"Amount of tokens to approve","owner":"Address of the owner","spender":"Address of the spender"},"returns":{"_0":"success True if successful, false otherwise"}},"areBuffersPaused()":{"details":"When buffers are paused, all buffer operations (i.e., calls on the Router with `isBuffer` true) will revert. Pausing buffers is reversible.","returns":{"_0":"buffersPaused True if the Vault buffers are paused"}},"balanceOf(address,address)":{"params":{"account":"Address of the account","token":"Address of the token"},"returns":{"_0":"balance Balance of the account for the token"}},"buildTokenConfig(address[],address[])":{"details":"Infers TokenType (STANDARD or WITH_RATE) from the presence or absence of the rate provider."},"buildTokenConfig(address[],address[],bool[])":{"details":"Infers TokenType (STANDARD or WITH_RATE) from the presence or absence of the rate provider."},"collectAggregateFees(address)":{"details":"Fees are sent to the ProtocolFeeController address.","params":{"pool":"The pool on which all aggregate fees should be collected"},"returns":{"swapFeeAmounts":"An array with the total swap fees collected, sorted in token registration order","yieldFeeAmounts":"An array with the total yield fees collected, sorted in token registration order"}},"computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))":{"details":"Reverts if the hook doesn't return the success flag set to `true`.","params":{"pool":"The pool","swapParams":"The swap parameters used to compute the fee"},"returns":{"_0":"dynamicSwapFeePercentage The dynamic swap fee percentage"}},"disableRecoveryMode(address)":{"details":"This is a permissioned function. It re-syncs live balances (which could not be updated during Recovery Mode), forfeiting any yield fees that accrued while enabled. It makes external calls, and could potentially fail if there is an issue with any associated Rate Providers.","params":{"pool":"The address of the pool"}},"enableRecoveryMode(address)":{"details":"This is a permissioned function. It enables a safe proportional withdrawal, with no external calls. Since there are no external calls, live balances cannot be updated while in Recovery Mode.","params":{"pool":"The address of the pool"}},"erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))":{"details":"All parameters are given in raw token decimal encoding. It requires the buffer to be initialized, and uses the internal wrapped token buffer when it has enough liquidity to avoid external calls.","params":{"params":"Parameters for the wrap/unwrap operation (see struct definition)"},"returns":{"amountCalculatedRaw":"Calculated swap amount","amountInRaw":"Amount of input tokens for the swap","amountOutRaw":"Amount of output tokens from the swap"}},"getActionId(bytes4)":{"params":{"selector":"The 4-byte selector of the permissioned function"},"returns":{"_0":"actionId The computed actionId"}},"getAddLiquidityCalledFlag(address)":{"details":"Taxing remove liquidity proportional whenever liquidity was added in the same transaction adds an extra layer of security, discouraging operations that try to undo others for profit. Remove liquidity proportional is the only standard way to exit a position without fees, and this flag is used to enable fees in that case. It also discourages indirect swaps via unbalanced add and remove proportional, as they are expected to be worse than a simple swap for every pool type.","params":{"pool":"Address of the pool to check"},"returns":{"_0":"liquidityAdded True if liquidity has been added to this pool in the current transaction"}},"getAggregateSwapFeeAmount(address,address)":{"params":{"pool":"The address of the pool for which aggregate fees have been collected","token":"The address of the token in which fees have been accumulated"},"returns":{"_0":"swapFeeAmount The total amount of fees accumulated in the specified token"}},"getAggregateYieldFeeAmount(address,address)":{"params":{"pool":"The address of the pool for which aggregate fees have been collected","token":"The address of the token in which fees have been accumulated"},"returns":{"_0":"yieldFeeAmount The total amount of fees accumulated in the specified token"}},"getAuthorizer()":{"details":"The authorizer holds the permissions granted by governance. It is set on Vault deployment, and can be changed through a permissioned call.","returns":{"_0":"authorizer Address of the authorizer contract"}},"getBptRate(address)":{"params":{"pool":"Address of the pool"},"returns":{"rate":"BPT rate"}},"getBufferAsset(address)":{"details":"The asset can never change after buffer initialization.","params":{"wrappedToken":"Address of the wrapped token that implements IERC4626"},"returns":{"underlyingToken":"Address of the underlying token registered for the wrapper; `address(0)` if the buffer has not been initialized."}},"getBufferBalance(address)":{"details":"All values are in native token decimals of the wrapped or underlying tokens.","params":{"wrappedToken":"Address of the wrapped token that implements IERC4626"},"returns":{"underlyingBalanceRaw":"Amount of underlying tokens deposited into the buffer, in native token decimals","wrappedBalanceRaw":"Amount of wrapped tokens deposited into the buffer, in native token decimals"}},"getBufferMinimumTotalSupply()":{"details":"This prevents buffers from being completely drained. When the buffer is initialized, this minimum number of shares is added to the shares resulting from the initial deposit. Buffer total supply accounting is internal to the Vault, as buffers are not tokenized.","returns":{"_0":"minimumTotalSupply The minimum total supply a buffer can have after initialization"}},"getBufferOwnerShares(address,address)":{"params":{"liquidityOwner":"Address of the user that owns liquidity in the wrapped token's buffer","wrappedToken":"Address of the wrapped token that implements IERC4626"},"returns":{"ownerShares":"Amount of shares allocated to the liquidity owner, in native underlying token decimals"}},"getBufferPeriodDuration()":{"details":"This value is immutable. It represents the period during which, if paused, the Vault will remain paused. This ensures there is time available to address whatever issue caused the Vault to be paused.","returns":{"_0":"bufferPeriodDuration The length of the buffer period in seconds"}},"getBufferPeriodEndTime()":{"details":"This value is immutable. If already paused, the Vault can be unpaused until this timestamp.","returns":{"_0":"bufferPeriodEndTime The timestamp after which the Vault remains permanently unpaused"}},"getBufferTotalShares(address)":{"params":{"wrappedToken":"Address of the wrapped token that implements IERC4626"},"returns":{"bufferShares":"Amount of supply shares of the buffer, in native underlying token decimals"}},"getCurrentLiveBalances(address)":{"params":{"pool":"Address of the pool"},"returns":{"balancesLiveScaled18":"Token balances after paying yield fees, applying decimal scaling and rates"}},"getHooksConfig(address)":{"details":"The `HooksConfig` contains flags indicating which pool hooks are implemented.","params":{"pool":"Address of the pool"},"returns":{"_0":"hooksConfig The hooks configuration as a `HooksConfig` struct"}},"getMaximumPoolTokens()":{"returns":{"_0":"maxTokens The maximum token count of a pool"}},"getMinimumPoolTokens()":{"details":"We expect the vast majority of pools to be 2-token.","returns":{"_0":"minTokens The minimum token count of a pool"}},"getMinimumTradeAmount()":{"details":"This limit is applied to the 18-decimal \"upscaled\" amount in any operation (swap, add/remove liquidity).","returns":{"_0":"minimumTradeAmount The minimum trade amount as an 18-decimal floating point number"}},"getMinimumWrapAmount()":{"details":"This limit is applied to the wrap operation amount, in native underlying token decimals.","returns":{"_0":"minimumWrapAmount The minimum wrap amount in native underlying token decimals"}},"getNonzeroDeltaCount()":{"returns":{"_0":"nonzeroDeltaCount The current value of `_nonzeroDeltaCount`"}},"getPauseWindowEndTime()":{"details":"This value is immutable, and represents the timestamp after which the Vault can no longer be paused by governance.","returns":{"_0":"pauseWindowEndTime The timestamp when the Vault's pause window ends"}},"getPoolConfig(address)":{"details":"The `PoolConfig` contains liquidity management and other state flags, fee percentages, the pause window.","params":{"pool":"Address of the pool"},"returns":{"_0":"poolConfig The pool configuration as a `PoolConfig` struct"}},"getPoolData(address)":{"details":"This contains the pool configuration (flags), tokens and token types, rates, scaling factors, and balances.","params":{"pool":"The address of the pool"},"returns":{"_0":"poolData The `PoolData` result"}},"getPoolMinimumTotalSupply()":{"details":"This prevents pools from being completely drained. When the pool is initialized, this minimum amount of BPT is minted to the zero address. This is an 18-decimal floating point number; BPT are always 18 decimals.","returns":{"_0":"minimumTotalSupply The minimum total supply a pool can have after initialization"}},"getPoolPausedState(address)":{"details":"Note that even when set to a paused state, the pool will automatically unpause at the end of the buffer period.","params":{"pool":"The pool whose data is requested"},"returns":{"_0":"paused True if the Pool is paused","_1":"poolPauseWindowEndTime The timestamp of the end of the Pool's pause window","_2":"poolBufferPeriodEndTime The timestamp after which the Pool unpauses itself (if paused)","_3":"pauseManager The pause manager, or the zero address"}},"getPoolRoleAccounts(address)":{"params":{"pool":"The address of the pool whose roles are being queried"},"returns":{"_0":"roleAccounts A struct containing the role accounts for the pool (or 0 if unassigned)"}},"getPoolTokenCountAndIndexOfToken(address,address)":{"details":"Reverts if the pool is not registered, or if the token does not belong to the pool.","params":{"pool":"Address of the pool","token":"Address of the token"},"returns":{"_0":"tokenCount Number of tokens in the pool","_1":"index Index corresponding to the given token in the pool's token list"}},"getPoolTokenInfo(address)":{"params":{"pool":"Address of the pool"},"returns":{"balancesRaw":"Current native decimal balances of the pool tokens, sorted in pool registration order","lastBalancesLiveScaled18":"Last saved live balances, sorted in token registration order","tokenInfo":"Token info structs (type, rate provider, yield flag), sorted in pool registration order","tokens":"The pool tokens, sorted in registration order"}},"getPoolTokenRates(address)":{"details":"This function performs external calls if tokens are yield-bearing. All returned arrays are in token registration order.","params":{"pool":"Address of the pool"},"returns":{"decimalScalingFactors":"Conversion factor used to adjust for token decimals for uniform precision in calculations. FP(1) for 18-decimal tokens","tokenRates":"18-decimal FP values for rate tokens (e.g., yield-bearing), or FP(1) for standard tokens"}},"getPoolTokens(address)":{"params":{"pool":"Address of the pool"},"returns":{"_0":"tokens List of tokens in the pool"}},"getProtocolFeeController()":{"returns":{"_0":"protocolFeeController Address of the ProtocolFeeController"}},"getReservesOf(address)":{"params":{"token":"The token for which to retrieve the reserve"},"returns":{"_0":"reserveAmount The amount of reserves for the given token"}},"getStaticSwapFeePercentage(address)":{"params":{"pool":"The address of the pool whose static swap fee percentage is being queried"},"returns":{"_0":"swapFeePercentage The current static swap fee percentage for the specified pool"}},"getTokenDelta(address)":{"details":"This function allows reading the value from the `_tokenDeltas` mapping.","params":{"token":"The token for which the delta is being fetched"},"returns":{"_0":"tokenDelta The delta of the specified token"}},"getVaultAdmin()":{"details":"The VaultAdmin contract mostly implements permissioned functions.","returns":{"_0":"vaultAdmin The address of the Vault admin"}},"getVaultExtension()":{"details":"Function is in the main Vault contract. The VaultExtension handles less critical or frequently used functions, since delegate calls through the Vault are more expensive than direct calls.","returns":{"_0":"vaultExtension Address of the VaultExtension"}},"getVaultPausedState()":{"returns":{"_0":"paused True if the Vault is paused","_1":"vaultPauseWindowEndTime The timestamp of the end of the Vault's pause window","_2":"vaultBufferPeriodEndTime The timestamp of the end of the Vault's buffer period"}},"initialize(address,address,address[],uint256[],uint256,bytes)":{"params":{"exactAmountsIn":"Exact amounts of input tokens","minBptAmountOut":"Minimum amount of output pool tokens","pool":"Address of the pool to initialize","to":"Address that will receive the output BPT","tokens":"Tokens used to seed the pool (must match the registered tokens)","userData":"Additional (optional) data required for adding initial liquidity"},"returns":{"bptAmountOut":"Output pool token amount"}},"initializeBuffer(address,uint256,uint256,address)":{"params":{"amountUnderlyingRaw":"Amount of underlying tokens that will be deposited into the buffer","amountWrappedRaw":"Amount of wrapped tokens that will be deposited into the buffer","sharesOwner":"Address that will own the deposited liquidity. Only this address will be able to remove liquidity from the buffer","wrappedToken":"Address of the wrapped token that implements IERC4626"},"returns":{"issuedShares":"the amount of tokens sharesOwner has in the buffer, expressed in underlying token amounts. (it is the BPT of an internal ERC4626 buffer). It is expressed in underlying token native decimals."}},"isERC4626BufferInitialized(address)":{"details":"An initialized buffer should have an asset registered in the Vault.","params":{"wrappedToken":"Address of the wrapped token that implements IERC4626"},"returns":{"isBufferInitialized":"True if the ERC4626 buffer is initialized"}},"isPoolInRecoveryMode(address)":{"details":"Recovery Mode enables a safe proportional withdrawal path, with no external calls.","params":{"pool":"Address of the pool to check"},"returns":{"_0":"recoveryMode True if the pool is in Recovery Mode, false otherwise"}},"isPoolInitialized(address)":{"details":"An initialized pool can be considered registered as well.","params":{"pool":"Address of the pool to check"},"returns":{"_0":"initialized True if the pool is initialized, false otherwise"}},"isPoolPaused(address)":{"details":"If a pool is paused, all non-Recovery Mode state-changing operations will revert.","params":{"pool":"The pool to be checked"},"returns":{"_0":"paused True if the pool is paused"}},"isPoolRegistered(address)":{"params":{"pool":"Address of the pool to check"},"returns":{"_0":"registered True if the pool is registered, false otherwise"}},"isQueryDisabled()":{"details":"This is a one-way switch. Once queries are disabled, they can never be re-enabled. The query functions rely on a specific EVM feature to detect static calls. Query operations are exempt from settlement constraints, so it's critical that no state changes can occur. We retain the ability to disable queries in the unlikely event that EVM changes violate its assumptions (perhaps on an L2).","returns":{"_0":"queryDisabled If true, then queries are disabled"}},"isUnlocked()":{"details":"The Vault must be unlocked to perform state-changing liquidity operations.","returns":{"_0":"unlocked True if the Vault is unlocked, false otherwise"}},"isVaultPaused()":{"details":"If the Vault is paused, all non-Recovery Mode state-changing operations will revert.","returns":{"_0":"paused True if the Vault is paused"}},"manualUnsafeSetStaticSwapFeePercentage(address,uint256)":{"details":"Does not check the value against any min/max limits normally enforced by the pool."},"pausePool(address)":{"details":"This is a permissioned function that will only work during the Pause Window set during pool factory deployment.","params":{"pool":"The pool being paused"}},"pauseVault()":{"details":"This is a permissioned function that will only work during the Pause Window set during deployment."},"pauseVaultBuffers()":{"details":"When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. Currently it's not possible to pause vault buffers individually. This is a permissioned call, and is reversible (see `unpauseVaultBuffers`)."},"quote(bytes)":{"details":"Used to query a set of operations on the Vault. Only off-chain eth_call are allowed, anything else will revert. Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier. Allows the external calling of a function via the Vault contract to access Vault's functions guarded by `onlyWhenUnlocked`. `transient` modifier ensuring balances changes within the Vault are settled.","params":{"data":"Contains function signature and args to be passed to the msg.sender"},"returns":{"result":"Resulting data from the call"}},"quoteAndRevert(bytes)":{"details":"Used to query a set of operations on the Vault. Only off-chain eth_call are allowed, anything else will revert. Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier. Allows the external calling of a function via the Vault contract to access Vault's functions guarded by `onlyWhenUnlocked`. `transient` modifier ensuring balances changes within the Vault are settled. This call always reverts, returning the result in the revert reason.","params":{"data":"Contains function signature and args to be passed to the msg.sender"}},"registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))":{"details":"A pool can opt-out of pausing by providing a zero value for the pause window, or allow pausing indefinitely by providing a large value. (Pool pause windows are not limited by the Vault maximums.) The vault defines an additional buffer period during which a paused pool will stay paused. After the buffer period passes, a paused pool will automatically unpause. A pool can opt out of Balancer governance pausing by providing a custom `pauseManager`. This might be a multi-sig contract or an arbitrary smart contract with its own access controls, that forwards calls to the Vault. If the zero address is provided for the `pauseManager`, permissions for pausing the pool will default to the authorizer.","params":{"liquidityManagement":"Liquidity management flags with implemented methods","pauseWindowEndTime":"The timestamp after which it is no longer possible to pause the pool","pool":"The address of the pool being registered","poolHooksContract":"Contract that implements the hooks for the pool","protocolFeeExempt":"If true, the pool's initial aggregate fees will be set to 0","roleAccounts":"Addresses the Vault will allow to change certain pool settings","swapFeePercentage":"The initial static swap fee percentage of the pool","tokenConfig":"An array of descriptors for the tokens the pool will manage"}},"removeLiquidity((address,address,uint256,uint256[],uint8,bytes))":{"details":"Trusted routers can burn pool tokens belonging to any user and require no prior approval from the user. Untrusted routers require prior approval from the user. This is the only function allowed to call _queryModeBalanceIncrease (and only in a query context).","params":{"params":"Parameters for the remove liquidity (see above for struct definition)"},"returns":{"amountsOut":"Actual amounts of output tokens","bptAmountIn":"Actual amount of BPT burned","returnData":"Arbitrary (optional) data with an encoded response from the pool"}},"removeLiquidityFromBuffer(address,uint256)":{"details":"Only proportional exits are supported, and the sender has to be the owner of the shares. This function unlocks the Vault just for this operation; it does not work with a Router as an entrypoint. Pre-conditions: - The buffer needs to be initialized. - sharesOwner is the original msg.sender, it needs to be checked in the Router. That's why   this call is authenticated; only routers approved by the DAO can remove the liquidity of a buffer. - The buffer needs to have some liquidity and have its asset registered in `_bufferAssets` storage.","params":{"sharesToRemove":"Amount of shares to remove from the buffer. Cannot be greater than sharesOwner's total shares. It is expressed in underlying token native decimals.","wrappedToken":"Address of the wrapped token that implements IERC4626"},"returns":{"removedUnderlyingBalanceRaw":"Amount of underlying tokens returned to the user","removedWrappedBalanceRaw":"Amount of wrapped tokens returned to the user"}},"removeLiquidityRecovery(address,address,uint256)":{"params":{"exactBptAmountIn":"Input pool token amount","from":"Address of user to burn pool tokens from","pool":"Address of the pool"},"returns":{"amountsOut":"Actual calculated amounts of output tokens, sorted in token registration order"}},"sendTo(address,address,uint256)":{"details":"There is no inverse operation for this function. Transfer funds to the Vault and call `settle` to cancel debts.","params":{"amount":"Amount of tokens to send","to":"Recipient address","token":"Address of the token"}},"setAuthorizer(address)":{"details":"This is a permissioned call. Emits an `AuthorizerChanged` event.","params":{"newAuthorizer":"The address of the new authorizer"}},"setProtocolFeeController(address)":{"details":"This is a permissioned call. Emits a `ProtocolFeeControllerChanged` event.","params":{"newProtocolFeeController":"The address of the new Protocol Fee Controller"}},"setStaticSwapFeePercentage(address,uint256)":{"details":"This is a permissioned function, disabled if the pool is paused. The swap fee percentage must be within the bounds specified by the pool's implementation of `ISwapFeePercentageBounds`. Emits the SwapFeePercentageChanged event.","params":{"pool":"The address of the pool for which the static swap fee will be changed","swapFeePercentage":"The new swap fee percentage to apply to the pool"}},"settle(address,uint256)":{"details":"Protects the caller against leftover dust in the Vault for the token being settled. The caller should know in advance how many tokens were paid to the Vault, so it can provide it as a hint to discard any excess in the Vault balance. If the given hint is equal to or higher than the difference in reserves, the difference in reserves is given as credit to the caller. If it's higher, the caller sent fewer tokens than expected, so settlement would fail. If the given hint is lower than the difference in reserves, the hint is given as credit to the caller. In this case, the excess would be absorbed by the Vault (and reflected correctly in the reserves), but would not affect settlement. The credit supplied by the Vault can be calculated as `min(reserveDifference, amountHint)`, where the reserve difference equals current balance of the token minus existing reserves of the token when the function is called.","params":{"amountHint":"Amount paid as reported by the caller","token":"Address of the token"},"returns":{"credit":"Credit received in return of the payment"}},"swap((uint8,address,address,address,uint256,uint256,bytes))":{"details":"All parameters are given in raw token decimal encoding.","params":{"vaultSwapParams":"Parameters for the swap (see above for struct definition)"},"returns":{"amountCalculatedRaw":"Calculated swap amount","amountInRaw":"Amount of input tokens for the swap","amountOutRaw":"Amount of output tokens from the swap"}},"totalSupply(address)":{"params":{"token":"The token address"},"returns":{"_0":"totalSupply Total supply of the token"}},"transfer(address,address,uint256)":{"details":"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.","params":{"amount":"Amount of tokens to transfer","owner":"Address of the owner","to":"Address of the recipient"},"returns":{"_0":"success True if successful, false otherwise"}},"transferFrom(address,address,address,uint256)":{"details":"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.","params":{"amount":"Amount of tokens to transfer","from":"Address of the sender","spender":"Address allowed to perform the transfer","to":"Address of the recipient"},"returns":{"_0":"success True if successful, false otherwise"}},"unlock(bytes)":{"details":"Performs a callback on msg.sender with arguments provided in `data`. The Callback is `transient`, meaning all balances for the caller have to be settled at the end.","params":{"data":"Contains function signature and args to be passed to the msg.sender"},"returns":{"result":"Resulting data from the call"}},"unpausePool(address)":{"details":"This is a permissioned function that will only work on a paused Pool within the Buffer Period set during deployment. Note that the Pool will automatically unpause after the Buffer Period expires.","params":{"pool":"The pool being unpaused"}},"unpauseVault()":{"details":"This is a permissioned function that will only work on a paused Vault within the Buffer Period set during deployment. Note that the Vault will automatically unpause after the Buffer Period expires."},"unpauseVaultBuffers()":{"details":"When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. This is a permissioned call."},"updateAggregateSwapFeePercentage(address,uint256)":{"details":"Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol). Emits an `AggregateSwapFeePercentageChanged` event.","params":{"newAggregateSwapFeePercentage":"The new aggregate swap fee percentage","pool":"The pool whose fee will be updated"}},"updateAggregateYieldFeePercentage(address,uint256)":{"details":"Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol). Emits an `AggregateYieldFeePercentageChanged` event.","params":{"newAggregateYieldFeePercentage":"The new aggregate yield fee percentage","pool":"The pool whose fee will be updated"}},"vault()":{"details":"Returns the main Vault address."}},"version":1},"userdoc":{"kind":"user","methods":{"addLiquidity((address,address,uint256[],uint256,uint8,bytes))":{"notice":"Adds liquidity to a pool."},"addLiquidityToBuffer(address,uint256,address)":{"notice":"Adds liquidity to an internal ERC4626 buffer in the Vault, proportionally."},"allowance(address,address,address)":{"notice":"Gets the allowance of a spender for a given ERC20 token and owner."},"approve(address,address,uint256)":{"notice":"Approves a spender to spend pool tokens on behalf of sender."},"areBuffersPaused()":{"notice":"Indicates whether the Vault buffers are paused."},"balanceOf(address,address)":{"notice":"Gets the balance of an account for a given ERC20 token."},"collectAggregateFees(address)":{"notice":"Collects accumulated aggregate swap and yield fees for the specified pool."},"computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))":{"notice":"Query the current dynamic swap fee percentage of a pool, given a set of swap parameters."},"disableQuery()":{"notice":"Disables queries functionality on the Vault. Can only be called by governance."},"disableRecoveryMode(address)":{"notice":"Disable recovery mode for a pool."},"enableRecoveryMode(address)":{"notice":"Enable recovery mode for a pool."},"erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))":{"notice":"Wraps/unwraps tokens based on the parameters provided."},"getActionId(bytes4)":{"notice":"Returns the action identifier associated with the external function described by `selector`."},"getAddLiquidityCalledFlag(address)":{"notice":"This flag is used to detect and tax \"round trip\" transactions (adding and removing liquidity in the same pool)."},"getAggregateSwapFeeAmount(address,address)":{"notice":"Returns the accumulated swap fees (including aggregate fees) in `token` collected by the pool."},"getAggregateYieldFeeAmount(address,address)":{"notice":"Returns the accumulated yield fees (including aggregate fees) in `token` collected by the pool."},"getAuthorizer()":{"notice":"Returns the Authorizer address."},"getBptRate(address)":{"notice":"The current rate of a pool token (BPT) = invariant / totalSupply."},"getBufferAsset(address)":{"notice":"Returns the asset registered for a given wrapped token."},"getBufferBalance(address)":{"notice":"Returns the amount of underlying and wrapped tokens deposited in the internal buffer of the Vault."},"getBufferMinimumTotalSupply()":{"notice":"Get the minimum total supply of an ERC4626 wrapped token buffer in the Vault."},"getBufferOwnerShares(address,address)":{"notice":"Returns the shares (internal buffer BPT) of a liquidity owner: a user that deposited assets in the buffer."},"getBufferPeriodDuration()":{"notice":"Returns the Vault's buffer period duration."},"getBufferPeriodEndTime()":{"notice":"Returns the Vault's buffer period end time."},"getBufferTotalShares(address)":{"notice":"Returns the supply shares (internal buffer BPT) of the ERC4626 buffer."},"getCurrentLiveBalances(address)":{"notice":"Gets current live balances of a given pool (fixed-point, 18 decimals), corresponding to its tokens in registration order."},"getHooksConfig(address)":{"notice":"Gets the hooks configuration parameters of a pool."},"getMaximumPoolTokens()":{"notice":"Get the maximum number of tokens in a pool."},"getMinimumPoolTokens()":{"notice":"Get the minimum number of tokens in a pool."},"getMinimumTradeAmount()":{"notice":"Get the minimum trade amount in a pool operation."},"getMinimumWrapAmount()":{"notice":"Get the minimum wrap amount in a buffer operation."},"getNonzeroDeltaCount()":{"notice":"Returns the count of non-zero deltas."},"getPauseWindowEndTime()":{"notice":"Returns the Vault's pause window end time."},"getPoolConfig(address)":{"notice":"Gets the configuration parameters of a pool."},"getPoolData(address)":{"notice":"Returns comprehensive pool data for the given pool."},"getPoolMinimumTotalSupply()":{"notice":"Get the minimum total supply of pool tokens (BPT) for an initialized pool."},"getPoolPausedState(address)":{"notice":"Returns the paused status, and end times of the Pool's pause window and buffer period."},"getPoolRoleAccounts(address)":{"notice":"Fetches the role accounts for a given pool (pause manager, swap manager, pool creator)"},"getPoolTokenCountAndIndexOfToken(address,address)":{"notice":"Gets the index of a token in a given pool."},"getPoolTokenInfo(address)":{"notice":"Gets the raw data for a pool: tokens, raw balances, scaling factors."},"getPoolTokenRates(address)":{"notice":"Gets pool token rates."},"getPoolTokens(address)":{"notice":"Gets the tokens registered to a pool."},"getProtocolFeeController()":{"notice":"Returns the Protocol Fee Controller address."},"getReservesOf(address)":{"notice":"Retrieves the reserve (i.e., total Vault balance) of a given token."},"getStaticSwapFeePercentage(address)":{"notice":"Fetches the static swap fee percentage for a given pool."},"getTokenDelta(address)":{"notice":"Retrieves the token delta for a specific token."},"getVaultAdmin()":{"notice":"Returns the VaultAdmin contract address."},"getVaultExtension()":{"notice":"Returns the VaultExtension contract address."},"getVaultPausedState()":{"notice":"Returns the paused status, and end times of the Vault's pause window and buffer period."},"initialize(address,address,address[],uint256[],uint256,bytes)":{"notice":"Initializes a registered pool by adding liquidity; mints BPT tokens for the first time in exchange."},"initializeBuffer(address,uint256,uint256,address)":{"notice":"Initializes buffer for the given wrapped token."},"isERC4626BufferInitialized(address)":{"notice":"Checks if the wrapped token has an initialized buffer in the Vault."},"isPoolInRecoveryMode(address)":{"notice":"Checks whether a pool is in Recovery Mode."},"isPoolInitialized(address)":{"notice":"Checks whether a pool is initialized."},"isPoolPaused(address)":{"notice":"Indicates whether a pool is paused."},"isPoolRegistered(address)":{"notice":"Checks whether a pool is registered."},"isQueryDisabled()":{"notice":"Checks if the queries enabled on the Vault."},"isUnlocked()":{"notice":"Returns whether the Vault is unlocked (i.e., executing an operation)."},"isVaultPaused()":{"notice":"Indicates whether the Vault is paused."},"pausePool(address)":{"notice":"Pause the Pool: an emergency action which disables all pool functions."},"pauseVault()":{"notice":"Pause the Vault: an emergency action which disables all operational state-changing functions."},"pauseVaultBuffers()":{"notice":"Pauses native vault buffers globally."},"quote(bytes)":{"notice":"Performs a callback on msg.sender with arguments provided in `data`."},"quoteAndRevert(bytes)":{"notice":"Performs a callback on msg.sender with arguments provided in `data`."},"registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))":{"notice":"Registers a pool, associating it with its factory and the tokens it manages."},"removeLiquidity((address,address,uint256,uint256[],uint8,bytes))":{"notice":"Removes liquidity from a pool."},"removeLiquidityFromBuffer(address,uint256)":{"notice":"Removes liquidity from an internal ERC4626 buffer in the Vault."},"removeLiquidityRecovery(address,address,uint256)":{"notice":"Remove liquidity from a pool specifying exact pool tokens in, with proportional token amounts out. The request is implemented by the Vault without any interaction with the pool, ensuring that it works the same for all pools, and cannot be disabled by a new pool type."},"sendTo(address,address,uint256)":{"notice":"Sends tokens to a recipient."},"setAuthorizer(address)":{"notice":"Sets a new Authorizer for the Vault."},"setProtocolFeeController(address)":{"notice":"Sets a new Protocol Fee Controller for the Vault."},"setStaticSwapFeePercentage(address,uint256)":{"notice":"Assigns a new static swap fee percentage to the specified pool."},"settle(address,uint256)":{"notice":"Settles deltas for a token; must be successful for the current lock to be released."},"swap((uint8,address,address,address,uint256,uint256,bytes))":{"notice":"Swaps tokens based on provided parameters."},"totalSupply(address)":{"notice":"Gets the total supply of a given ERC20 token."},"transfer(address,address,uint256)":{"notice":"Transfers pool token from owner to a recipient."},"transferFrom(address,address,address,uint256)":{"notice":"Transfers pool token from a sender to a recipient using an allowance."},"unlock(bytes)":{"notice":"Creates a context for a sequence of operations (i.e., \"unlocks\" the Vault)."},"unpausePool(address)":{"notice":"Reverse a `pause` operation, and restore the Pool to normal functionality."},"unpauseVault()":{"notice":"Reverse a `pause` operation, and restore the Vault to normal functionality."},"unpauseVaultBuffers()":{"notice":"Unpauses native vault buffers globally."},"updateAggregateSwapFeePercentage(address,uint256)":{"notice":"Update an aggregate swap fee percentage."},"updateAggregateYieldFeePercentage(address,uint256)":{"notice":"Update an aggregate yield fee percentage."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultMock.sol":"IVaultMock"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"keccak256":"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2","urls":["bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87","dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol":{"keccak256":"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906","urls":["bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452","dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultAdminMock.sol":{"keccak256":"0x8879bfdcd6c6bbf04fb6524645186fadb46b31e2278ecde83ff855cb10865109","urls":["bzz-raw://170a8da61479ea43e5ce9736a60cf3fe053ae0529b5712d2679581754fc63c63","dweb:/ipfs/QmUW6ScWNWpDVP2c1HPF6hJm5TkQ9REmZxSmJpF5XZaok4"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultExtensionMock.sol":{"keccak256":"0x18c434c91bbcd260bd305f2cdc01684a3040bc633c1b185f95cb323a336ac76c","urls":["bzz-raw://270260ba29c81dc6d862a0830ccbbdcd81b4543bd9c9b54228493a92568532d4","dweb:/ipfs/QmTHp7v5dGwLujPRaWkoEM22Loy3MuspodMGcm4syAPUvk"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultMainMock.sol":{"keccak256":"0x257153a11d01686420d4815811361964fd12e4c7b9c4d47d4f97582b8dc16dd1","urls":["bzz-raw://7aa5dff945e46eb2646fc29c7ff1865418d6dae4ea8cd37afe4961baeb08b33e","dweb:/ipfs/QmfSRWBBbQ3nBqMLBHuyhvPv6xy6XnEFr18tNpqp6dguFE"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultMock.sol":{"keccak256":"0x0490632b8c42381468055beaf49d1e01adf9d06fbfdf3d5ef9ecd20aab3b2aff","urls":["bzz-raw://d0769731c6e87cf5a9e5ed4a93dea5125b2e028c6f2cade0b6054d99d5230c62","dweb:/ipfs/QmYveTwXZQzi37F3PBCzVwfFqcgi7QH5SXBGA1VPrCHmUx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultStorageMock.sol":{"keccak256":"0xb59762a929624826418e57ef85207703bedfbab512eeb422fd16d40520ab05d9","urls":["bzz-raw://8f6363f3ac816ff34ac5b78a564ed0febc9772d1dc130674e73db0a63b29273d","dweb:/ipfs/QmSbmTTFb4vGqHSGQu974CHu146pCfzJRGFMxyN8ujopf7"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol":{"keccak256":"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a","urls":["bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c","dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol":{"keccak256":"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638","urls":["bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f","dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol":{"keccak256":"0x265cba6f0225fae5867e47ead3b7d51ea124c6599d450b361bb86795ffb0a586","urls":["bzz-raw://9363b61e7b592c6d9476cfcdc9d468669f3e9d2d232ad426f6c5c6c00247258e","dweb:/ipfs/QmT771Kpp4VswEcBCJCMxKKKiRNMcLJeziKCisjLrc2opx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol":{"keccak256":"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c","urls":["bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566","dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol":{"keccak256":"0xe68fbe2bef8c4fda8cf43d186d0e5518f9d76e57ac1c2f8082a1d0bcf444ace7","urls":["bzz-raw://614fb11ff5f7ea15cab882dfe4c7f69656eb5ad0e7cb217338664d8f1d0403c7","dweb:/ipfs/QmUPZRXKFLsGEiPM38uDz14EVvJV81NCNBoWajmAbEmDka"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol":{"keccak256":"0x3bf1cfa4716401af08fd265db6ebbaad011d94d4531be5a6289aafbe4dc02f0f","urls":["bzz-raw://7969b076f81af1fec02a0cc572ea56be691315bbcc761bb47e38aecb86ae15fc","dweb:/ipfs/QmPkYWjEEj9Kzrbhcc6i8mmB1WAopcf13Ue2ZhayTXtnBm"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol":{"keccak256":"0xfa87a090e0b1fc87e34b6a891b7abd4697e75997e37d073020b91c7c408bffe3","urls":["bzz-raw://2b33f211008d57462d8b4598b78e477ce6ee53f0c1172682b94e896954752fe9","dweb:/ipfs/QmVzjPRey6qss4ucJx3Mb1gs5MAyLKcLUD5tLt9KNn2SNR"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol":{"keccak256":"0x2c6f4f4d714a0f1e7e648909753839da8182117f22018f4337f9632f9c40597b","urls":["bzz-raw://99fb94d7fcf9f972f4aec716d7d4be43e3d28f90f8f5923b9b8245be178e01aa","dweb:/ipfs/QmeLSFfcvYwmPpQ58yESVjYXPY13NzGU28WjxkWUj8sgqx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol":{"keccak256":"0x976def53871db0ad0db3504086a783508b0c293b86364c8985d6700283986799","urls":["bzz-raw://e9a2904288327a95373e32d99b2244a7afcf9f741b970ff34af6a933076076e6","dweb:/ipfs/QmaS4adLMjzagUsqYhtxo7KJW2kZogx5orQgvfVzLR3dzW"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol":{"keccak256":"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3","urls":["bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3","dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/TransientStorageHelpers.sol":{"keccak256":"0x2a672a27fd968b130cbd556e0769a21cc7822766f39fd4f85079d8b3c3b94f04","urls":["bzz-raw://57de967064b8c99e4f3b9b1d1b7918e70fafe36c69904695c9f2d22b8fd0210d","dweb:/ipfs/QmX8CALkUGdZzovGMXx6CgMqBY4MsYsLFfDvKquKYVy8ef"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/SlotDerivation.sol":{"keccak256":"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab","urls":["bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2","dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5"],"license":"MIT"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/StorageSlotExtension.sol":{"keccak256":"0xba524eab3f4f1b735008624cf11264842bec509e05ac025f93b8c843547fbfd3","urls":["bzz-raw://2c539df1afd342c47fdbd96fb28a183b7b30e055c4e435cdf77140ec92e68a42","dweb:/ipfs/QmZ4akawS7TKrJkBeoi4bfyGWRmQgXshtkAMupuxkgH5Ur"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06","urls":["bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf","dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229","urls":["bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155","dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28","urls":["bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323","dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultMock.sol","id":4840,"exportedSymbols":{"IERC20Errors":[97130],"IVault":[6514],"IVaultAdminMock":[3945],"IVaultExtensionMock":[4002],"IVaultMainMock":[4811],"IVaultMock":[4839],"IVaultStorageMock":[4864]},"nodeType":"SourceUnit","src":"46:680:25","nodes":[{"id":4813,"nodeType":"PragmaDirective","src":"46:24:25","nodes":[],"literals":["solidity","^","0.8",".24"]},{"id":4815,"nodeType":"ImportDirective","src":"72:85:25","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","nameLocation":"-1:-1:-1","scope":4840,"sourceUnit":97226,"symbolAliases":[{"foreign":{"id":4814,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97130,"src":"81:12:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":4817,"nodeType":"ImportDirective","src":"159:45:25","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol","file":"../vault/IVault.sol","nameLocation":"-1:-1:-1","scope":4840,"sourceUnit":6515,"symbolAliases":[{"foreign":{"id":4816,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"168:6:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":4819,"nodeType":"ImportDirective","src":"205:54:25","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultMainMock.sol","file":"./IVaultMainMock.sol","nameLocation":"-1:-1:-1","scope":4840,"sourceUnit":4812,"symbolAliases":[{"foreign":{"id":4818,"name":"IVaultMainMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"214:14:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":4821,"nodeType":"ImportDirective","src":"260:64:25","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultExtensionMock.sol","file":"./IVaultExtensionMock.sol","nameLocation":"-1:-1:-1","scope":4840,"sourceUnit":4003,"symbolAliases":[{"foreign":{"id":4820,"name":"IVaultExtensionMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"269:19:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":4823,"nodeType":"ImportDirective","src":"325:56:25","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultAdminMock.sol","file":"./IVaultAdminMock.sol","nameLocation":"-1:-1:-1","scope":4840,"sourceUnit":3946,"symbolAliases":[{"foreign":{"id":4822,"name":"IVaultAdminMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"334:15:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":4825,"nodeType":"ImportDirective","src":"382:60:25","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/test/IVaultStorageMock.sol","file":"./IVaultStorageMock.sol","nameLocation":"-1:-1:-1","scope":4840,"sourceUnit":4865,"symbolAliases":[{"foreign":{"id":4824,"name":"IVaultStorageMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"391:17:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":4839,"nodeType":"ContractDefinition","src":"551:174:25","nodes":[],"abstract":false,"baseContracts":[{"baseName":{"id":4827,"name":"IVault","nameLocations":["575:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":6514,"src":"575:6:25"},"id":4828,"nodeType":"InheritanceSpecifier","src":"575:6:25"},{"baseName":{"id":4829,"name":"IVaultMainMock","nameLocations":["583:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":4811,"src":"583:14:25"},"id":4830,"nodeType":"InheritanceSpecifier","src":"583:14:25"},{"baseName":{"id":4831,"name":"IVaultExtensionMock","nameLocations":["599:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":4002,"src":"599:19:25"},"id":4832,"nodeType":"InheritanceSpecifier","src":"599:19:25"},{"baseName":{"id":4833,"name":"IVaultAdminMock","nameLocations":["620:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":3945,"src":"620:15:25"},"id":4834,"nodeType":"InheritanceSpecifier","src":"620:15:25"},{"baseName":{"id":4835,"name":"IVaultStorageMock","nameLocations":["637:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":4864,"src":"637:17:25"},"id":4836,"nodeType":"InheritanceSpecifier","src":"637:17:25"},{"baseName":{"id":4837,"name":"IERC20Errors","nameLocations":["656:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":97130,"src":"656:12:25"},"id":4838,"nodeType":"InheritanceSpecifier","src":"656:12:25"}],"canonicalName":"IVaultMock","contractDependencies":[],"contractKind":"interface","documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"444:107:25","text":"@dev One-fits-all solution for hardhat tests. Use the typechain type for errors, events and functions."},"fullyImplemented":false,"linearizedBaseContracts":[4839,97130,4864,3945,4002,4811,6514,3782,7344,7140,6786,8192,8311],"name":"IVaultMock","nameLocation":"561:10:25","scope":4840,"usedErrors":[3773,6798,6803,6808,6813,6822,6828,6831,6834,6837,6840,6843,6852,6855,6858,6861,6864,6867,6870,6873,6876,6879,6882,6885,6888,6891,6894,6900,6907,6914,6917,6920,6930,6940,6947,6950,6953,6956,6966,6976,6983,6986,6989,6992,6995,6998,7001,7004,7009,7014,7019,7022,7025,7028,7031,7034,7039,7044,7049,7055,7061,7064,7072,7078,7084,7087,7090,7093,7098,7108,7118,7121,7124,7127,7130,7133,7136,7139,97100,97105,97110,97119,97124,97129],"usedEvents":[7178,7183,7202,7215,7228,7243,7248,7251,7258,7265,7272,7279,7286,7292,7298,7308,7318,7328,7338,7343]}],"license":"GPL-3.0-or-later"},"id":25}