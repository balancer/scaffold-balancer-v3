{"abi":[{"type":"function","name":"reentrancyGuardEntered","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"AggregateSwapFeePercentageChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"aggregateSwapFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AggregateYieldFeePercentageChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"aggregateYieldFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Approval","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AuthorizerChanged","inputs":[{"name":"newAuthorizer","type":"address","indexed":true,"internalType":"contract IAuthorizer"}],"anonymous":false},{"type":"event","name":"BufferSharesBurned","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"burnedShares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BufferSharesMinted","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"issuedShares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LiquidityAddedToBuffer","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"amountUnderlying","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountWrapped","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LiquidityRemovedFromBuffer","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"amountUnderlying","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountWrapped","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PoolBalanceChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"liquidityProvider","type":"address","indexed":true,"internalType":"address"},{"name":"totalSupply","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"deltas","type":"int256[]","indexed":false,"internalType":"int256[]"},{"name":"swapFeeAmountsRaw","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"PoolInitialized","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PoolPausedStateChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"paused","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"PoolRecoveryModeStateChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"recoveryMode","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"PoolRegistered","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"factory","type":"address","indexed":true,"internalType":"address"},{"name":"tokenConfig","type":"tuple[]","indexed":false,"internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"swapFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"pauseWindowEndTime","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"roleAccounts","type":"tuple","indexed":false,"internalType":"struct PoolRoleAccounts","components":[{"name":"pauseManager","type":"address","internalType":"address"},{"name":"swapFeeManager","type":"address","internalType":"address"},{"name":"poolCreator","type":"address","internalType":"address"}]},{"name":"hooksConfig","type":"tuple","indexed":false,"internalType":"struct HooksConfig","components":[{"name":"enableHookAdjustedAmounts","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallAfterInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallComputeDynamicSwapFee","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeSwap","type":"bool","internalType":"bool"},{"name":"shouldCallAfterSwap","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"hooksContract","type":"address","internalType":"address"}]},{"name":"liquidityManagement","type":"tuple","indexed":false,"internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]}],"anonymous":false},{"type":"event","name":"ProtocolFeeControllerChanged","inputs":[{"name":"newProtocolFeeController","type":"address","indexed":true,"internalType":"contract IProtocolFeeController"}],"anonymous":false},{"type":"event","name":"Swap","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"tokenIn","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"tokenOut","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountOut","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"swapFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"swapFeeAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SwapFeePercentageChanged","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"swapFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Unwrap","inputs":[{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"underlyingToken","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"burnedShares","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"withdrawnUnderlying","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VaultBuffersPausedStateChanged","inputs":[{"name":"paused","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"VaultPausedStateChanged","inputs":[{"name":"paused","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"VaultQueriesDisabled","inputs":[],"anonymous":false},{"type":"event","name":"Wrap","inputs":[{"name":"underlyingToken","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"wrappedToken","type":"address","indexed":true,"internalType":"contract IERC4626"},{"name":"depositedUnderlying","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"mintedShares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AfterAddLiquidityHookFailed","inputs":[]},{"type":"error","name":"AfterInitializeHookFailed","inputs":[]},{"type":"error","name":"AfterRemoveLiquidityHookFailed","inputs":[]},{"type":"error","name":"AfterSwapHookFailed","inputs":[]},{"type":"error","name":"AmountGivenZero","inputs":[]},{"type":"error","name":"AmountInAboveMax","inputs":[{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"AmountOutBelowMin","inputs":[{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BalanceNotSettled","inputs":[]},{"type":"error","name":"BeforeAddLiquidityHookFailed","inputs":[]},{"type":"error","name":"BeforeInitializeHookFailed","inputs":[]},{"type":"error","name":"BeforeRemoveLiquidityHookFailed","inputs":[]},{"type":"error","name":"BeforeSwapHookFailed","inputs":[]},{"type":"error","name":"BptAmountInAboveMax","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BptAmountOutBelowMin","inputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BufferAlreadyInitialized","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}]},{"type":"error","name":"BufferNotInitialized","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}]},{"type":"error","name":"BufferSharesInvalidOwner","inputs":[]},{"type":"error","name":"BufferSharesInvalidReceiver","inputs":[]},{"type":"error","name":"BufferTotalSupplyTooLow","inputs":[{"name":"totalSupply","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"CannotReceiveEth","inputs":[]},{"type":"error","name":"CannotSwapSameToken","inputs":[]},{"type":"error","name":"DoesNotSupportAddLiquidityCustom","inputs":[]},{"type":"error","name":"DoesNotSupportDonation","inputs":[]},{"type":"error","name":"DoesNotSupportRemoveLiquidityCustom","inputs":[]},{"type":"error","name":"DoesNotSupportUnbalancedLiquidity","inputs":[]},{"type":"error","name":"DynamicSwapFeeHookFailed","inputs":[]},{"type":"error","name":"ERC20InsufficientAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"allowance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InsufficientBalance","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSpender","inputs":[{"name":"spender","type":"address","internalType":"address"}]},{"type":"error","name":"FeePrecisionTooHigh","inputs":[]},{"type":"error","name":"HookAdjustedAmountInAboveMax","inputs":[{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"HookAdjustedAmountOutBelowMin","inputs":[{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"HookAdjustedSwapLimit","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"HookRegistrationFailed","inputs":[{"name":"poolHooksContract","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"poolFactory","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidAddLiquidityKind","inputs":[]},{"type":"error","name":"InvalidRemoveLiquidityKind","inputs":[]},{"type":"error","name":"InvalidToken","inputs":[]},{"type":"error","name":"InvalidTokenConfiguration","inputs":[]},{"type":"error","name":"InvalidTokenType","inputs":[]},{"type":"error","name":"InvalidUnderlyingToken","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}]},{"type":"error","name":"MaxTokens","inputs":[]},{"type":"error","name":"MinTokens","inputs":[]},{"type":"error","name":"NotEnoughBufferShares","inputs":[]},{"type":"error","name":"NotEnoughUnderlying","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"expectedUnderlyingAmount","type":"uint256","internalType":"uint256"},{"name":"actualUnderlyingAmount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotEnoughWrapped","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"expectedWrappedAmount","type":"uint256","internalType":"uint256"},{"name":"actualWrappedAmount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotVaultDelegateCall","inputs":[]},{"type":"error","name":"PauseBufferPeriodDurationTooLarge","inputs":[]},{"type":"error","name":"PercentageAboveMax","inputs":[]},{"type":"error","name":"PoolAlreadyInitialized","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolAlreadyRegistered","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolInRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolNotInRecoveryMode","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolNotInitialized","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolNotPaused","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolNotRegistered","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolPauseWindowExpired","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolPaused","inputs":[{"name":"pool","type":"address","internalType":"address"}]},{"type":"error","name":"PoolTotalSupplyTooLow","inputs":[{"name":"totalSupply","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ProtocolFeesExceedTotalCollected","inputs":[]},{"type":"error","name":"QueriesDisabled","inputs":[]},{"type":"error","name":"QuoteResultSpoofed","inputs":[]},{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]},{"type":"error","name":"RouterNotTrusted","inputs":[]},{"type":"error","name":"SenderIsNotVault","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"SwapFeePercentageTooHigh","inputs":[]},{"type":"error","name":"SwapFeePercentageTooLow","inputs":[]},{"type":"error","name":"SwapLimit","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"TokenAlreadyRegistered","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"}]},{"type":"error","name":"TokenNotRegistered","inputs":[{"name":"token","type":"address","internalType":"contract IERC20"}]},{"type":"error","name":"TokensMismatch","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"expectedToken","type":"address","internalType":"address"},{"name":"actualToken","type":"address","internalType":"address"}]},{"type":"error","name":"TradeAmountTooSmall","inputs":[]},{"type":"error","name":"VaultBuffersArePaused","inputs":[]},{"type":"error","name":"VaultIsNotUnlocked","inputs":[]},{"type":"error","name":"VaultNotPaused","inputs":[]},{"type":"error","name":"VaultPauseWindowDurationTooLarge","inputs":[]},{"type":"error","name":"VaultPauseWindowExpired","inputs":[]},{"type":"error","name":"VaultPaused","inputs":[]},{"type":"error","name":"WrapAmountTooSmall","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"}]},{"type":"error","name":"WrongProtocolFeeControllerDeployment","inputs":[]},{"type":"error","name":"WrongUnderlyingToken","inputs":[{"name":"wrappedToken","type":"address","internalType":"contract IERC4626"},{"name":"underlyingToken","type":"address","internalType":"address"}]},{"type":"error","name":"WrongVaultAdminDeployment","inputs":[]},{"type":"error","name":"WrongVaultExtensionDeployment","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"reentrancyGuardEntered()":"d2c725e0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AfterAddLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterInitializeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterRemoveLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterSwapHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountGivenZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"AmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"AmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeAddLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeInitializeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeRemoveLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeSwapHookFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"BptAmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"BptAmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"BufferAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"BufferNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BufferSharesInvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BufferSharesInvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"BufferTotalSupplyTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotReceiveEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSwapSameToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportAddLiquidityCustom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportDonation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportRemoveLiquidityCustom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportUnbalancedLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DynamicSwapFeeHookFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeePrecisionTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedAmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedAmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedSwapLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolHooksContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"HookRegistrationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddLiquidityKind\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRemoveLiquidityKind\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenConfiguration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"InvalidUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBufferShares\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedUnderlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUnderlyingAmount\",\"type\":\"uint256\"}],\"name\":\"NotEnoughUnderlying\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedWrappedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualWrappedAmount\",\"type\":\"uint256\"}],\"name\":\"NotEnoughWrapped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVaultDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PauseBufferPeriodDurationTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolInRecoveryMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotInRecoveryMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolPauseWindowExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"PoolTotalSupplyTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeesExceedTotalCollected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueriesDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuoteResultSpoofed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterNotTrusted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeePercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeePercentageTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"SwapLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualToken\",\"type\":\"address\"}],\"name\":\"TokensMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradeAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultBuffersArePaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultIsNotUnlocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultNotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPauseWindowDurationTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPauseWindowExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"WrapAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongProtocolFeeControllerDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"}],\"name\":\"WrongUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongVaultAdminDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongVaultExtensionDeployment\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"AggregateSwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"AggregateYieldFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"}],\"name\":\"BufferSharesBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"}],\"name\":\"BufferSharesMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"}],\"name\":\"LiquidityAddedToBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemovedFromBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmountsRaw\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PoolPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"recoveryMode\",\"type\":\"bool\"}],\"name\":\"PoolRecoveryModeStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct HooksConfig\",\"name\":\"hooksConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IProtocolFeeController\",\"name\":\"newProtocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeeAmount\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnUnderlying\",\"type\":\"uint256\"}],\"name\":\"Unwrap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"VaultBuffersPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"VaultPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultQueriesDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositedUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintedShares\",\"type\":\"uint256\"}],\"name\":\"Wrap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"reentrancyGuardEntered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract contains common utilities in the inheritance chain that require storage to work, and will be required in both the main Vault and its extensions.\",\"errors\":{\"AmountInAboveMax(address,uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total token amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\",\"tokenIn\":\"The incoming token\"}}],\"AmountOutBelowMin(address,uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\",\"tokenOut\":\"The outgoing token\"}}],\"BptAmountInAboveMax(uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total BPT amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\"}}],\"BptAmountOutBelowMin(uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\"}}],\"BufferAlreadyInitialized(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"BufferNotInitialized(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"BufferTotalSupplyTooLow(uint256)\":[{\"params\":{\"totalSupply\":\"The total supply value that was below the minimum\"}}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FeePrecisionTooHigh()\":[{\"details\":\"Primary fee percentages are 18-decimal values, stored here in 64 bits, and calculated with full 256-bit precision. However, the resulting aggregate fees are stored in the Vault with 24-bit precision, which corresponds to 0.00001% resolution (i.e., a fee can be 1%, 1.00001%, 1.00002%, but not 1.000005%). Disallow setting fees such that there would be precision loss in the Vault, leading to a discrepancy between the aggregate fee calculated here and that stored in the Vault.\"}],\"HookAdjustedAmountInAboveMax(address,uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total token amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\",\"tokenIn\":\"The incoming token\"}}],\"HookAdjustedAmountOutBelowMin(address,uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\",\"tokenOut\":\"The outgoing token\"}}],\"HookAdjustedSwapLimit(uint256,uint256)\":[{\"params\":{\"amount\":\"The total amount in or out\",\"limit\":\"The amount of the limit that has been exceeded\"}}],\"HookRegistrationFailed(address,address,address)\":[{\"params\":{\"pool\":\"Address of the rejected pool\",\"poolFactory\":\"Address of the pool factory\",\"poolHooksContract\":\"Address of the hook contract that rejected the pool registration\"}}],\"InvalidUnderlyingToken(address)\":[{\"details\":\"This should never happen, but a malicious wrapper contract might do this (e.g., in an attempt to re-initialize the buffer).\",\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"NotEnoughUnderlying(address,uint256,uint256)\":[{\"details\":\"A wrap/unwrap operation consumed more or returned less underlying tokens than it should.\"}],\"NotEnoughWrapped(address,uint256,uint256)\":[{\"details\":\"A wrap/unwrap operation consumed more or returned less wrapped tokens than it should.\"}],\"NotVaultDelegateCall()\":[{\"details\":\"It can only be called by the Vault via delegatecall.\"}],\"PercentageAboveMax()\":[{\"details\":\"Providing the value might be helpful for debugging.\"}],\"PoolAlreadyInitialized(address)\":[{\"params\":{\"pool\":\"The already initialized pool\"}}],\"PoolAlreadyRegistered(address)\":[{\"params\":{\"pool\":\"The already registered pool\"}}],\"PoolInRecoveryMode(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolNotInRecoveryMode(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolNotInitialized(address)\":[{\"params\":{\"pool\":\"The uninitialized pool\"}}],\"PoolNotPaused(address)\":[{\"params\":{\"pool\":\"The unpaused pool\"}}],\"PoolNotRegistered(address)\":[{\"params\":{\"pool\":\"The unregistered pool\"}}],\"PoolPauseWindowExpired(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolPaused(address)\":[{\"params\":{\"pool\":\"The paused pool\"}}],\"PoolTotalSupplyTooLow(uint256)\":[{\"params\":{\"totalSupply\":\"The total supply value that was below the minimum\"}}],\"ProtocolFeesExceedTotalCollected()\":[{\"details\":\"This occurs when the sum of the parts (aggregate swap or yield fee) is greater than the whole (total swap or yield fee). Also validated when the protocol fee controller updates aggregate fee percentages in the Vault.\"}],\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}],\"SwapFeePercentageTooHigh()\":[{\"details\":\"The Vault itself does not impose a universal minimum. Rather, it validates against the range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error if it is above the maximum value returned by the pool. Pools with dynamic fees do not check these limits.\"}],\"SwapFeePercentageTooLow()\":[{\"details\":\"The Vault itself does not impose a universal minimum. Rather, it validates against the range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error if it is below the minimum value returned by the pool. Pools with dynamic fees do not check these limits.\"}],\"SwapLimit(uint256,uint256)\":[{\"params\":{\"amount\":\"The total amount in or out\",\"limit\":\"The amount of the limit that has been exceeded\"}}],\"TokenAlreadyRegistered(address)\":[{\"params\":{\"token\":\"The duplicate token\"}}],\"TokenNotRegistered(address)\":[{\"params\":{\"token\":\"The unregistered token\"}}],\"TokensMismatch(address,address,address)\":[{\"params\":{\"actualToken\":\"The actual token found at that index\",\"expectedToken\":\"The correct token at a given index in the pool\",\"pool\":\"Address of the pool\"}}],\"WrapAmountTooSmall(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"WrongUnderlyingToken(address,address)\":[{\"details\":\"This should never happen, but a malicious wrapper contract might not return the correct address. Legitimate wrapper contracts should make the asset a constant or immutable value.\",\"params\":{\"underlyingToken\":\"The underlying token returned by `asset`\",\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}]},\"events\":{\"AggregateSwapFeePercentageChanged(address,uint256)\":{\"details\":\"The `ProtocolFeeController` will emit an event with the underlying change.\",\"params\":{\"aggregateSwapFeePercentage\":\"The new aggregate swap fee percentage\",\"pool\":\"The pool whose aggregate swap fee percentage changed\"}},\"AggregateYieldFeePercentageChanged(address,uint256)\":{\"details\":\"The `ProtocolFeeController` will emit an event with the underlying change.\",\"params\":{\"aggregateYieldFeePercentage\":\"The new aggregate yield fee percentage\",\"pool\":\"The pool whose aggregate yield fee percentage changed\"}},\"Approval(address,address,address,uint256)\":{\"params\":{\"owner\":\"The token holder\",\"pool\":\"The pool token receiving the allowance\",\"spender\":\"The account being authorized to spend a given amount of the token\",\"value\":\"The number of tokens spender is authorized to transfer from owner\"}},\"AuthorizerChanged(address)\":{\"params\":{\"newAuthorizer\":\"The address of the new authorizer\"}},\"BufferSharesBurned(address,address,uint256)\":{\"details\":\"The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares` retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the \\\"totalSupply\\\" of a buffer.\",\"params\":{\"burnedShares\":\"The amount of \\\"internal BPT\\\" shares burned\",\"from\":\"The owner of the burned shares\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"BufferSharesMinted(address,address,uint256)\":{\"details\":\"The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares` retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the \\\"totalSupply\\\" of a buffer.\",\"params\":{\"issuedShares\":\"The amount of \\\"internal BPT\\\" shares created\",\"to\":\"The owner of the minted shares\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"LiquidityAddedToBuffer(address,uint256,uint256)\":{\"details\":\"The underlying token can be derived from the wrapped token, so it's not included here.\",\"params\":{\"amountUnderlying\":\"The amount of the underlying token that was deposited\",\"amountWrapped\":\"The amount of the wrapped token that was deposited\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"LiquidityRemovedFromBuffer(address,uint256,uint256)\":{\"details\":\"The underlying token can be derived from the wrapped token, so it's not included here.\",\"params\":{\"amountUnderlying\":\"The amount of the underlying token that was withdrawn\",\"amountWrapped\":\"The amount of the wrapped token that was withdrawn\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"PoolBalanceChanged(address,address,uint256,int256[],uint256[])\":{\"params\":{\"deltas\":\"The amount each token changed, sorted in the pool tokens' order\",\"liquidityProvider\":\"The user performing the operation\",\"pool\":\"The pool being registered\",\"totalSupply\":\"The total supply of the pool after the operation\"}},\"PoolInitialized(address)\":{\"params\":{\"pool\":\"The pool being initialized\"}},\"PoolPausedStateChanged(address,bool)\":{\"params\":{\"paused\":\"True if the pool was paused\",\"pool\":\"The pool that was just paused or unpaused\"}},\"PoolRecoveryModeStateChanged(address,bool)\":{\"params\":{\"pool\":\"The pool\",\"recoveryMode\":\"True if recovery mode was enabled\"}},\"PoolRegistered(address,address,(address,uint8,address,bool)[],uint256,uint32,(address,address,address),(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address),(bool,bool,bool,bool))\":{\"params\":{\"factory\":\"The factory creating the pool\",\"hooksConfig\":\"Flags indicating which hooks the pool supports and address of hooks contract\",\"liquidityManagement\":\"Supported liquidity management hook flags\",\"pauseWindowEndTime\":\"The pool's pause window end time\",\"pool\":\"The pool being registered\",\"roleAccounts\":\"Addresses the Vault will allow to change certain pool settings\",\"swapFeePercentage\":\"The static swap fee of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"}},\"ProtocolFeeControllerChanged(address)\":{\"params\":{\"newProtocolFeeController\":\"The address of the new protocol fee controller\"}},\"Swap(address,address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Number of tokenIn tokens\",\"amountOut\":\"Number of tokenOut tokens\",\"pool\":\"The pool with the tokens being swapped\",\"swapFeeAmount\":\"Swap fee amount paid\",\"swapFeePercentage\":\"Swap fee percentage applied (can differ if dynamic)\",\"tokenIn\":\"The token entering the Vault (balance increases)\",\"tokenOut\":\"The token leaving the Vault (balance decreases)\"}},\"SwapFeePercentageChanged(address,uint256)\":{\"params\":{\"swapFeePercentage\":\"The new swap fee percentage for the pool\"}},\"Transfer(address,address,address,uint256)\":{\"params\":{\"from\":\"The token source\",\"pool\":\"The pool token being transferred\",\"to\":\"The token destination\",\"value\":\"The number of tokens\"}},\"Unwrap(address,address,uint256,uint256)\":{\"params\":{\"burnedShares\":\"Number of shares (wrapped tokens) burned\",\"underlyingToken\":\"The underlying token address\",\"withdrawnUnderlying\":\"Number of underlying tokens withdrawn\",\"wrappedToken\":\"The wrapped token address\"}},\"VaultBuffersPausedStateChanged(bool)\":{\"details\":\"If buffers all paused, all buffer operations (i.e., all calls through the Router with `isBuffer` set to true) will revert.\",\"params\":{\"paused\":\"True if the Vault buffers were paused\"}},\"VaultPausedStateChanged(bool)\":{\"params\":{\"paused\":\"True if the Vault was paused\"}},\"Wrap(address,address,uint256,uint256)\":{\"params\":{\"depositedUnderlying\":\"Number of underlying tokens deposited\",\"mintedShares\":\"Number of shares (wrapped tokens) minted\",\"underlyingToken\":\"The underlying token address\",\"wrappedToken\":\"The wrapped token address\"}}},\"kind\":\"dev\",\"methods\":{\"reentrancyGuardEntered()\":{\"returns\":{\"_0\":\"True if the Vault is currently executing a nonReentrant function\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AfterAddLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the afterAddLiquidity hook, indicating the transaction should revert.\"}],\"AfterInitializeHookFailed()\":[{\"notice\":\"The pool has returned false to the afterInitialize hook, indicating the transaction should revert.\"}],\"AfterRemoveLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the afterRemoveLiquidity hook, indicating the transaction should revert.\"}],\"AfterSwapHookFailed()\":[{\"notice\":\"The pool has returned false to the afterSwap hook, indicating the transaction should revert.\"}],\"AmountGivenZero()\":[{\"notice\":\"The user tried to swap zero tokens.\"}],\"AmountInAboveMax(address,uint256,uint256)\":[{\"notice\":\"A required amountIn exceeds the maximum limit specified for the operation.\"}],\"AmountOutBelowMin(address,uint256,uint256)\":[{\"notice\":\"The actual amount out is below the minimum limit specified for the operation.\"}],\"BalanceNotSettled()\":[{\"notice\":\"A transient accounting operation completed with outstanding token deltas.\"}],\"BeforeAddLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeAddLiquidity hook, indicating the transaction should revert.\"}],\"BeforeInitializeHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeInitialize hook, indicating the transaction should revert.\"}],\"BeforeRemoveLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeRemoveLiquidity hook, indicating the transaction should revert.\"}],\"BeforeSwapHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\"}],\"BptAmountInAboveMax(uint256,uint256)\":[{\"notice\":\"The required BPT amount in exceeds the maximum limit specified for the operation.\"}],\"BptAmountOutBelowMin(uint256,uint256)\":[{\"notice\":\"The BPT amount received from adding liquidity is below the minimum specified for the operation.\"}],\"BufferAlreadyInitialized(address)\":[{\"notice\":\"The buffer for the given wrapped token was already initialized.\"}],\"BufferNotInitialized(address)\":[{\"notice\":\"The buffer for the given wrapped token was not initialized.\"}],\"BufferSharesInvalidOwner()\":[{\"notice\":\"Buffer shares were burned from the zero address.\"}],\"BufferSharesInvalidReceiver()\":[{\"notice\":\"Buffer shares were minted to the zero address.\"}],\"BufferTotalSupplyTooLow(uint256)\":[{\"notice\":\"The total supply of a buffer can't be lower than the absolute minimum.\"}],\"CannotReceiveEth()\":[{\"notice\":\"The contract should not receive ETH.\"}],\"CannotSwapSameToken()\":[{\"notice\":\"The user attempted to swap a token for itself.\"}],\"DoesNotSupportAddLiquidityCustom()\":[{\"notice\":\"Pool does not support adding liquidity with a customized input.\"}],\"DoesNotSupportDonation()\":[{\"notice\":\"Pool does not support adding liquidity through donation.\"}],\"DoesNotSupportRemoveLiquidityCustom()\":[{\"notice\":\"Pool does not support removing liquidity with a customized input.\"}],\"DoesNotSupportUnbalancedLiquidity()\":[{\"notice\":\"Pool does not support adding / removing liquidity with an unbalanced input.\"}],\"DynamicSwapFeeHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\"}],\"FeePrecisionTooHigh()\":[{\"notice\":\"Primary fee percentages result in an aggregate fee that cannot be stored with the required precision.\"}],\"HookAdjustedAmountInAboveMax(address,uint256,uint256)\":[{\"notice\":\"A hook adjusted amountIn exceeds the maximum limit specified for the operation.\"}],\"HookAdjustedAmountOutBelowMin(address,uint256,uint256)\":[{\"notice\":\"The hook adjusted amount out is below the minimum limit specified for the operation.\"}],\"HookAdjustedSwapLimit(uint256,uint256)\":[{\"notice\":\"A hook adjusted amount in or out has exceeded the limit specified in the swap request.\"}],\"HookRegistrationFailed(address,address,address)\":[{\"notice\":\"A hook contract rejected a pool on registration.\"}],\"InvalidAddLiquidityKind()\":[{\"notice\":\"Add liquidity kind not supported.\"}],\"InvalidRemoveLiquidityKind()\":[{\"notice\":\"Remove liquidity kind not supported.\"}],\"InvalidToken()\":[{\"notice\":\"Invalid tokens (e.g., zero) cannot be registered.\"}],\"InvalidTokenConfiguration()\":[{\"notice\":\"The data in a TokenConfig struct is inconsistent or unsupported.\"}],\"InvalidTokenType()\":[{\"notice\":\"The token type given in a TokenConfig during pool registration is invalid.\"}],\"InvalidUnderlyingToken(address)\":[{\"notice\":\"A wrapped token reported the zero address as its underlying token asset.\"}],\"MaxTokens()\":[{\"notice\":\"The token count is above the maximum allowed.\"}],\"MinTokens()\":[{\"notice\":\"The token count is below the minimum allowed.\"}],\"NotEnoughBufferShares()\":[{\"notice\":\"The user is trying to remove more than their allocated shares from the buffer.\"}],\"NotVaultDelegateCall()\":[{\"notice\":\"The `VaultExtension` contract was called by an account directly.\"}],\"PauseBufferPeriodDurationTooLarge()\":[{\"notice\":\"The caller specified a buffer period longer than the maximum.\"}],\"PercentageAboveMax()\":[{\"notice\":\"A given percentage is above the maximum (usually FixedPoint.ONE, or 1e18 wei).\"}],\"PoolAlreadyInitialized(address)\":[{\"notice\":\"A pool has already been initialized. `initialize` may only be called once.\"}],\"PoolAlreadyRegistered(address)\":[{\"notice\":\"A pool has already been registered. `registerPool` may only be called once.\"}],\"PoolInRecoveryMode(address)\":[{\"notice\":\"Cannot enable recovery mode when already enabled.\"}],\"PoolNotInRecoveryMode(address)\":[{\"notice\":\"Cannot disable recovery mode when not enabled.\"}],\"PoolNotInitialized(address)\":[{\"notice\":\"A referenced pool has not been initialized.\"}],\"PoolNotPaused(address)\":[{\"notice\":\"Governance tried to unpause the Pool when it was not paused.\"}],\"PoolNotRegistered(address)\":[{\"notice\":\"A pool has not been registered.\"}],\"PoolPauseWindowExpired(address)\":[{\"notice\":\"Governance tried to pause a Pool after the pause period expired.\"}],\"PoolPaused(address)\":[{\"notice\":\"A user tried to perform an operation involving a paused Pool.\"}],\"PoolTotalSupplyTooLow(uint256)\":[{\"notice\":\"The total supply of a pool token can't be lower than the absolute minimum.\"}],\"ProtocolFeesExceedTotalCollected()\":[{\"notice\":\"Error raised when there is an overflow in the fee calculation.\"}],\"QueriesDisabled()\":[{\"notice\":\"A user tried to execute a query operation when they were disabled.\"}],\"QuoteResultSpoofed()\":[{\"notice\":\"Quote reverted with a reserved error code.\"}],\"ReentrancyGuardReentrantCall()\":[{\"notice\":\"Unauthorized reentrant call.\"}],\"RouterNotTrusted()\":[{\"notice\":\"An unauthorized Router tried to call a permissioned function (i.e., using the Vault's token allowance).\"}],\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}],\"SwapFeePercentageTooHigh()\":[{\"notice\":\"Error raised when the swap fee percentage is greater than the maximum allowed value.\"}],\"SwapFeePercentageTooLow()\":[{\"notice\":\"Error raised when the swap fee percentage is less than the minimum allowed value.\"}],\"SwapLimit(uint256,uint256)\":[{\"notice\":\"An amount in or out has exceeded the limit specified in the swap request.\"}],\"TokenAlreadyRegistered(address)\":[{\"notice\":\"A token was already registered (i.e., it is a duplicate in the pool).\"}],\"TokenNotRegistered(address)\":[{\"notice\":\"The user attempted to operate with a token that is not in the pool.\"}],\"TokensMismatch(address,address,address)\":[{\"notice\":\"The token list passed into an operation does not match the pool tokens in the pool.\"}],\"TradeAmountTooSmall()\":[{\"notice\":\"The amount given or calculated for an operation is below the minimum limit.\"}],\"VaultBuffersArePaused()\":[{\"notice\":\"Buffer operation attempted while vault buffers are paused.\"}],\"VaultIsNotUnlocked()\":[{\"notice\":\"A user called a Vault function (swap, add/remove liquidity) outside the lock context.\"}],\"VaultNotPaused()\":[{\"notice\":\"Governance tried to unpause the Vault when it was not paused.\"}],\"VaultPauseWindowDurationTooLarge()\":[{\"notice\":\"The caller specified a pause window period longer than the maximum.\"}],\"VaultPauseWindowExpired()\":[{\"notice\":\"Governance tried to pause the Vault after the pause period expired.\"}],\"VaultPaused()\":[{\"notice\":\"A user tried to perform an operation while the Vault was paused.\"}],\"WrapAmountTooSmall(address)\":[{\"notice\":\"The amount given to wrap/unwrap was too small, which can introduce rounding issues.\"}],\"WrongProtocolFeeControllerDeployment()\":[{\"notice\":\"The `ProtocolFeeController` contract was configured with an incorrect Vault address.\"}],\"WrongUnderlyingToken(address,address)\":[{\"notice\":\"The wrapped token asset does not match the underlying token.\"}],\"WrongVaultAdminDeployment()\":[{\"notice\":\"The `VaultAdmin` contract was configured with an incorrect Vault address.\"}],\"WrongVaultExtensionDeployment()\":[{\"notice\":\"The `VaultExtension` contract was configured with an incorrect Vault address.\"}]},\"events\":{\"AggregateSwapFeePercentageChanged(address,uint256)\":{\"notice\":\"A protocol or pool creator fee has changed, causing an update to the aggregate swap fee.\"},\"AggregateYieldFeePercentageChanged(address,uint256)\":{\"notice\":\"A protocol or pool creator fee has changed, causing an update to the aggregate yield fee.\"},\"Approval(address,address,address,uint256)\":{\"notice\":\"The allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizerChanged(address)\":{\"notice\":\"A new authorizer is set by `setAuthorizer`.\"},\"BufferSharesBurned(address,address,uint256)\":{\"notice\":\"Buffer shares were burned for an ERC4626 buffer corresponding to a given wrapped token.\"},\"BufferSharesMinted(address,address,uint256)\":{\"notice\":\"Buffer shares were minted for an ERC4626 buffer corresponding to a given wrapped token.\"},\"LiquidityAddedToBuffer(address,uint256,uint256)\":{\"notice\":\"Liquidity was added to an ERC4626 buffer corresponding to the given wrapped token.\"},\"LiquidityRemovedFromBuffer(address,uint256,uint256)\":{\"notice\":\"Liquidity was removed from an ERC4626 buffer.\"},\"PoolBalanceChanged(address,address,uint256,int256[],uint256[])\":{\"notice\":\"Pool balances have changed (e.g., after initialization, add/remove liquidity).\"},\"PoolInitialized(address)\":{\"notice\":\"A Pool was initialized by calling `initialize`.\"},\"PoolPausedStateChanged(address,bool)\":{\"notice\":\"A Pool's pause status has changed.\"},\"PoolRecoveryModeStateChanged(address,bool)\":{\"notice\":\"Recovery mode has been enabled or disabled for a pool.\"},\"PoolRegistered(address,address,(address,uint8,address,bool)[],uint256,uint32,(address,address,address),(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address),(bool,bool,bool,bool))\":{\"notice\":\"A Pool was registered by calling `registerPool`.\"},\"ProtocolFeeControllerChanged(address)\":{\"notice\":\"A new protocol fee controller is set by `setProtocolFeeController`.\"},\"Swap(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"A swap has occurred.\"},\"SwapFeePercentageChanged(address,uint256)\":{\"notice\":\"Emitted when the swap fee percentage of a pool is updated.\"},\"Transfer(address,address,address,uint256)\":{\"notice\":\"Pool tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unwrap(address,address,uint256,uint256)\":{\"notice\":\"An unwrap operation has occurred.\"},\"VaultBuffersPausedStateChanged(bool)\":{\"notice\":\"The Vault buffers pause status has changed.\"},\"VaultPausedStateChanged(bool)\":{\"notice\":\"The Vault's pause status has changed.\"},\"VaultQueriesDisabled()\":{\"notice\":\"`disableQuery` has been called on the Vault, permanently disabling query functionality.\"},\"Wrap(address,address,uint256,uint256)\":{\"notice\":\"A wrap operation has occurred.\"}},\"kind\":\"user\",\"methods\":{\"reentrancyGuardEntered()\":{\"notice\":\"Expose the state of the Vault's reentrancy guard.\"}},\"notice\":\"Functions and modifiers shared between the main Vault and its extension contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultCommon.sol\":\"VaultCommon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87\",\"dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol\":{\"keccak256\":\"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452\",\"dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c\",\"dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IERC20MultiTokenErrors.sol\":{\"keccak256\":\"0x4994bc0f8e5905640876a9411dadb73221ea2b7b1168d22cf5fe44ee1ca16960\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://69a0a6ab9c2622426ccfcb7263deb5615e589e98b3b31ea9fcd21595bb42a13d\",\"dweb:/ipfs/QmVW6GVXGTHnVo8MGk7zdLMASR8uN7khPsrEMXwgy4NBrQ\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol\":{\"keccak256\":\"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f\",\"dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol\":{\"keccak256\":\"0x265cba6f0225fae5867e47ead3b7d51ea124c6599d450b361bb86795ffb0a586\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9363b61e7b592c6d9476cfcdc9d468669f3e9d2d232ad426f6c5c6c00247258e\",\"dweb:/ipfs/QmT771Kpp4VswEcBCJCMxKKKiRNMcLJeziKCisjLrc2opx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/ISwapFeePercentageBounds.sol\":{\"keccak256\":\"0x566aae4dcbf852199e165378977e6e49009184790e1c9cfd8cd6ddd7b9cbc3d7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ce904a16c7fa36833b0e055ce8d7d15fba113b8990eab958d7f1f06faf8e7d3c\",\"dweb:/ipfs/QmRKEQaU7sKuw93Dcj4vtxVqexvEU5m5u6aQBZE8eMKQN8\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566\",\"dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol\":{\"keccak256\":\"0xe68fbe2bef8c4fda8cf43d186d0e5518f9d76e57ac1c2f8082a1d0bcf444ace7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://614fb11ff5f7ea15cab882dfe4c7f69656eb5ad0e7cb217338664d8f1d0403c7\",\"dweb:/ipfs/QmUPZRXKFLsGEiPM38uDz14EVvJV81NCNBoWajmAbEmDka\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol\":{\"keccak256\":\"0x3bf1cfa4716401af08fd265db6ebbaad011d94d4531be5a6289aafbe4dc02f0f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7969b076f81af1fec02a0cc572ea56be691315bbcc761bb47e38aecb86ae15fc\",\"dweb:/ipfs/QmPkYWjEEj9Kzrbhcc6i8mmB1WAopcf13Ue2ZhayTXtnBm\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol\":{\"keccak256\":\"0xfa87a090e0b1fc87e34b6a891b7abd4697e75997e37d073020b91c7c408bffe3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b33f211008d57462d8b4598b78e477ce6ee53f0c1172682b94e896954752fe9\",\"dweb:/ipfs/QmVzjPRey6qss4ucJx3Mb1gs5MAyLKcLUD5tLt9KNn2SNR\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol\":{\"keccak256\":\"0x2c6f4f4d714a0f1e7e648909753839da8182117f22018f4337f9632f9c40597b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://99fb94d7fcf9f972f4aec716d7d4be43e3d28f90f8f5923b9b8245be178e01aa\",\"dweb:/ipfs/QmeLSFfcvYwmPpQ58yESVjYXPY13NzGU28WjxkWUj8sgqx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol\":{\"keccak256\":\"0x976def53871db0ad0db3504086a783508b0c293b86364c8985d6700283986799\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9a2904288327a95373e32d99b2244a7afcf9f741b970ff34af6a933076076e6\",\"dweb:/ipfs/QmaS4adLMjzagUsqYhtxo7KJW2kZogx5orQgvfVzLR3dzW\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol\":{\"keccak256\":\"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3\",\"dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/CastingHelpers.sol\":{\"keccak256\":\"0xecd961f7c3ebf31b2d754a252fca741d00c441360cb144b77fe50185af67569d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f9b06d791d45947f8e2acb3a3223671b505a7193db11d966c9b0e5e0b4d0dd6e\",\"dweb:/ipfs/QmTkCVGVY4F79nG6RjmBMyd6CHFRJhqmzByx7nxdz35DYC\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/EVMCallModeHelpers.sol\":{\"keccak256\":\"0x9dc4c8d6dd5dbc108dd377dab73a3e6c84e8c104713d2afb3cba8acc9ddf4c63\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2ef7c65fe356144f8cd720109b818e1ec6cc495ca35b55ca273ef9db45c6ae00\",\"dweb:/ipfs/QmREJgnfgoqemnYKvfYjTFJBAMsV9VAKA5AY5Woprpc1vs\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/InputHelpers.sol\":{\"keccak256\":\"0xe54f620633826cf7842c91606512a0d20414e5ce77a0b0cf5d44d10179cd7f6a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e86b797bc566f3e92392220564e457a9290e28e6af9566ec6d71bc9f3fc1548c\",\"dweb:/ipfs/QmewUN2ZTCQxuv8AqWfKNMn7joCtMmXg4wyAK3QqPtjPAw\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/PackedTokenBalance.sol\":{\"keccak256\":\"0x3b5ca845ec06b247a1e5b652290023fb78f99afa5a2d2f754874d567db3a4360\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://78ef1af97a9dccd7492333b8745e15927123896e6452e40ada6b44ebfc87d9eb\",\"dweb:/ipfs/QmVaqze8Ew6BRbgjEQrM4ad7sdCb93dhy8dswi9hW3L8jv\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/ScalingHelpers.sol\":{\"keccak256\":\"0x15a8be462d26ea0cc0068d6af8cc2bbe91af626f61af609cb2c85d5c85a8ec4e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://78a6132e43bceb776619873a2b1bdf37ab328e9fb4bae11a3a42def66f73c56d\",\"dweb:/ipfs/Qmc8aKjSesnZpLFZZnoEpnRxrWFdP5nucSYwtgd1pXSULX\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/TransientStorageHelpers.sol\":{\"keccak256\":\"0x2a672a27fd968b130cbd556e0769a21cc7822766f39fd4f85079d8b3c3b94f04\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://57de967064b8c99e4f3b9b1d1b7918e70fafe36c69904695c9f2d22b8fd0210d\",\"dweb:/ipfs/QmX8CALkUGdZzovGMXx6CgMqBY4MsYsLFfDvKquKYVy8ef\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/WordCodec.sol\":{\"keccak256\":\"0xbb34564b5c16f87260db50cff8848e102cb43f3bf13e35f8ed0cc0948839c773\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ef0dee8f772ae5519ae190a20be0a61939c2091dda4122d994fbb9892286a470\",\"dweb:/ipfs/QmevUV6LqsYRX8aSvBx2bUBa9qnwioiF8cv4Q2xRZdkYP2\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/FixedPoint.sol\":{\"keccak256\":\"0xfcc6c79162990c47e5e417050b0c5c2dd6c09d2d5f0fb87ec8fe0b04fcb31cf3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ddbda64395d4453492e960044e6d144484f101480ce0dfe5483773f0882165eb\",\"dweb:/ipfs/QmazqRJiTWe86mq4DntV69UDEABFe76jLsHcjtQGxfvhps\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/LogExpMath.sol\":{\"keccak256\":\"0x70449e2b423b9850e39adddd7301205aa8b6e9e4ae788fd44d0968cac018eb2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce2174a3629b45dca032f9cf53df35dea240626913b8882a9e2da21610b02796\",\"dweb:/ipfs/Qmf8E4DePnZXjqb3V4A38gSobjgRK6VqavqPByuXvJxtBG\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/ReentrancyGuardTransient.sol\":{\"keccak256\":\"0xa956ed858fd05bf5bc808e670b4b1858df160dca07e8d5597e351b109e87c5c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85b792046d7a5e37c2816c60910602d2c16449dc58c700bff974e19d5e839f64\",\"dweb:/ipfs/QmXBaQrMFHuDF7Er9NnRh6bmdhX7KpnnhaJ7534ktWXMWk\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/SlotDerivation.sol\":{\"keccak256\":\"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2\",\"dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/StorageSlotExtension.sol\":{\"keccak256\":\"0xba524eab3f4f1b735008624cf11264842bec509e05ac025f93b8c843547fbfd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c539df1afd342c47fdbd96fb28a183b7b30e055c4e435cdf77140ec92e68a42\",\"dweb:/ipfs/QmZ4akawS7TKrJkBeoi4bfyGWRmQgXshtkAMupuxkgH5Ur\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/BalancerPoolToken.sol\":{\"keccak256\":\"0xe400a628aef4771fbbb2b8cf3f062f4d9b27fd474be3db9da8b552098dfae73f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://343e7a7f8f019cfa4631e18c164b30a8f44d41315bf261388b7dcf5e79abaacf\",\"dweb:/ipfs/QmZEJ6g3aHmnChCDoCw7y8eTPG1UNruVMThrPyx7SaqzYZ\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultCommon.sol\":{\"keccak256\":\"0xb75d08cd797ac03e2cf83ff909a17569c53d50101e4b41a2db21073ad9db4d42\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c13c907c74dda74802d6b46d9e534e581cde57352012bd0645c237b4162ecdc3\",\"dweb:/ipfs/QmcipYj5UhNP1S2eQKkmzEYz6i7T9jzboFFAVAL2CaQtgf\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol\":{\"keccak256\":\"0x0989167a7367161261e117a00cacb0ab4b66a9c442556841faa7b7cb5a4eb846\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9cc23603607cae657ebb11bdee1d3f40bc5dbf2140474b5212a0f743d524cdba\",\"dweb:/ipfs/QmVqUsVmXKQvmxqLY6oxK8JjuMGrCLaV8VihstXR5AoejG\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultStorage.sol\":{\"keccak256\":\"0x0f28c01cbe4e20d2f99f535a222a42cd8f08460eab024a019fc36f9a72bfa6e8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f0c89b57bc0427c71caba7c212f2cb13f28d598a87a8d7d60e4d32782e1be68f\",\"dweb:/ipfs/QmUM7stwxLYW66Vtmvq2pt6P2GCgtyVnk8AGRtZkj59pTs\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/lib/PoolConfigConst.sol\":{\"keccak256\":\"0xcec5acd992ba3d85194d2a66de785676e5fbd76c7ef4bd75f581582c637e9191\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://03feaba5c47de6cfa364a9f78f3d1cbc48c6e59e89348a56e773631ce3d52c4d\",\"dweb:/ipfs/QmWZmpFLKk6qEsTtbPaiKBWvTnSuYzQdbNJZX4Bng16c3F\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/lib/PoolConfigLib.sol\":{\"keccak256\":\"0x21a72d502a93071a0d0e8b1702490f5b485d85f6d3c5160966b61c65436e3371\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fa7f6b8d5da150df3774ad8a87008167d6661d1c4072fb8c304181ed30f785be\",\"dweb:/ipfs/QmWbC1CZnEwKrNY6HPeyxvfB6dbP3hioPhByrrL3ZdYGe6\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/lib/PoolDataLib.sol\":{\"keccak256\":\"0x504a94d06f4347c75b8b60598787f5191629fbe119d2114debb1de5341ab6017\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a65ee0c2c371f66d10142d7d973897e17fcd139e640fa9d30d813f556b12fd02\",\"dweb:/ipfs/QmeYXBLU3383ERgTtAko6fsjRn5YLLbbSX8PhHtHWtnKXe\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/lib/VaultStateLib.sol\":{\"keccak256\":\"0xc40f34646f76afe536a326173d3c8cd663a655375531f65f3e6f7c63cecddeeb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a97b6d2363d70869b9cf66104a6c6bdfc84d351085c94b23b0104f2608e52ff4\",\"dweb:/ipfs/QmVPVR8F6nSxxhxTpFp5cgH9n1dE2E5UXD6cPauumtpS3e\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/token/ERC20MultiToken.sol\":{\"keccak256\":\"0xc76e842c0f5478636590f6a0e1fcf21f3ad3266ea83334e158236944115cb44b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://550736d38d177b06809448a5d76b5a7d4ed15bed6100d93aad980625d8207619\",\"dweb:/ipfs/QmQo3LxJAddkzfQWWEGA9LA1zq4ZZvjQfaLeyAHrCBt82v\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf\",\"dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xe9d36d0c892aea68546d53f21e02223f7f542295c10110a0764336f9ffeab6d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34d4d72a89193f4d5223763e6d871443fb32a22d6024566843f4ee42eed68bdd\",\"dweb:/ipfs/Qmbsc6kJJNhrkNXP7g7KeqzRETQEvzSXg3ZmJmVLhaEahB\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xbbd677d9730e606a98a8e99c66ea2665e1be7b2218245ab4bc8340f5d148c032\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4220d046e8bb1591d65a95fe8f85474f4fd4ef88679f7960c5a25d2be40edd7b\",\"dweb:/ipfs/QmcWmnwx82BAWKBDGxjmtgmHtgf9Mgo4PTTxvGFb2CJ7Kr\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb38a945832ca380d4ed08d91a6ebaf03fd66ea02057e574384fae3abf3ebc136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f933ce488ce79c1366d44dca530b1cc4db25fa1380ae691effdd5e3eec8fd8a5\",\"dweb:/ipfs/Qmdyk8pSJasc9pZaRFRdmtX85BCs5faQ8xUKiWnzaEkFEt\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x499cb322fe046f09e7accdf52e4c0e3d4fcddecb9eded2e4a23d5303c5a16180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f1801d1c9baf83d0fdb04515eb752e21a73a2a8973045f42e976821ab168c5f\",\"dweb:/ipfs/QmNYMKSKkrgAW1YTfi9K5FsVzeg3zQh8nDyLdXAct8m8kU\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xa67f5e17d65eea22581382bd8c2804025f1029bfbd80908dc77b218fad29fb1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1206248cec67bdd40009d0b57e91a2ce62fd4a85eff8d3ea51b28b550afe88\",\"dweb:/ipfs/QmYcWcZ3XRPSx9r8cFwjokpESjjiCtkebVE4VK3FjE3GVd\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xf56e072d3c3b390275daa0a3f00c7a634604780b5daf4cf8590fc1c2c56b47ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e48cec5a9338d1c7fd52783831a9fca2cae2152c5aa7cf23b364e789d6f01992\",\"dweb:/ipfs/QmQCPm66skhi1LK9ji3rFk91atc95vqrpbyCmmtKXH8YUX\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AfterAddLiquidityHookFailed"},{"inputs":[],"type":"error","name":"AfterInitializeHookFailed"},{"inputs":[],"type":"error","name":"AfterRemoveLiquidityHookFailed"},{"inputs":[],"type":"error","name":"AfterSwapHookFailed"},{"inputs":[],"type":"error","name":"AmountGivenZero"},{"inputs":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"type":"error","name":"AmountInAboveMax"},{"inputs":[{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"type":"error","name":"AmountOutBelowMin"},{"inputs":[],"type":"error","name":"BalanceNotSettled"},{"inputs":[],"type":"error","name":"BeforeAddLiquidityHookFailed"},{"inputs":[],"type":"error","name":"BeforeInitializeHookFailed"},{"inputs":[],"type":"error","name":"BeforeRemoveLiquidityHookFailed"},{"inputs":[],"type":"error","name":"BeforeSwapHookFailed"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"type":"error","name":"BptAmountInAboveMax"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"type":"error","name":"BptAmountOutBelowMin"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"type":"error","name":"BufferAlreadyInitialized"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"type":"error","name":"BufferNotInitialized"},{"inputs":[],"type":"error","name":"BufferSharesInvalidOwner"},{"inputs":[],"type":"error","name":"BufferSharesInvalidReceiver"},{"inputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"type":"error","name":"BufferTotalSupplyTooLow"},{"inputs":[],"type":"error","name":"CannotReceiveEth"},{"inputs":[],"type":"error","name":"CannotSwapSameToken"},{"inputs":[],"type":"error","name":"DoesNotSupportAddLiquidityCustom"},{"inputs":[],"type":"error","name":"DoesNotSupportDonation"},{"inputs":[],"type":"error","name":"DoesNotSupportRemoveLiquidityCustom"},{"inputs":[],"type":"error","name":"DoesNotSupportUnbalancedLiquidity"},{"inputs":[],"type":"error","name":"DynamicSwapFeeHookFailed"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"type":"error","name":"ERC20InsufficientAllowance"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"type":"error","name":"ERC20InsufficientBalance"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"type":"error","name":"ERC20InvalidApprover"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"type":"error","name":"ERC20InvalidReceiver"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"ERC20InvalidSender"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"type":"error","name":"ERC20InvalidSpender"},{"inputs":[],"type":"error","name":"FeePrecisionTooHigh"},{"inputs":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"type":"error","name":"HookAdjustedAmountInAboveMax"},{"inputs":[{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"type":"error","name":"HookAdjustedAmountOutBelowMin"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"type":"error","name":"HookAdjustedSwapLimit"},{"inputs":[{"internalType":"address","name":"poolHooksContract","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"poolFactory","type":"address"}],"type":"error","name":"HookRegistrationFailed"},{"inputs":[],"type":"error","name":"InvalidAddLiquidityKind"},{"inputs":[],"type":"error","name":"InvalidRemoveLiquidityKind"},{"inputs":[],"type":"error","name":"InvalidToken"},{"inputs":[],"type":"error","name":"InvalidTokenConfiguration"},{"inputs":[],"type":"error","name":"InvalidTokenType"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"type":"error","name":"InvalidUnderlyingToken"},{"inputs":[],"type":"error","name":"MaxTokens"},{"inputs":[],"type":"error","name":"MinTokens"},{"inputs":[],"type":"error","name":"NotEnoughBufferShares"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"expectedUnderlyingAmount","type":"uint256"},{"internalType":"uint256","name":"actualUnderlyingAmount","type":"uint256"}],"type":"error","name":"NotEnoughUnderlying"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"expectedWrappedAmount","type":"uint256"},{"internalType":"uint256","name":"actualWrappedAmount","type":"uint256"}],"type":"error","name":"NotEnoughWrapped"},{"inputs":[],"type":"error","name":"NotVaultDelegateCall"},{"inputs":[],"type":"error","name":"PauseBufferPeriodDurationTooLarge"},{"inputs":[],"type":"error","name":"PercentageAboveMax"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolAlreadyInitialized"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolAlreadyRegistered"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolInRecoveryMode"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolNotInRecoveryMode"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolNotInitialized"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolNotPaused"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolNotRegistered"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolPauseWindowExpired"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"type":"error","name":"PoolPaused"},{"inputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"type":"error","name":"PoolTotalSupplyTooLow"},{"inputs":[],"type":"error","name":"ProtocolFeesExceedTotalCollected"},{"inputs":[],"type":"error","name":"QueriesDisabled"},{"inputs":[],"type":"error","name":"QuoteResultSpoofed"},{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"},{"inputs":[],"type":"error","name":"RouterNotTrusted"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"SenderIsNotVault"},{"inputs":[],"type":"error","name":"SwapFeePercentageTooHigh"},{"inputs":[],"type":"error","name":"SwapFeePercentageTooLow"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"type":"error","name":"SwapLimit"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"type":"error","name":"TokenAlreadyRegistered"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"type":"error","name":"TokenNotRegistered"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"expectedToken","type":"address"},{"internalType":"address","name":"actualToken","type":"address"}],"type":"error","name":"TokensMismatch"},{"inputs":[],"type":"error","name":"TradeAmountTooSmall"},{"inputs":[],"type":"error","name":"VaultBuffersArePaused"},{"inputs":[],"type":"error","name":"VaultIsNotUnlocked"},{"inputs":[],"type":"error","name":"VaultNotPaused"},{"inputs":[],"type":"error","name":"VaultPauseWindowDurationTooLarge"},{"inputs":[],"type":"error","name":"VaultPauseWindowExpired"},{"inputs":[],"type":"error","name":"VaultPaused"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"type":"error","name":"WrapAmountTooSmall"},{"inputs":[],"type":"error","name":"WrongProtocolFeeControllerDeployment"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"underlyingToken","type":"address"}],"type":"error","name":"WrongUnderlyingToken"},{"inputs":[],"type":"error","name":"WrongVaultAdminDeployment"},{"inputs":[],"type":"error","name":"WrongVaultExtensionDeployment"},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256","indexed":false}],"type":"event","name":"AggregateSwapFeePercentageChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256","indexed":false}],"type":"event","name":"AggregateYieldFeePercentageChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address","indexed":true}],"type":"event","name":"AuthorizerChanged","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"uint256","name":"burnedShares","type":"uint256","indexed":false}],"type":"event","name":"BufferSharesBurned","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"issuedShares","type":"uint256","indexed":false}],"type":"event","name":"BufferSharesMinted","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"uint256","name":"amountUnderlying","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountWrapped","type":"uint256","indexed":false}],"type":"event","name":"LiquidityAddedToBuffer","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"uint256","name":"amountUnderlying","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountWrapped","type":"uint256","indexed":false}],"type":"event","name":"LiquidityRemovedFromBuffer","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"address","name":"liquidityProvider","type":"address","indexed":true},{"internalType":"uint256","name":"totalSupply","type":"uint256","indexed":false},{"internalType":"int256[]","name":"deltas","type":"int256[]","indexed":false},{"internalType":"uint256[]","name":"swapFeeAmountsRaw","type":"uint256[]","indexed":false}],"type":"event","name":"PoolBalanceChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true}],"type":"event","name":"PoolInitialized","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"bool","name":"paused","type":"bool","indexed":false}],"type":"event","name":"PoolPausedStateChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"bool","name":"recoveryMode","type":"bool","indexed":false}],"type":"event","name":"PoolRecoveryModeStateChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"address","name":"factory","type":"address","indexed":true},{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"indexed":false},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256","indexed":false},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32","indexed":false},{"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple","components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}],"indexed":false},{"internalType":"struct HooksConfig","name":"hooksConfig","type":"tuple","components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"},{"internalType":"address","name":"hooksContract","type":"address"}],"indexed":false},{"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"indexed":false}],"type":"event","name":"PoolRegistered","anonymous":false},{"inputs":[{"internalType":"contract IProtocolFeeController","name":"newProtocolFeeController","type":"address","indexed":true}],"type":"event","name":"ProtocolFeeControllerChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"contract IERC20","name":"tokenIn","type":"address","indexed":true},{"internalType":"contract IERC20","name":"tokenOut","type":"address","indexed":true},{"internalType":"uint256","name":"amountIn","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountOut","type":"uint256","indexed":false},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256","indexed":false},{"internalType":"uint256","name":"swapFeeAmount","type":"uint256","indexed":false}],"type":"event","name":"Swap","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256","indexed":false}],"type":"event","name":"SwapFeePercentageChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"contract IERC20","name":"underlyingToken","type":"address","indexed":true},{"internalType":"uint256","name":"burnedShares","type":"uint256","indexed":false},{"internalType":"uint256","name":"withdrawnUnderlying","type":"uint256","indexed":false}],"type":"event","name":"Unwrap","anonymous":false},{"inputs":[{"internalType":"bool","name":"paused","type":"bool","indexed":false}],"type":"event","name":"VaultBuffersPausedStateChanged","anonymous":false},{"inputs":[{"internalType":"bool","name":"paused","type":"bool","indexed":false}],"type":"event","name":"VaultPausedStateChanged","anonymous":false},{"inputs":[],"type":"event","name":"VaultQueriesDisabled","anonymous":false},{"inputs":[{"internalType":"contract IERC20","name":"underlyingToken","type":"address","indexed":true},{"internalType":"contract IERC4626","name":"wrappedToken","type":"address","indexed":true},{"internalType":"uint256","name":"depositedUnderlying","type":"uint256","indexed":false},{"internalType":"uint256","name":"mintedShares","type":"uint256","indexed":false}],"type":"event","name":"Wrap","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"reentrancyGuardEntered","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"reentrancyGuardEntered()":{"returns":{"_0":"True if the Vault is currently executing a nonReentrant function"}}},"version":1},"userdoc":{"kind":"user","methods":{"reentrancyGuardEntered()":{"notice":"Expose the state of the Vault's reentrancy guard."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultCommon.sol":"VaultCommon"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"keccak256":"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2","urls":["bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87","dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol":{"keccak256":"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906","urls":["bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452","dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol":{"keccak256":"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a","urls":["bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c","dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IERC20MultiTokenErrors.sol":{"keccak256":"0x4994bc0f8e5905640876a9411dadb73221ea2b7b1168d22cf5fe44ee1ca16960","urls":["bzz-raw://69a0a6ab9c2622426ccfcb7263deb5615e589e98b3b31ea9fcd21595bb42a13d","dweb:/ipfs/QmVW6GVXGTHnVo8MGk7zdLMASR8uN7khPsrEMXwgy4NBrQ"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol":{"keccak256":"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638","urls":["bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f","dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol":{"keccak256":"0x265cba6f0225fae5867e47ead3b7d51ea124c6599d450b361bb86795ffb0a586","urls":["bzz-raw://9363b61e7b592c6d9476cfcdc9d468669f3e9d2d232ad426f6c5c6c00247258e","dweb:/ipfs/QmT771Kpp4VswEcBCJCMxKKKiRNMcLJeziKCisjLrc2opx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/ISwapFeePercentageBounds.sol":{"keccak256":"0x566aae4dcbf852199e165378977e6e49009184790e1c9cfd8cd6ddd7b9cbc3d7","urls":["bzz-raw://ce904a16c7fa36833b0e055ce8d7d15fba113b8990eab958d7f1f06faf8e7d3c","dweb:/ipfs/QmRKEQaU7sKuw93Dcj4vtxVqexvEU5m5u6aQBZE8eMKQN8"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol":{"keccak256":"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c","urls":["bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566","dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol":{"keccak256":"0xe68fbe2bef8c4fda8cf43d186d0e5518f9d76e57ac1c2f8082a1d0bcf444ace7","urls":["bzz-raw://614fb11ff5f7ea15cab882dfe4c7f69656eb5ad0e7cb217338664d8f1d0403c7","dweb:/ipfs/QmUPZRXKFLsGEiPM38uDz14EVvJV81NCNBoWajmAbEmDka"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol":{"keccak256":"0x3bf1cfa4716401af08fd265db6ebbaad011d94d4531be5a6289aafbe4dc02f0f","urls":["bzz-raw://7969b076f81af1fec02a0cc572ea56be691315bbcc761bb47e38aecb86ae15fc","dweb:/ipfs/QmPkYWjEEj9Kzrbhcc6i8mmB1WAopcf13Ue2ZhayTXtnBm"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol":{"keccak256":"0xfa87a090e0b1fc87e34b6a891b7abd4697e75997e37d073020b91c7c408bffe3","urls":["bzz-raw://2b33f211008d57462d8b4598b78e477ce6ee53f0c1172682b94e896954752fe9","dweb:/ipfs/QmVzjPRey6qss4ucJx3Mb1gs5MAyLKcLUD5tLt9KNn2SNR"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol":{"keccak256":"0x2c6f4f4d714a0f1e7e648909753839da8182117f22018f4337f9632f9c40597b","urls":["bzz-raw://99fb94d7fcf9f972f4aec716d7d4be43e3d28f90f8f5923b9b8245be178e01aa","dweb:/ipfs/QmeLSFfcvYwmPpQ58yESVjYXPY13NzGU28WjxkWUj8sgqx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol":{"keccak256":"0x976def53871db0ad0db3504086a783508b0c293b86364c8985d6700283986799","urls":["bzz-raw://e9a2904288327a95373e32d99b2244a7afcf9f741b970ff34af6a933076076e6","dweb:/ipfs/QmaS4adLMjzagUsqYhtxo7KJW2kZogx5orQgvfVzLR3dzW"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol":{"keccak256":"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3","urls":["bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3","dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/CastingHelpers.sol":{"keccak256":"0xecd961f7c3ebf31b2d754a252fca741d00c441360cb144b77fe50185af67569d","urls":["bzz-raw://f9b06d791d45947f8e2acb3a3223671b505a7193db11d966c9b0e5e0b4d0dd6e","dweb:/ipfs/QmTkCVGVY4F79nG6RjmBMyd6CHFRJhqmzByx7nxdz35DYC"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/EVMCallModeHelpers.sol":{"keccak256":"0x9dc4c8d6dd5dbc108dd377dab73a3e6c84e8c104713d2afb3cba8acc9ddf4c63","urls":["bzz-raw://2ef7c65fe356144f8cd720109b818e1ec6cc495ca35b55ca273ef9db45c6ae00","dweb:/ipfs/QmREJgnfgoqemnYKvfYjTFJBAMsV9VAKA5AY5Woprpc1vs"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/InputHelpers.sol":{"keccak256":"0xe54f620633826cf7842c91606512a0d20414e5ce77a0b0cf5d44d10179cd7f6a","urls":["bzz-raw://e86b797bc566f3e92392220564e457a9290e28e6af9566ec6d71bc9f3fc1548c","dweb:/ipfs/QmewUN2ZTCQxuv8AqWfKNMn7joCtMmXg4wyAK3QqPtjPAw"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/PackedTokenBalance.sol":{"keccak256":"0x3b5ca845ec06b247a1e5b652290023fb78f99afa5a2d2f754874d567db3a4360","urls":["bzz-raw://78ef1af97a9dccd7492333b8745e15927123896e6452e40ada6b44ebfc87d9eb","dweb:/ipfs/QmVaqze8Ew6BRbgjEQrM4ad7sdCb93dhy8dswi9hW3L8jv"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/ScalingHelpers.sol":{"keccak256":"0x15a8be462d26ea0cc0068d6af8cc2bbe91af626f61af609cb2c85d5c85a8ec4e","urls":["bzz-raw://78a6132e43bceb776619873a2b1bdf37ab328e9fb4bae11a3a42def66f73c56d","dweb:/ipfs/Qmc8aKjSesnZpLFZZnoEpnRxrWFdP5nucSYwtgd1pXSULX"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/TransientStorageHelpers.sol":{"keccak256":"0x2a672a27fd968b130cbd556e0769a21cc7822766f39fd4f85079d8b3c3b94f04","urls":["bzz-raw://57de967064b8c99e4f3b9b1d1b7918e70fafe36c69904695c9f2d22b8fd0210d","dweb:/ipfs/QmX8CALkUGdZzovGMXx6CgMqBY4MsYsLFfDvKquKYVy8ef"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/helpers/WordCodec.sol":{"keccak256":"0xbb34564b5c16f87260db50cff8848e102cb43f3bf13e35f8ed0cc0948839c773","urls":["bzz-raw://ef0dee8f772ae5519ae190a20be0a61939c2091dda4122d994fbb9892286a470","dweb:/ipfs/QmevUV6LqsYRX8aSvBx2bUBa9qnwioiF8cv4Q2xRZdkYP2"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/FixedPoint.sol":{"keccak256":"0xfcc6c79162990c47e5e417050b0c5c2dd6c09d2d5f0fb87ec8fe0b04fcb31cf3","urls":["bzz-raw://ddbda64395d4453492e960044e6d144484f101480ce0dfe5483773f0882165eb","dweb:/ipfs/QmazqRJiTWe86mq4DntV69UDEABFe76jLsHcjtQGxfvhps"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/LogExpMath.sol":{"keccak256":"0x70449e2b423b9850e39adddd7301205aa8b6e9e4ae788fd44d0968cac018eb2a","urls":["bzz-raw://ce2174a3629b45dca032f9cf53df35dea240626913b8882a9e2da21610b02796","dweb:/ipfs/Qmf8E4DePnZXjqb3V4A38gSobjgRK6VqavqPByuXvJxtBG"],"license":"MIT"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/ReentrancyGuardTransient.sol":{"keccak256":"0xa956ed858fd05bf5bc808e670b4b1858df160dca07e8d5597e351b109e87c5c2","urls":["bzz-raw://85b792046d7a5e37c2816c60910602d2c16449dc58c700bff974e19d5e839f64","dweb:/ipfs/QmXBaQrMFHuDF7Er9NnRh6bmdhX7KpnnhaJ7534ktWXMWk"],"license":"MIT"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/SlotDerivation.sol":{"keccak256":"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab","urls":["bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2","dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5"],"license":"MIT"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/StorageSlotExtension.sol":{"keccak256":"0xba524eab3f4f1b735008624cf11264842bec509e05ac025f93b8c843547fbfd3","urls":["bzz-raw://2c539df1afd342c47fdbd96fb28a183b7b30e055c4e435cdf77140ec92e68a42","dweb:/ipfs/QmZ4akawS7TKrJkBeoi4bfyGWRmQgXshtkAMupuxkgH5Ur"],"license":"MIT"},"lib/balancer-v3-monorepo/pkg/vault/contracts/BalancerPoolToken.sol":{"keccak256":"0xe400a628aef4771fbbb2b8cf3f062f4d9b27fd474be3db9da8b552098dfae73f","urls":["bzz-raw://343e7a7f8f019cfa4631e18c164b30a8f44d41315bf261388b7dcf5e79abaacf","dweb:/ipfs/QmZEJ6g3aHmnChCDoCw7y8eTPG1UNruVMThrPyx7SaqzYZ"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultCommon.sol":{"keccak256":"0xb75d08cd797ac03e2cf83ff909a17569c53d50101e4b41a2db21073ad9db4d42","urls":["bzz-raw://c13c907c74dda74802d6b46d9e534e581cde57352012bd0645c237b4162ecdc3","dweb:/ipfs/QmcipYj5UhNP1S2eQKkmzEYz6i7T9jzboFFAVAL2CaQtgf"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol":{"keccak256":"0x0989167a7367161261e117a00cacb0ab4b66a9c442556841faa7b7cb5a4eb846","urls":["bzz-raw://9cc23603607cae657ebb11bdee1d3f40bc5dbf2140474b5212a0f743d524cdba","dweb:/ipfs/QmVqUsVmXKQvmxqLY6oxK8JjuMGrCLaV8VihstXR5AoejG"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultStorage.sol":{"keccak256":"0x0f28c01cbe4e20d2f99f535a222a42cd8f08460eab024a019fc36f9a72bfa6e8","urls":["bzz-raw://f0c89b57bc0427c71caba7c212f2cb13f28d598a87a8d7d60e4d32782e1be68f","dweb:/ipfs/QmUM7stwxLYW66Vtmvq2pt6P2GCgtyVnk8AGRtZkj59pTs"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/lib/PoolConfigConst.sol":{"keccak256":"0xcec5acd992ba3d85194d2a66de785676e5fbd76c7ef4bd75f581582c637e9191","urls":["bzz-raw://03feaba5c47de6cfa364a9f78f3d1cbc48c6e59e89348a56e773631ce3d52c4d","dweb:/ipfs/QmWZmpFLKk6qEsTtbPaiKBWvTnSuYzQdbNJZX4Bng16c3F"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/lib/PoolConfigLib.sol":{"keccak256":"0x21a72d502a93071a0d0e8b1702490f5b485d85f6d3c5160966b61c65436e3371","urls":["bzz-raw://fa7f6b8d5da150df3774ad8a87008167d6661d1c4072fb8c304181ed30f785be","dweb:/ipfs/QmWbC1CZnEwKrNY6HPeyxvfB6dbP3hioPhByrrL3ZdYGe6"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/lib/PoolDataLib.sol":{"keccak256":"0x504a94d06f4347c75b8b60598787f5191629fbe119d2114debb1de5341ab6017","urls":["bzz-raw://a65ee0c2c371f66d10142d7d973897e17fcd139e640fa9d30d813f556b12fd02","dweb:/ipfs/QmeYXBLU3383ERgTtAko6fsjRn5YLLbbSX8PhHtHWtnKXe"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/lib/VaultStateLib.sol":{"keccak256":"0xc40f34646f76afe536a326173d3c8cd663a655375531f65f3e6f7c63cecddeeb","urls":["bzz-raw://a97b6d2363d70869b9cf66104a6c6bdfc84d351085c94b23b0104f2608e52ff4","dweb:/ipfs/QmVPVR8F6nSxxhxTpFp5cgH9n1dE2E5UXD6cPauumtpS3e"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/token/ERC20MultiToken.sol":{"keccak256":"0xc76e842c0f5478636590f6a0e1fcf21f3ad3266ea83334e158236944115cb44b","urls":["bzz-raw://550736d38d177b06809448a5d76b5a7d4ed15bed6100d93aad980625d8207619","dweb:/ipfs/QmQo3LxJAddkzfQWWEGA9LA1zq4ZZvjQfaLeyAHrCBt82v"],"license":"GPL-3.0-or-later"},"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06","urls":["bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf","dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol":{"keccak256":"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92","urls":["bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a","dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229","urls":["bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155","dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28","urls":["bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323","dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0xe9d36d0c892aea68546d53f21e02223f7f542295c10110a0764336f9ffeab6d1","urls":["bzz-raw://34d4d72a89193f4d5223763e6d871443fb32a22d6024566843f4ee42eed68bdd","dweb:/ipfs/Qmbsc6kJJNhrkNXP7g7KeqzRETQEvzSXg3ZmJmVLhaEahB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Nonces.sol":{"keccak256":"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f","urls":["bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e","dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c","urls":["bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4","dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol":{"keccak256":"0xbbd677d9730e606a98a8e99c66ea2665e1be7b2218245ab4bc8340f5d148c032","urls":["bzz-raw://4220d046e8bb1591d65a95fe8f85474f4fd4ef88679f7960c5a25d2be40edd7b","dweb:/ipfs/QmcWmnwx82BAWKBDGxjmtgmHtgf9Mgo4PTTxvGFb2CJ7Kr"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol":{"keccak256":"0xb38a945832ca380d4ed08d91a6ebaf03fd66ea02057e574384fae3abf3ebc136","urls":["bzz-raw://f933ce488ce79c1366d44dca530b1cc4db25fa1380ae691effdd5e3eec8fd8a5","dweb:/ipfs/Qmdyk8pSJasc9pZaRFRdmtX85BCs5faQ8xUKiWnzaEkFEt"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2","urls":["bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440","dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x499cb322fe046f09e7accdf52e4c0e3d4fcddecb9eded2e4a23d5303c5a16180","urls":["bzz-raw://8f1801d1c9baf83d0fdb04515eb752e21a73a2a8973045f42e976821ab168c5f","dweb:/ipfs/QmNYMKSKkrgAW1YTfi9K5FsVzeg3zQh8nDyLdXAct8m8kU"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol":{"keccak256":"0xa67f5e17d65eea22581382bd8c2804025f1029bfbd80908dc77b218fad29fb1d","urls":["bzz-raw://db1206248cec67bdd40009d0b57e91a2ce62fd4a85eff8d3ea51b28b550afe88","dweb:/ipfs/QmYcWcZ3XRPSx9r8cFwjokpESjjiCtkebVE4VK3FjE3GVd"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xf56e072d3c3b390275daa0a3f00c7a634604780b5daf4cf8590fc1c2c56b47ff","urls":["bzz-raw://e48cec5a9338d1c7fd52783831a9fca2cae2152c5aa7cf23b364e789d6f01992","dweb:/ipfs/QmQCPm66skhi1LK9ji3rFk91atc95vqrpbyCmmtKXH8YUX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e","urls":["bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9","dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c","urls":["bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966","dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481","urls":["bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb","dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0","urls":["bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426","dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"],"license":"MIT"}},"version":1},"id":69}