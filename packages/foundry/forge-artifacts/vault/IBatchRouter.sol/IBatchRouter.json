{"abi":[{"type":"function","name":"querySwapExactIn","inputs":[{"name":"paths","type":"tuple[]","internalType":"struct IBatchRouter.SwapPathExactAmountIn[]","components":[{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"steps","type":"tuple[]","internalType":"struct IBatchRouter.SwapPathStep[]","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"isBuffer","type":"bool","internalType":"bool"}]},{"name":"exactAmountIn","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}]},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pathAmountsOut","type":"uint256[]","internalType":"uint256[]"},{"name":"tokensOut","type":"address[]","internalType":"address[]"},{"name":"amountsOut","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"querySwapExactOut","inputs":[{"name":"paths","type":"tuple[]","internalType":"struct IBatchRouter.SwapPathExactAmountOut[]","components":[{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"steps","type":"tuple[]","internalType":"struct IBatchRouter.SwapPathStep[]","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"isBuffer","type":"bool","internalType":"bool"}]},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"},{"name":"exactAmountOut","type":"uint256","internalType":"uint256"}]},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pathAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"tokensIn","type":"address[]","internalType":"address[]"},{"name":"amountsIn","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"swapExactIn","inputs":[{"name":"paths","type":"tuple[]","internalType":"struct IBatchRouter.SwapPathExactAmountIn[]","components":[{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"steps","type":"tuple[]","internalType":"struct IBatchRouter.SwapPathStep[]","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"isBuffer","type":"bool","internalType":"bool"}]},{"name":"exactAmountIn","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}]},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"wethIsEth","type":"bool","internalType":"bool"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pathAmountsOut","type":"uint256[]","internalType":"uint256[]"},{"name":"tokensOut","type":"address[]","internalType":"address[]"},{"name":"amountsOut","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"payable"},{"type":"function","name":"swapExactOut","inputs":[{"name":"paths","type":"tuple[]","internalType":"struct IBatchRouter.SwapPathExactAmountOut[]","components":[{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"steps","type":"tuple[]","internalType":"struct IBatchRouter.SwapPathStep[]","components":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"isBuffer","type":"bool","internalType":"bool"}]},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"},{"name":"exactAmountOut","type":"uint256","internalType":"uint256"}]},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"wethIsEth","type":"bool","internalType":"bool"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pathAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"tokensIn","type":"address[]","internalType":"address[]"},{"name":"amountsIn","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"querySwapExactIn((address,(address,address,bool)[],uint256,uint256)[],bytes)":"fe893e8b","querySwapExactOut((address,(address,address,bool)[],uint256,uint256)[],bytes)":"3910ab2a","swapExactIn((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)":"286f580d","swapExactOut((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)":"8eb1b65e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBuffer\",\"type\":\"bool\"}],\"internalType\":\"struct IBatchRouter.SwapPathStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchRouter.SwapPathExactAmountIn[]\",\"name\":\"paths\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"querySwapExactIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pathAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensOut\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBuffer\",\"type\":\"bool\"}],\"internalType\":\"struct IBatchRouter.SwapPathStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchRouter.SwapPathExactAmountOut[]\",\"name\":\"paths\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"querySwapExactOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pathAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensIn\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBuffer\",\"type\":\"bool\"}],\"internalType\":\"struct IBatchRouter.SwapPathStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchRouter.SwapPathExactAmountIn[]\",\"name\":\"paths\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"swapExactIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pathAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensOut\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBuffer\",\"type\":\"bool\"}],\"internalType\":\"struct IBatchRouter.SwapPathStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchRouter.SwapPathExactAmountOut[]\",\"name\":\"paths\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"swapExactOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pathAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensIn\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"querySwapExactIn((address,(address,address,bool)[],uint256,uint256)[],bytes)\":{\"details\":\"Min amounts out specified in the paths are ignored.\",\"params\":{\"paths\":\"Swap paths from token in to token out, specifying exact amounts in\",\"userData\":\"Additional (optional) data required for the query\"},\"returns\":{\"amountsOut\":\"Calculated amounts of output tokens to be received, ordered by output token address\",\"pathAmountsOut\":\"Calculated amounts of output tokens corresponding to the last step of each given path\",\"tokensOut\":\"Output token addresses\"}},\"querySwapExactOut((address,(address,address,bool)[],uint256,uint256)[],bytes)\":{\"details\":\"Max amounts in specified in the paths are ignored.\",\"params\":{\"paths\":\"Swap paths from token in to token out, specifying exact amounts out\",\"userData\":\"Additional (optional) data required for the query\"},\"returns\":{\"amountsIn\":\"Calculated amounts of input tokens to be received, ordered by input token address\",\"pathAmountsIn\":\"Calculated amounts of input tokens corresponding to the last step of each given path\",\"tokensIn\":\"Input token addresses\"}},\"swapExactIn((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)\":{\"params\":{\"deadline\":\"Deadline for the swap, after which it will revert\",\"paths\":\"Swap paths from token in to token out, specifying exact amounts in\",\"userData\":\"Additional (optional) data required for the swap\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsOut\":\"Calculated amounts of output tokens, ordered by output token address\",\"pathAmountsOut\":\"Calculated amounts of output tokens corresponding to the last step of each given path\",\"tokensOut\":\"Output token addresses\"}},\"swapExactOut((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)\":{\"params\":{\"deadline\":\"Deadline for the swap\",\"paths\":\"Swap paths from token in to token out, specifying exact amounts out\",\"userData\":\"Additional (optional) data required for the swap\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsIn\":\"Calculated amounts of input tokens, ordered by input token address\",\"pathAmountsIn\":\"Calculated amounts of input tokens corresponding to the first step of each given path\",\"tokensIn\":\"Input token addresses\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"querySwapExactIn((address,(address,address,bool)[],uint256,uint256)[],bytes)\":{\"notice\":\"Queries a swap operation involving multiple paths (steps), specifying exact input token amounts.\"},\"querySwapExactOut((address,(address,address,bool)[],uint256,uint256)[],bytes)\":{\"notice\":\"Queries a swap operation involving multiple paths (steps), specifying exact output token amounts.\"},\"swapExactIn((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)\":{\"notice\":\"Executes a swap operation involving multiple paths (steps), specifying exact input token amounts.\"},\"swapExactOut((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)\":{\"notice\":\"Executes a swap operation involving multiple paths (steps), specifying exact output token amounts.\"}},\"notice\":\"Interface for the `BatchRouter`, supporting multi-hop swaps.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBatchRouter.sol\":\"IBatchRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol\":{\"keccak256\":\"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452\",\"dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBatchRouter.sol\":{\"keccak256\":\"0xfe6e412bac4a3caf93ababddf0d927a73b8e83fa17cb233fc28c1cd495142a8e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7f6c9a4c513ef09ac57500fb2950af1e6977de949a659fd22a6c60855b5f7d1f\",\"dweb:/ipfs/QmV7stUf7aP92NQxaMSqBontGuvwzPGeHmB9hgjfh9L6vT\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol\":{\"keccak256\":\"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3\",\"dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf\",\"dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct IBatchRouter.SwapPathExactAmountIn[]","name":"paths","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"struct IBatchRouter.SwapPathStep[]","name":"steps","type":"tuple[]","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"bool","name":"isBuffer","type":"bool"}]},{"internalType":"uint256","name":"exactAmountIn","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}]},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"querySwapExactIn","outputs":[{"internalType":"uint256[]","name":"pathAmountsOut","type":"uint256[]"},{"internalType":"address[]","name":"tokensOut","type":"address[]"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}]},{"inputs":[{"internalType":"struct IBatchRouter.SwapPathExactAmountOut[]","name":"paths","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"struct IBatchRouter.SwapPathStep[]","name":"steps","type":"tuple[]","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"bool","name":"isBuffer","type":"bool"}]},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"}]},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"querySwapExactOut","outputs":[{"internalType":"uint256[]","name":"pathAmountsIn","type":"uint256[]"},{"internalType":"address[]","name":"tokensIn","type":"address[]"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}]},{"inputs":[{"internalType":"struct IBatchRouter.SwapPathExactAmountIn[]","name":"paths","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"struct IBatchRouter.SwapPathStep[]","name":"steps","type":"tuple[]","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"bool","name":"isBuffer","type":"bool"}]},{"internalType":"uint256","name":"exactAmountIn","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}]},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"swapExactIn","outputs":[{"internalType":"uint256[]","name":"pathAmountsOut","type":"uint256[]"},{"internalType":"address[]","name":"tokensOut","type":"address[]"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}]},{"inputs":[{"internalType":"struct IBatchRouter.SwapPathExactAmountOut[]","name":"paths","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"struct IBatchRouter.SwapPathStep[]","name":"steps","type":"tuple[]","components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"bool","name":"isBuffer","type":"bool"}]},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"}]},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"swapExactOut","outputs":[{"internalType":"uint256[]","name":"pathAmountsIn","type":"uint256[]"},{"internalType":"address[]","name":"tokensIn","type":"address[]"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}]}],"devdoc":{"kind":"dev","methods":{"querySwapExactIn((address,(address,address,bool)[],uint256,uint256)[],bytes)":{"details":"Min amounts out specified in the paths are ignored.","params":{"paths":"Swap paths from token in to token out, specifying exact amounts in","userData":"Additional (optional) data required for the query"},"returns":{"amountsOut":"Calculated amounts of output tokens to be received, ordered by output token address","pathAmountsOut":"Calculated amounts of output tokens corresponding to the last step of each given path","tokensOut":"Output token addresses"}},"querySwapExactOut((address,(address,address,bool)[],uint256,uint256)[],bytes)":{"details":"Max amounts in specified in the paths are ignored.","params":{"paths":"Swap paths from token in to token out, specifying exact amounts out","userData":"Additional (optional) data required for the query"},"returns":{"amountsIn":"Calculated amounts of input tokens to be received, ordered by input token address","pathAmountsIn":"Calculated amounts of input tokens corresponding to the last step of each given path","tokensIn":"Input token addresses"}},"swapExactIn((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)":{"params":{"deadline":"Deadline for the swap, after which it will revert","paths":"Swap paths from token in to token out, specifying exact amounts in","userData":"Additional (optional) data required for the swap","wethIsEth":"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH"},"returns":{"amountsOut":"Calculated amounts of output tokens, ordered by output token address","pathAmountsOut":"Calculated amounts of output tokens corresponding to the last step of each given path","tokensOut":"Output token addresses"}},"swapExactOut((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)":{"params":{"deadline":"Deadline for the swap","paths":"Swap paths from token in to token out, specifying exact amounts out","userData":"Additional (optional) data required for the swap","wethIsEth":"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH"},"returns":{"amountsIn":"Calculated amounts of input tokens, ordered by input token address","pathAmountsIn":"Calculated amounts of input tokens corresponding to the first step of each given path","tokensIn":"Input token addresses"}}},"version":1},"userdoc":{"kind":"user","methods":{"querySwapExactIn((address,(address,address,bool)[],uint256,uint256)[],bytes)":{"notice":"Queries a swap operation involving multiple paths (steps), specifying exact input token amounts."},"querySwapExactOut((address,(address,address,bool)[],uint256,uint256)[],bytes)":{"notice":"Queries a swap operation involving multiple paths (steps), specifying exact output token amounts."},"swapExactIn((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)":{"notice":"Executes a swap operation involving multiple paths (steps), specifying exact input token amounts."},"swapExactOut((address,(address,address,bool)[],uint256,uint256)[],uint256,bool,bytes)":{"notice":"Executes a swap operation involving multiple paths (steps), specifying exact output token amounts."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBatchRouter.sol":"IBatchRouter"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol":{"keccak256":"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906","urls":["bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452","dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBatchRouter.sol":{"keccak256":"0xfe6e412bac4a3caf93ababddf0d927a73b8e83fa17cb233fc28c1cd495142a8e","urls":["bzz-raw://7f6c9a4c513ef09ac57500fb2950af1e6977de949a659fd22a6c60855b5f7d1f","dweb:/ipfs/QmV7stUf7aP92NQxaMSqBontGuvwzPGeHmB9hgjfh9L6vT"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol":{"keccak256":"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3","urls":["bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3","dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf"],"license":"GPL-3.0-or-later"},"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06","urls":["bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf","dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28","urls":["bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323","dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBatchRouter.sol","id":3886,"exportedSymbols":{"AddLiquidityKind":[6632],"IBatchRouter":[3885],"IERC20":[52306],"RemoveLiquidityKind":[6653],"SwapKind":[6560]},"nodeType":"SourceUnit","src":"46:5640:24","nodes":[{"id":3735,"nodeType":"PragmaDirective","src":"46:24:24","nodes":[],"literals":["solidity","^","0.8",".24"]},{"id":3737,"nodeType":"ImportDirective","src":"72:72:24","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","nameLocation":"-1:-1:-1","scope":3886,"sourceUnit":52307,"symbolAliases":[{"foreign":{"id":3736,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52306,"src":"81:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":3741,"nodeType":"ImportDirective","src":"146:83:24","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol","file":"./VaultTypes.sol","nameLocation":"-1:-1:-1","scope":3886,"sourceUnit":6697,"symbolAliases":[{"foreign":{"id":3738,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"155:16:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3739,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"173:19:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3740,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"194:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":3885,"nodeType":"ContractDefinition","src":"304:5381:24","nodes":[{"id":3750,"nodeType":"StructDefinition","src":"541:216:24","nodes":[],"canonicalName":"IBatchRouter.SwapPathStep","members":[{"constant":false,"id":3744,"mutability":"mutable","name":"pool","nameLocation":"579:4:24","nodeType":"VariableDeclaration","scope":3750,"src":"571:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3743,"name":"address","nodeType":"ElementaryTypeName","src":"571:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"tokenOut","nameLocation":"600:8:24","nodeType":"VariableDeclaration","scope":3750,"src":"593:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},"typeName":{"id":3746,"nodeType":"UserDefinedTypeName","pathNode":{"id":3745,"name":"IERC20","nameLocations":["593:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"593:6:24"},"referencedDeclaration":52306,"src":"593:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"isBuffer","nameLocation":"742:8:24","nodeType":"VariableDeclaration","scope":3750,"src":"737:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3748,"name":"bool","nodeType":"ElementaryTypeName","src":"737:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SwapPathStep","nameLocation":"548:12:24","scope":3885,"visibility":"public"},{"id":3762,"nodeType":"StructDefinition","src":"763:312:24","nodes":[],"canonicalName":"IBatchRouter.SwapPathExactAmountIn","members":[{"constant":false,"id":3753,"mutability":"mutable","name":"tokenIn","nameLocation":"809:7:24","nodeType":"VariableDeclaration","scope":3762,"src":"802:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},"typeName":{"id":3752,"nodeType":"UserDefinedTypeName","pathNode":{"id":3751,"name":"IERC20","nameLocations":["802:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"802:6:24"},"referencedDeclaration":52306,"src":"802:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"steps","nameLocation":"1002:5:24","nodeType":"VariableDeclaration","scope":3762,"src":"987:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathStep_$3750_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathStep[]"},"typeName":{"baseType":{"id":3755,"nodeType":"UserDefinedTypeName","pathNode":{"id":3754,"name":"SwapPathStep","nameLocations":["987:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"987:12:24"},"referencedDeclaration":3750,"src":"987:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapPathStep_$3750_storage_ptr","typeString":"struct IBatchRouter.SwapPathStep"}},"id":3756,"nodeType":"ArrayTypeName","src":"987:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathStep_$3750_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathStep[]"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"exactAmountIn","nameLocation":"1025:13:24","nodeType":"VariableDeclaration","scope":3762,"src":"1017:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"minAmountOut","nameLocation":"1056:12:24","nodeType":"VariableDeclaration","scope":3762,"src":"1048:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SwapPathExactAmountIn","nameLocation":"770:21:24","scope":3885,"visibility":"public"},{"id":3774,"nodeType":"StructDefinition","src":"1081:326:24","nodes":[],"canonicalName":"IBatchRouter.SwapPathExactAmountOut","members":[{"constant":false,"id":3765,"mutability":"mutable","name":"tokenIn","nameLocation":"1128:7:24","nodeType":"VariableDeclaration","scope":3774,"src":"1121:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},"typeName":{"id":3764,"nodeType":"UserDefinedTypeName","pathNode":{"id":3763,"name":"IERC20","nameLocations":["1121:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"1121:6:24"},"referencedDeclaration":52306,"src":"1121:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"steps","nameLocation":"1334:5:24","nodeType":"VariableDeclaration","scope":3774,"src":"1319:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathStep_$3750_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathStep[]"},"typeName":{"baseType":{"id":3767,"nodeType":"UserDefinedTypeName","pathNode":{"id":3766,"name":"SwapPathStep","nameLocations":["1319:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"1319:12:24"},"referencedDeclaration":3750,"src":"1319:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapPathStep_$3750_storage_ptr","typeString":"struct IBatchRouter.SwapPathStep"}},"id":3768,"nodeType":"ArrayTypeName","src":"1319:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathStep_$3750_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathStep[]"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"maxAmountIn","nameLocation":"1357:11:24","nodeType":"VariableDeclaration","scope":3774,"src":"1349:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"exactAmountOut","nameLocation":"1386:14:24","nodeType":"VariableDeclaration","scope":3774,"src":"1378:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SwapPathExactAmountOut","nameLocation":"1088:22:24","scope":3885,"visibility":"public"},{"id":3787,"nodeType":"StructDefinition","src":"1413:173:24","nodes":[],"canonicalName":"IBatchRouter.SwapExactInHookParams","members":[{"constant":false,"id":3776,"mutability":"mutable","name":"sender","nameLocation":"1460:6:24","nodeType":"VariableDeclaration","scope":3787,"src":"1452:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3775,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"paths","nameLocation":"1500:5:24","nodeType":"VariableDeclaration","scope":3787,"src":"1476:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountIn_$3762_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn[]"},"typeName":{"baseType":{"id":3778,"nodeType":"UserDefinedTypeName","pathNode":{"id":3777,"name":"SwapPathExactAmountIn","nameLocations":["1476:21:24"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"1476:21:24"},"referencedDeclaration":3762,"src":"1476:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapPathExactAmountIn_$3762_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn"}},"id":3779,"nodeType":"ArrayTypeName","src":"1476:23:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountIn_$3762_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn[]"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"deadline","nameLocation":"1523:8:24","nodeType":"VariableDeclaration","scope":3787,"src":"1515:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3784,"mutability":"mutable","name":"wethIsEth","nameLocation":"1546:9:24","nodeType":"VariableDeclaration","scope":3787,"src":"1541:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3783,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"userData","nameLocation":"1571:8:24","nodeType":"VariableDeclaration","scope":3787,"src":"1565:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3785,"name":"bytes","nodeType":"ElementaryTypeName","src":"1565:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SwapExactInHookParams","nameLocation":"1420:21:24","scope":3885,"visibility":"public"},{"id":3800,"nodeType":"StructDefinition","src":"1592:175:24","nodes":[],"canonicalName":"IBatchRouter.SwapExactOutHookParams","members":[{"constant":false,"id":3789,"mutability":"mutable","name":"sender","nameLocation":"1640:6:24","nodeType":"VariableDeclaration","scope":3800,"src":"1632:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"1632:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"paths","nameLocation":"1681:5:24","nodeType":"VariableDeclaration","scope":3800,"src":"1656:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountOut_$3774_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut[]"},"typeName":{"baseType":{"id":3791,"nodeType":"UserDefinedTypeName","pathNode":{"id":3790,"name":"SwapPathExactAmountOut","nameLocations":["1656:22:24"],"nodeType":"IdentifierPath","referencedDeclaration":3774,"src":"1656:22:24"},"referencedDeclaration":3774,"src":"1656:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapPathExactAmountOut_$3774_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut"}},"id":3792,"nodeType":"ArrayTypeName","src":"1656:24:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountOut_$3774_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut[]"}},"visibility":"internal"},{"constant":false,"id":3795,"mutability":"mutable","name":"deadline","nameLocation":"1704:8:24","nodeType":"VariableDeclaration","scope":3800,"src":"1696:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1696:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"wethIsEth","nameLocation":"1727:9:24","nodeType":"VariableDeclaration","scope":3800,"src":"1722:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3796,"name":"bool","nodeType":"ElementaryTypeName","src":"1722:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"userData","nameLocation":"1752:8:24","nodeType":"VariableDeclaration","scope":3800,"src":"1746:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3798,"name":"bytes","nodeType":"ElementaryTypeName","src":"1746:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SwapExactOutHookParams","nameLocation":"1599:22:24","scope":3885,"visibility":"public"},{"id":3823,"nodeType":"FunctionDefinition","src":"2506:296:24","nodes":[],"documentation":{"id":3801,"nodeType":"StructuredDocumentation","src":"1773:728:24","text":" @notice Executes a swap operation involving multiple paths (steps), specifying exact input token amounts.\n @param paths Swap paths from token in to token out, specifying exact amounts in\n @param deadline Deadline for the swap, after which it will revert\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data required for the swap\n @return pathAmountsOut Calculated amounts of output tokens corresponding to the last step of each given path\n @return tokensOut Output token addresses\n @return amountsOut Calculated amounts of output tokens, ordered by output token address"},"functionSelector":"286f580d","implemented":false,"kind":"function","modifiers":[],"name":"swapExactIn","nameLocation":"2515:11:24","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"paths","nameLocation":"2567:5:24","nodeType":"VariableDeclaration","scope":3823,"src":"2536:36:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountIn_$3762_memory_ptr_$dyn_memory_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn[]"},"typeName":{"baseType":{"id":3803,"nodeType":"UserDefinedTypeName","pathNode":{"id":3802,"name":"SwapPathExactAmountIn","nameLocations":["2536:21:24"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"2536:21:24"},"referencedDeclaration":3762,"src":"2536:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapPathExactAmountIn_$3762_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn"}},"id":3804,"nodeType":"ArrayTypeName","src":"2536:23:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountIn_$3762_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn[]"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"deadline","nameLocation":"2590:8:24","nodeType":"VariableDeclaration","scope":3823,"src":"2582:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2582:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"wethIsEth","nameLocation":"2613:9:24","nodeType":"VariableDeclaration","scope":3823,"src":"2608:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3808,"name":"bool","nodeType":"ElementaryTypeName","src":"2608:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"userData","nameLocation":"2647:8:24","nodeType":"VariableDeclaration","scope":3823,"src":"2632:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3810,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2526:135:24"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"pathAmountsOut","nameLocation":"2729:14:24","nodeType":"VariableDeclaration","scope":3823,"src":"2712:31:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3814,"nodeType":"ArrayTypeName","src":"2712:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"tokensOut","nameLocation":"2762:9:24","nodeType":"VariableDeclaration","scope":3823,"src":"2745:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3816,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3817,"nodeType":"ArrayTypeName","src":"2745:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"amountsOut","nameLocation":"2790:10:24","nodeType":"VariableDeclaration","scope":3823,"src":"2773:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2773:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3820,"nodeType":"ArrayTypeName","src":"2773:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2711:90:24"},"scope":3885,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":3846,"nodeType":"FunctionDefinition","src":"3509:271:24","nodes":[],"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"2808:696:24","text":" @notice Executes a swap operation involving multiple paths (steps), specifying exact output token amounts.\n @param paths Swap paths from token in to token out, specifying exact amounts out\n @param deadline Deadline for the swap\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data required for the swap\n @return pathAmountsIn Calculated amounts of input tokens corresponding to the first step of each given path\n @return tokensIn Input token addresses\n @return amountsIn Calculated amounts of input tokens, ordered by input token address"},"functionSelector":"8eb1b65e","implemented":false,"kind":"function","modifiers":[],"name":"swapExactOut","nameLocation":"3518:12:24","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"paths","nameLocation":"3572:5:24","nodeType":"VariableDeclaration","scope":3846,"src":"3540:37:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountOut_$3774_memory_ptr_$dyn_memory_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut[]"},"typeName":{"baseType":{"id":3826,"nodeType":"UserDefinedTypeName","pathNode":{"id":3825,"name":"SwapPathExactAmountOut","nameLocations":["3540:22:24"],"nodeType":"IdentifierPath","referencedDeclaration":3774,"src":"3540:22:24"},"referencedDeclaration":3774,"src":"3540:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapPathExactAmountOut_$3774_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut"}},"id":3827,"nodeType":"ArrayTypeName","src":"3540:24:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountOut_$3774_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut[]"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"deadline","nameLocation":"3595:8:24","nodeType":"VariableDeclaration","scope":3846,"src":"3587:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"3587:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"wethIsEth","nameLocation":"3618:9:24","nodeType":"VariableDeclaration","scope":3846,"src":"3613:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3831,"name":"bool","nodeType":"ElementaryTypeName","src":"3613:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"userData","nameLocation":"3652:8:24","nodeType":"VariableDeclaration","scope":3846,"src":"3637:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3637:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3530:136:24"},"returnParameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"pathAmountsIn","nameLocation":"3710:13:24","nodeType":"VariableDeclaration","scope":3846,"src":"3693:30:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3837,"nodeType":"ArrayTypeName","src":"3693:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"tokensIn","nameLocation":"3742:8:24","nodeType":"VariableDeclaration","scope":3846,"src":"3725:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"3725:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3840,"nodeType":"ArrayTypeName","src":"3725:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"amountsIn","nameLocation":"3769:9:24","nodeType":"VariableDeclaration","scope":3846,"src":"3752:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3752:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3843,"nodeType":"ArrayTypeName","src":"3752:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3692:87:24"},"scope":3885,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":3865,"nodeType":"FunctionDefinition","src":"4620:219:24","nodes":[],"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"3994:621:24","text":" @notice Queries a swap operation involving multiple paths (steps), specifying exact input token amounts.\n @dev Min amounts out specified in the paths are ignored.\n @param paths Swap paths from token in to token out, specifying exact amounts in\n @param userData Additional (optional) data required for the query\n @return pathAmountsOut Calculated amounts of output tokens corresponding to the last step of each given path\n @return tokensOut Output token addresses\n @return amountsOut Calculated amounts of output tokens to be received, ordered by output token address"},"functionSelector":"fe893e8b","implemented":false,"kind":"function","modifiers":[],"name":"querySwapExactIn","nameLocation":"4629:16:24","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"paths","nameLocation":"4686:5:24","nodeType":"VariableDeclaration","scope":3865,"src":"4655:36:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountIn_$3762_memory_ptr_$dyn_memory_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn[]"},"typeName":{"baseType":{"id":3849,"nodeType":"UserDefinedTypeName","pathNode":{"id":3848,"name":"SwapPathExactAmountIn","nameLocations":["4655:21:24"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"4655:21:24"},"referencedDeclaration":3762,"src":"4655:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapPathExactAmountIn_$3762_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn"}},"id":3850,"nodeType":"ArrayTypeName","src":"4655:23:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountIn_$3762_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountIn[]"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"userData","nameLocation":"4716:8:24","nodeType":"VariableDeclaration","scope":3865,"src":"4701:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3852,"name":"bytes","nodeType":"ElementaryTypeName","src":"4701:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4645:85:24"},"returnParameters":{"id":3864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"pathAmountsOut","nameLocation":"4766:14:24","nodeType":"VariableDeclaration","scope":3865,"src":"4749:31:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4749:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ArrayTypeName","src":"4749:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"tokensOut","nameLocation":"4799:9:24","nodeType":"VariableDeclaration","scope":3865,"src":"4782:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3858,"name":"address","nodeType":"ElementaryTypeName","src":"4782:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3859,"nodeType":"ArrayTypeName","src":"4782:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3863,"mutability":"mutable","name":"amountsOut","nameLocation":"4827:10:24","nodeType":"VariableDeclaration","scope":3865,"src":"4810:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"4810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3862,"nodeType":"ArrayTypeName","src":"4810:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4748:90:24"},"scope":3885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":3884,"nodeType":"FunctionDefinition","src":"5465:218:24","nodes":[],"documentation":{"id":3866,"nodeType":"StructuredDocumentation","src":"4845:615:24","text":" @notice Queries a swap operation involving multiple paths (steps), specifying exact output token amounts.\n @dev Max amounts in specified in the paths are ignored.\n @param paths Swap paths from token in to token out, specifying exact amounts out\n @param userData Additional (optional) data required for the query\n @return pathAmountsIn Calculated amounts of input tokens corresponding to the last step of each given path\n @return tokensIn Input token addresses\n @return amountsIn Calculated amounts of input tokens to be received, ordered by input token address"},"functionSelector":"3910ab2a","implemented":false,"kind":"function","modifiers":[],"name":"querySwapExactOut","nameLocation":"5474:17:24","parameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"paths","nameLocation":"5533:5:24","nodeType":"VariableDeclaration","scope":3884,"src":"5501:37:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountOut_$3774_memory_ptr_$dyn_memory_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut[]"},"typeName":{"baseType":{"id":3868,"nodeType":"UserDefinedTypeName","pathNode":{"id":3867,"name":"SwapPathExactAmountOut","nameLocations":["5501:22:24"],"nodeType":"IdentifierPath","referencedDeclaration":3774,"src":"5501:22:24"},"referencedDeclaration":3774,"src":"5501:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapPathExactAmountOut_$3774_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut"}},"id":3869,"nodeType":"ArrayTypeName","src":"5501:24:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapPathExactAmountOut_$3774_storage_$dyn_storage_ptr","typeString":"struct IBatchRouter.SwapPathExactAmountOut[]"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"userData","nameLocation":"5563:8:24","nodeType":"VariableDeclaration","scope":3884,"src":"5548:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3871,"name":"bytes","nodeType":"ElementaryTypeName","src":"5548:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5491:86:24"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"pathAmountsIn","nameLocation":"5613:13:24","nodeType":"VariableDeclaration","scope":3884,"src":"5596:30:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ArrayTypeName","src":"5596:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"tokensIn","nameLocation":"5645:8:24","nodeType":"VariableDeclaration","scope":3884,"src":"5628:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3877,"name":"address","nodeType":"ElementaryTypeName","src":"5628:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3878,"nodeType":"ArrayTypeName","src":"5628:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"amountsIn","nameLocation":"5672:9:24","nodeType":"VariableDeclaration","scope":3884,"src":"5655:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"5655:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ArrayTypeName","src":"5655:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5595:87:24"},"scope":3885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IBatchRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"231:73:24","text":"@notice Interface for the `BatchRouter`, supporting multi-hop swaps."},"fullyImplemented":false,"linearizedBaseContracts":[3885],"name":"IBatchRouter","nameLocation":"314:12:24","scope":3886,"usedErrors":[],"usedEvents":[]}],"license":"GPL-3.0-or-later"},"id":24}