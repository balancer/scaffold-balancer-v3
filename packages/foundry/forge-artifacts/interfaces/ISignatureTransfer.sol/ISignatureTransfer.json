{"abi":[{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"invalidateUnorderedNonces","inputs":[{"name":"wordPos","type":"uint256","internalType":"uint256"},{"name":"mask","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"nonceBitmap","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"permitTransferFrom","inputs":[{"name":"permit","type":"tuple","internalType":"struct ISignatureTransfer.PermitTransferFrom","components":[{"name":"permitted","type":"tuple","internalType":"struct ISignatureTransfer.TokenPermissions","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"transferDetails","type":"tuple","internalType":"struct ISignatureTransfer.SignatureTransferDetails","components":[{"name":"to","type":"address","internalType":"address"},{"name":"requestedAmount","type":"uint256","internalType":"uint256"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"permitTransferFrom","inputs":[{"name":"permit","type":"tuple","internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","components":[{"name":"permitted","type":"tuple[]","internalType":"struct ISignatureTransfer.TokenPermissions[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"transferDetails","type":"tuple[]","internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"requestedAmount","type":"uint256","internalType":"uint256"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"permitWitnessTransferFrom","inputs":[{"name":"permit","type":"tuple","internalType":"struct ISignatureTransfer.PermitTransferFrom","components":[{"name":"permitted","type":"tuple","internalType":"struct ISignatureTransfer.TokenPermissions","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"transferDetails","type":"tuple","internalType":"struct ISignatureTransfer.SignatureTransferDetails","components":[{"name":"to","type":"address","internalType":"address"},{"name":"requestedAmount","type":"uint256","internalType":"uint256"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"witness","type":"bytes32","internalType":"bytes32"},{"name":"witnessTypeString","type":"string","internalType":"string"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"permitWitnessTransferFrom","inputs":[{"name":"permit","type":"tuple","internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","components":[{"name":"permitted","type":"tuple[]","internalType":"struct ISignatureTransfer.TokenPermissions[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"transferDetails","type":"tuple[]","internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"requestedAmount","type":"uint256","internalType":"uint256"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"witness","type":"bytes32","internalType":"bytes32"},{"name":"witnessTypeString","type":"string","internalType":"string"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"UnorderedNonceInvalidation","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"word","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"mask","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"InvalidAmount","inputs":[{"name":"maxAmount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"LengthMismatch","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","invalidateUnorderedNonces(uint256,uint256)":"3ff9dcb1","nonceBitmap(address,uint256)":"4fe02b44","permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":"30f28b7a","permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":"edd9444b","permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":"137c29fe","permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":"fe8ec1a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}]},\"kind\":\"dev\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"nonceBitmap(address,uint256)\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}}},\"title\":\"SignatureTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}]},\"events\":{\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"}},\"notice\":\"Handles ERC20 token transfers through signature based actions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":\"ISignatureTransfer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"maxAmount","type":"uint256"}],"type":"error","name":"InvalidAmount"},{"inputs":[],"type":"error","name":"LengthMismatch"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"word","type":"uint256","indexed":false},{"internalType":"uint256","name":"mask","type":"uint256","indexed":false}],"type":"event","name":"UnorderedNonceInvalidation","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"wordPos","type":"uint256"},{"internalType":"uint256","name":"mask","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"invalidateUnorderedNonces"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"nonceBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple","components":[{"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]},{"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}]},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permitTransferFrom"},{"inputs":[{"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple","components":[{"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]},{"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}]},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permitTransferFrom"},{"inputs":[{"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple","components":[{"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]},{"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}]},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permitWitnessTransferFrom"},{"inputs":[{"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple","components":[{"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]},{"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}]},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permitWitnessTransferFrom"}],"devdoc":{"kind":"dev","methods":{"invalidateUnorderedNonces(uint256,uint256)":{"details":"The wordPos is maxed at type(uint248).max","params":{"mask":"A bitmap masked against msg.sender's current bitmap at the word position","wordPos":"A number to index the nonceBitmap at"}},"nonceBitmap(address,uint256)":{"details":"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max"},"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":{"details":"Reverts if the requested amount is greater than the permitted signed amount","params":{"owner":"The owner of the tokens to transfer","permit":"The permit data signed over by the owner","signature":"The signature to verify","transferDetails":"The spender's requested transfer details for the permitted token"}},"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":{"params":{"owner":"The owner of the tokens to transfer","permit":"The permit data signed over by the owner","signature":"The signature to verify","transferDetails":"Specifies the recipient and requested amount for the token transfer"}},"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":{"details":"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount","params":{"owner":"The owner of the tokens to transfer","permit":"The permit data signed over by the owner","signature":"The signature to verify","transferDetails":"The spender's requested transfer details for the permitted token","witness":"Extra data to include when checking the user signature","witnessTypeString":"The EIP-712 type definition for remaining string stub of the typehash"}},"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":{"details":"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition","params":{"owner":"The owner of the tokens to transfer","permit":"The permit data signed over by the owner","signature":"The signature to verify","transferDetails":"Specifies the recipient and requested amount for the token transfer","witness":"Extra data to include when checking the user signature","witnessTypeString":"The EIP-712 type definition for remaining string stub of the typehash"}}},"version":1},"userdoc":{"kind":"user","methods":{"invalidateUnorderedNonces(uint256,uint256)":{"notice":"Invalidates the bits specified in mask for the bitmap at the word position"},"nonceBitmap(address,uint256)":{"notice":"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection"},"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":{"notice":"Transfers a token using a signed permit message"},"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":{"notice":"Transfers multiple tokens using a signed permit message"},"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":{"notice":"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over"},"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":{"notice":"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over"}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/permit2/src/interfaces/ISignatureTransfer.sol":"ISignatureTransfer"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/permit2/src/interfaces/IEIP712.sol":{"keccak256":"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138","urls":["bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72","dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"],"license":"MIT"},"lib/permit2/src/interfaces/ISignatureTransfer.sol":{"keccak256":"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e","urls":["bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317","dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/permit2/src/interfaces/ISignatureTransfer.sol","id":60737,"exportedSymbols":{"IEIP712":[60584],"ISignatureTransfer":[60736]},"nodeType":"SourceUnit","src":"32:6843:126","nodes":[{"id":60598,"nodeType":"PragmaDirective","src":"32:23:126","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":60600,"nodeType":"ImportDirective","src":"57:38:126","nodes":[],"absolutePath":"lib/permit2/src/interfaces/IEIP712.sol","file":"./IEIP712.sol","nameLocation":"-1:-1:-1","scope":60737,"sourceUnit":60585,"symbolAliases":[{"foreign":{"id":60599,"name":"IEIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60584,"src":"65:7:126","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60736,"nodeType":"ContractDefinition","src":"264:6610:126","nodes":[{"id":60608,"nodeType":"ErrorDefinition","src":"491:39:126","nodes":[],"documentation":{"id":60604,"nodeType":"StructuredDocumentation","src":"310:176:126","text":"@notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n @param maxAmount The maximum amount a spender can request to transfer"},"errorSelector":"3728b83d","name":"InvalidAmount","nameLocation":"497:13:126","parameters":{"id":60607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60606,"mutability":"mutable","name":"maxAmount","nameLocation":"519:9:126","nodeType":"VariableDeclaration","scope":60608,"src":"511:17:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60605,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"510:19:126"}},{"id":60611,"nodeType":"ErrorDefinition","src":"802:23:126","nodes":[],"documentation":{"id":60609,"nodeType":"StructuredDocumentation","src":"536:261:126","text":"@notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"},"errorSelector":"ff633a38","name":"LengthMismatch","nameLocation":"808:14:126","parameters":{"id":60610,"nodeType":"ParameterList","parameters":[],"src":"822:2:126"}},{"id":60620,"nodeType":"EventDefinition","src":"922:84:126","nodes":[],"anonymous":false,"documentation":{"id":60612,"nodeType":"StructuredDocumentation","src":"831:86:126","text":"@notice Emits an event when the owner successfully invalidates an unordered nonce."},"eventSelector":"3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d","name":"UnorderedNonceInvalidation","nameLocation":"928:26:126","parameters":{"id":60619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60614,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"971:5:126","nodeType":"VariableDeclaration","scope":60620,"src":"955:21:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60613,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:126","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60616,"indexed":false,"mutability":"mutable","name":"word","nameLocation":"986:4:126","nodeType":"VariableDeclaration","scope":60620,"src":"978:12:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60615,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60618,"indexed":false,"mutability":"mutable","name":"mask","nameLocation":"1000:4:126","nodeType":"VariableDeclaration","scope":60620,"src":"992:12:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60617,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"954:51:126"}},{"id":60626,"nodeType":"StructDefinition","src":"1112:157:126","nodes":[],"canonicalName":"ISignatureTransfer.TokenPermissions","documentation":{"id":60621,"nodeType":"StructuredDocumentation","src":"1012:95:126","text":"@notice The token and amount details for a transfer signed in the permit transfer signature"},"members":[{"constant":false,"id":60623,"mutability":"mutable","name":"token","nameLocation":"1185:5:126","nodeType":"VariableDeclaration","scope":60626,"src":"1177:13:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60622,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:126","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60625,"mutability":"mutable","name":"amount","nameLocation":"1256:6:126","nodeType":"VariableDeclaration","scope":60626,"src":"1248:14:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1248:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenPermissions","nameLocation":"1119:16:126","scope":60736,"visibility":"public"},{"id":60635,"nodeType":"StructDefinition","src":"1345:251:126","nodes":[],"canonicalName":"ISignatureTransfer.PermitTransferFrom","documentation":{"id":60627,"nodeType":"StructuredDocumentation","src":"1275:65:126","text":"@notice The signed permit message for a single token transfer"},"members":[{"constant":false,"id":60630,"mutability":"mutable","name":"permitted","nameLocation":"1398:9:126","nodeType":"VariableDeclaration","scope":60635,"src":"1381:26:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$60626_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"},"typeName":{"id":60629,"nodeType":"UserDefinedTypeName","pathNode":{"id":60628,"name":"TokenPermissions","nameLocations":["1381:16:126"],"nodeType":"IdentifierPath","referencedDeclaration":60626,"src":"1381:16:126"},"referencedDeclaration":60626,"src":"1381:16:126","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$60626_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"}},"visibility":"internal"},{"constant":false,"id":60632,"mutability":"mutable","name":"nonce","nameLocation":"1514:5:126","nodeType":"VariableDeclaration","scope":60635,"src":"1506:13:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60634,"mutability":"mutable","name":"deadline","nameLocation":"1581:8:126","nodeType":"VariableDeclaration","scope":60635,"src":"1573:16:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitTransferFrom","nameLocation":"1352:18:126","scope":60736,"visibility":"public"},{"id":60641,"nodeType":"StructDefinition","src":"1873:157:126","nodes":[],"canonicalName":"ISignatureTransfer.SignatureTransferDetails","documentation":{"id":60636,"nodeType":"StructuredDocumentation","src":"1602:266:126","text":"@notice Specifies the recipient address and amount for batched transfers.\n @dev Recipients and amounts correspond to the index of the signed token permissions array.\n @dev Reverts if the requested amount is greater than the permitted signed amount."},"members":[{"constant":false,"id":60638,"mutability":"mutable","name":"to","nameLocation":"1952:2:126","nodeType":"VariableDeclaration","scope":60641,"src":"1944:10:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60637,"name":"address","nodeType":"ElementaryTypeName","src":"1944:7:126","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60640,"mutability":"mutable","name":"requestedAmount","nameLocation":"2008:15:126","nodeType":"VariableDeclaration","scope":60641,"src":"2000:23:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2000:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SignatureTransferDetails","nameLocation":"1880:24:126","scope":60736,"visibility":"public"},{"id":60651,"nodeType":"StructDefinition","src":"2284:331:126","nodes":[],"canonicalName":"ISignatureTransfer.PermitBatchTransferFrom","documentation":{"id":60642,"nodeType":"StructuredDocumentation","src":"2036:243:126","text":"@notice Used to reconstruct the signed permit message for multiple token transfers\n @dev Do not need to pass in spender address as it is required that it is msg.sender\n @dev Note that a user still signs over a spender address"},"members":[{"constant":false,"id":60646,"mutability":"mutable","name":"permitted","nameLocation":"2417:9:126","nodeType":"VariableDeclaration","scope":60651,"src":"2398:28:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$60626_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions[]"},"typeName":{"baseType":{"id":60644,"nodeType":"UserDefinedTypeName","pathNode":{"id":60643,"name":"TokenPermissions","nameLocations":["2398:16:126"],"nodeType":"IdentifierPath","referencedDeclaration":60626,"src":"2398:16:126"},"referencedDeclaration":60626,"src":"2398:16:126","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$60626_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"}},"id":60645,"nodeType":"ArrayTypeName","src":"2398:18:126","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$60626_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions[]"}},"visibility":"internal"},{"constant":false,"id":60648,"mutability":"mutable","name":"nonce","nameLocation":"2533:5:126","nodeType":"VariableDeclaration","scope":60651,"src":"2525:13:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2525:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60650,"mutability":"mutable","name":"deadline","nameLocation":"2600:8:126","nodeType":"VariableDeclaration","scope":60651,"src":"2592:16:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60649,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitBatchTransferFrom","nameLocation":"2291:23:126","scope":60736,"visibility":"public"},{"id":60661,"nodeType":"FunctionDefinition","src":"3109:71:126","nodes":[],"documentation":{"id":60652,"nodeType":"StructuredDocumentation","src":"2621:483:126","text":"@notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n @dev It returns a uint256 bitmap\n @dev The index, or wordPosition is capped at type(uint248).max"},"functionSelector":"4fe02b44","implemented":false,"kind":"function","modifiers":[],"name":"nonceBitmap","nameLocation":"3118:11:126","parameters":{"id":60657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60661,"src":"3130:7:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60653,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:126","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60661,"src":"3139:7:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3129:18:126"},"returnParameters":{"id":60660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60661,"src":"3171:7:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60658,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3170:9:126"},"scope":60736,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60675,"nodeType":"FunctionDefinition","src":"3604:201:126","nodes":[],"documentation":{"id":60662,"nodeType":"StructuredDocumentation","src":"3186:413:126","text":"@notice Transfers a token using a signed permit message\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param signature The signature to verify"},"functionSelector":"30f28b7a","implemented":false,"kind":"function","modifiers":[],"name":"permitTransferFrom","nameLocation":"3613:18:126","parameters":{"id":60673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60665,"mutability":"mutable","name":"permit","nameLocation":"3667:6:126","nodeType":"VariableDeclaration","scope":60675,"src":"3641:32:126","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$60635_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":60664,"nodeType":"UserDefinedTypeName","pathNode":{"id":60663,"name":"PermitTransferFrom","nameLocations":["3641:18:126"],"nodeType":"IdentifierPath","referencedDeclaration":60635,"src":"3641:18:126"},"referencedDeclaration":60635,"src":"3641:18:126","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$60635_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"},{"constant":false,"id":60668,"mutability":"mutable","name":"transferDetails","nameLocation":"3717:15:126","nodeType":"VariableDeclaration","scope":60675,"src":"3683:49:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$60641_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"},"typeName":{"id":60667,"nodeType":"UserDefinedTypeName","pathNode":{"id":60666,"name":"SignatureTransferDetails","nameLocations":["3683:24:126"],"nodeType":"IdentifierPath","referencedDeclaration":60641,"src":"3683:24:126"},"referencedDeclaration":60641,"src":"3683:24:126","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$60641_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"visibility":"internal"},{"constant":false,"id":60670,"mutability":"mutable","name":"owner","nameLocation":"3750:5:126","nodeType":"VariableDeclaration","scope":60675,"src":"3742:13:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60669,"name":"address","nodeType":"ElementaryTypeName","src":"3742:7:126","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60672,"mutability":"mutable","name":"signature","nameLocation":"3780:9:126","nodeType":"VariableDeclaration","scope":60675,"src":"3765:24:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":60671,"name":"bytes","nodeType":"ElementaryTypeName","src":"3765:5:126","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3631:164:126"},"returnParameters":{"id":60674,"nodeType":"ParameterList","parameters":[],"src":"3804:0:126"},"scope":60736,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":60693,"nodeType":"FunctionDefinition","src":"4631:276:126","nodes":[],"documentation":{"id":60676,"nodeType":"StructuredDocumentation","src":"3811:815:126","text":"@notice Transfers a token using a signed permit message\n @notice Includes extra data provided by the caller to verify signature over\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"},"functionSelector":"137c29fe","implemented":false,"kind":"function","modifiers":[],"name":"permitWitnessTransferFrom","nameLocation":"4640:25:126","parameters":{"id":60691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60679,"mutability":"mutable","name":"permit","nameLocation":"4701:6:126","nodeType":"VariableDeclaration","scope":60693,"src":"4675:32:126","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$60635_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":60678,"nodeType":"UserDefinedTypeName","pathNode":{"id":60677,"name":"PermitTransferFrom","nameLocations":["4675:18:126"],"nodeType":"IdentifierPath","referencedDeclaration":60635,"src":"4675:18:126"},"referencedDeclaration":60635,"src":"4675:18:126","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$60635_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"},{"constant":false,"id":60682,"mutability":"mutable","name":"transferDetails","nameLocation":"4751:15:126","nodeType":"VariableDeclaration","scope":60693,"src":"4717:49:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$60641_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"},"typeName":{"id":60681,"nodeType":"UserDefinedTypeName","pathNode":{"id":60680,"name":"SignatureTransferDetails","nameLocations":["4717:24:126"],"nodeType":"IdentifierPath","referencedDeclaration":60641,"src":"4717:24:126"},"referencedDeclaration":60641,"src":"4717:24:126","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$60641_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"visibility":"internal"},{"constant":false,"id":60684,"mutability":"mutable","name":"owner","nameLocation":"4784:5:126","nodeType":"VariableDeclaration","scope":60693,"src":"4776:13:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60683,"name":"address","nodeType":"ElementaryTypeName","src":"4776:7:126","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60686,"mutability":"mutable","name":"witness","nameLocation":"4807:7:126","nodeType":"VariableDeclaration","scope":60693,"src":"4799:15:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4799:7:126","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60688,"mutability":"mutable","name":"witnessTypeString","nameLocation":"4840:17:126","nodeType":"VariableDeclaration","scope":60693,"src":"4824:33:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":60687,"name":"string","nodeType":"ElementaryTypeName","src":"4824:6:126","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":60690,"mutability":"mutable","name":"signature","nameLocation":"4882:9:126","nodeType":"VariableDeclaration","scope":60693,"src":"4867:24:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":60689,"name":"bytes","nodeType":"ElementaryTypeName","src":"4867:5:126","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4665:232:126"},"returnParameters":{"id":60692,"nodeType":"ParameterList","parameters":[],"src":"4906:0:126"},"scope":60736,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":60708,"nodeType":"FunctionDefinition","src":"5253:208:126","nodes":[],"documentation":{"id":60694,"nodeType":"StructuredDocumentation","src":"4913:335:126","text":"@notice Transfers multiple tokens using a signed permit message\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param signature The signature to verify"},"functionSelector":"edd9444b","implemented":false,"kind":"function","modifiers":[],"name":"permitTransferFrom","nameLocation":"5262:18:126","parameters":{"id":60706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60697,"mutability":"mutable","name":"permit","nameLocation":"5321:6:126","nodeType":"VariableDeclaration","scope":60708,"src":"5290:37:126","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$60651_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":60696,"nodeType":"UserDefinedTypeName","pathNode":{"id":60695,"name":"PermitBatchTransferFrom","nameLocations":["5290:23:126"],"nodeType":"IdentifierPath","referencedDeclaration":60651,"src":"5290:23:126"},"referencedDeclaration":60651,"src":"5290:23:126","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$60651_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"},{"constant":false,"id":60701,"mutability":"mutable","name":"transferDetails","nameLocation":"5373:15:126","nodeType":"VariableDeclaration","scope":60708,"src":"5337:51:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$60641_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"},"typeName":{"baseType":{"id":60699,"nodeType":"UserDefinedTypeName","pathNode":{"id":60698,"name":"SignatureTransferDetails","nameLocations":["5337:24:126"],"nodeType":"IdentifierPath","referencedDeclaration":60641,"src":"5337:24:126"},"referencedDeclaration":60641,"src":"5337:24:126","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$60641_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"id":60700,"nodeType":"ArrayTypeName","src":"5337:26:126","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$60641_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"}},"visibility":"internal"},{"constant":false,"id":60703,"mutability":"mutable","name":"owner","nameLocation":"5406:5:126","nodeType":"VariableDeclaration","scope":60708,"src":"5398:13:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60702,"name":"address","nodeType":"ElementaryTypeName","src":"5398:7:126","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60705,"mutability":"mutable","name":"signature","nameLocation":"5436:9:126","nodeType":"VariableDeclaration","scope":60708,"src":"5421:24:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":60704,"name":"bytes","nodeType":"ElementaryTypeName","src":"5421:5:126","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5280:171:126"},"returnParameters":{"id":60707,"nodeType":"ParameterList","parameters":[],"src":"5460:0:126"},"scope":60736,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":60727,"nodeType":"FunctionDefinition","src":"6209:283:126","nodes":[],"documentation":{"id":60709,"nodeType":"StructuredDocumentation","src":"5467:737:126","text":"@notice Transfers multiple tokens using a signed permit message\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @notice Includes extra data provided by the caller to verify signature over\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"},"functionSelector":"fe8ec1a7","implemented":false,"kind":"function","modifiers":[],"name":"permitWitnessTransferFrom","nameLocation":"6218:25:126","parameters":{"id":60725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60712,"mutability":"mutable","name":"permit","nameLocation":"6284:6:126","nodeType":"VariableDeclaration","scope":60727,"src":"6253:37:126","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$60651_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":60711,"nodeType":"UserDefinedTypeName","pathNode":{"id":60710,"name":"PermitBatchTransferFrom","nameLocations":["6253:23:126"],"nodeType":"IdentifierPath","referencedDeclaration":60651,"src":"6253:23:126"},"referencedDeclaration":60651,"src":"6253:23:126","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$60651_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"},{"constant":false,"id":60716,"mutability":"mutable","name":"transferDetails","nameLocation":"6336:15:126","nodeType":"VariableDeclaration","scope":60727,"src":"6300:51:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$60641_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"},"typeName":{"baseType":{"id":60714,"nodeType":"UserDefinedTypeName","pathNode":{"id":60713,"name":"SignatureTransferDetails","nameLocations":["6300:24:126"],"nodeType":"IdentifierPath","referencedDeclaration":60641,"src":"6300:24:126"},"referencedDeclaration":60641,"src":"6300:24:126","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$60641_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"id":60715,"nodeType":"ArrayTypeName","src":"6300:26:126","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$60641_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"}},"visibility":"internal"},{"constant":false,"id":60718,"mutability":"mutable","name":"owner","nameLocation":"6369:5:126","nodeType":"VariableDeclaration","scope":60727,"src":"6361:13:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60717,"name":"address","nodeType":"ElementaryTypeName","src":"6361:7:126","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60720,"mutability":"mutable","name":"witness","nameLocation":"6392:7:126","nodeType":"VariableDeclaration","scope":60727,"src":"6384:15:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6384:7:126","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60722,"mutability":"mutable","name":"witnessTypeString","nameLocation":"6425:17:126","nodeType":"VariableDeclaration","scope":60727,"src":"6409:33:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":60721,"name":"string","nodeType":"ElementaryTypeName","src":"6409:6:126","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":60724,"mutability":"mutable","name":"signature","nameLocation":"6467:9:126","nodeType":"VariableDeclaration","scope":60727,"src":"6452:24:126","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":60723,"name":"bytes","nodeType":"ElementaryTypeName","src":"6452:5:126","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6243:239:126"},"returnParameters":{"id":60726,"nodeType":"ParameterList","parameters":[],"src":"6491:0:126"},"scope":60736,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":60735,"nodeType":"FunctionDefinition","src":"6797:75:126","nodes":[],"documentation":{"id":60728,"nodeType":"StructuredDocumentation","src":"6498:294:126","text":"@notice Invalidates the bits specified in mask for the bitmap at the word position\n @dev The wordPos is maxed at type(uint248).max\n @param wordPos A number to index the nonceBitmap at\n @param mask A bitmap masked against msg.sender's current bitmap at the word position"},"functionSelector":"3ff9dcb1","implemented":false,"kind":"function","modifiers":[],"name":"invalidateUnorderedNonces","nameLocation":"6806:25:126","parameters":{"id":60733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60730,"mutability":"mutable","name":"wordPos","nameLocation":"6840:7:126","nodeType":"VariableDeclaration","scope":60735,"src":"6832:15:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60729,"name":"uint256","nodeType":"ElementaryTypeName","src":"6832:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60732,"mutability":"mutable","name":"mask","nameLocation":"6857:4:126","nodeType":"VariableDeclaration","scope":60735,"src":"6849:12:126","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60731,"name":"uint256","nodeType":"ElementaryTypeName","src":"6849:7:126","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6831:31:126"},"returnParameters":{"id":60734,"nodeType":"ParameterList","parameters":[],"src":"6871:0:126"},"scope":60736,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":60602,"name":"IEIP712","nameLocations":["296:7:126"],"nodeType":"IdentifierPath","referencedDeclaration":60584,"src":"296:7:126"},"id":60603,"nodeType":"InheritanceSpecifier","src":"296:7:126"}],"canonicalName":"ISignatureTransfer","contractDependencies":[],"contractKind":"interface","documentation":{"id":60601,"nodeType":"StructuredDocumentation","src":"97:167:126","text":"@title SignatureTransfer\n @notice Handles ERC20 token transfers through signature based actions\n @dev Requires user's token approval on the Permit2 contract"},"fullyImplemented":false,"linearizedBaseContracts":[60736,60584],"name":"ISignatureTransfer","nameLocation":"274:18:126","scope":60737,"usedErrors":[60608,60611],"usedEvents":[60620]}],"license":"MIT"},"id":126}