{"abi":[{"type":"function","name":"getHookFlags","inputs":[],"outputs":[{"name":"hookFlags","type":"tuple","internalType":"struct HookFlags","components":[{"name":"enableHookAdjustedAmounts","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallAfterInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallComputeDynamicSwapFee","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeSwap","type":"bool","internalType":"bool"},{"name":"shouldCallAfterSwap","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterRemoveLiquidity","type":"bool","internalType":"bool"}]}],"stateMutability":"pure"},{"type":"function","name":"onAfterAddLiquidity","inputs":[{"name":"router","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"kind","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"amountsInScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsInRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"bptAmountOut","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterInitialize","inputs":[{"name":"exactAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"bptAmountOut","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterRemoveLiquidity","inputs":[{"name":"router","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"kind","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"bptAmountIn","type":"uint256","internalType":"uint256"},{"name":"amountsOutScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsOutRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterSwap","inputs":[{"name":"params","type":"tuple","internalType":"struct AfterSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountInScaled18","type":"uint256","internalType":"uint256"},{"name":"amountOutScaled18","type":"uint256","internalType":"uint256"},{"name":"tokenInBalanceScaled18","type":"uint256","internalType":"uint256"},{"name":"tokenOutBalanceScaled18","type":"uint256","internalType":"uint256"},{"name":"amountCalculatedScaled18","type":"uint256","internalType":"uint256"},{"name":"amountCalculatedRaw","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeAddLiquidity","inputs":[{"name":"router","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"kind","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"maxAmountsInScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"minBptAmountOut","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeInitialize","inputs":[{"name":"exactAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeRemoveLiquidity","inputs":[{"name":"router","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"kind","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"maxBptAmountIn","type":"uint256","internalType":"uint256"},{"name":"minAmountsOutScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeSwap","inputs":[{"name":"params","type":"tuple","internalType":"struct PoolSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onComputeDynamicSwapFeePercentage","inputs":[{"name":"params","type":"tuple","internalType":"struct PoolSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"pool","type":"address","internalType":"address"},{"name":"staticSwapFeePercentage","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"onRegister","inputs":[{"name":"factory","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"tokenConfig","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"liquidityManagement","type":"tuple","internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x608060405234801561000f575f80fd5b50610b168061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100c4575f3560e01c806345421ec71161007d578063a0e8f5ac11610058578063a0e8f5ac146101a5578063ba5f9f40146101bd578063d77153a7146101cb575f80fd5b806345421ec71461016a5780635211fa7714610184578063976907cc14610192575f80fd5b80631c149e28116100ad5780631c149e28146101205780632754888d1461013357806338be241d14610154575f80fd5b80630b89f182146100c857806318b6eb55146100f4575b5f80fd5b6100df6100d6366004610343565b505f9392505050565b60405190151581526020015b60405180910390f35b61010961010236600461046f565b505f908190565b6040805192151583526020830191909152016100eb565b6100df61012e36600461057a565b610224565b6101466101413660046105e8565b61022e565b6040516100eb9291906106c8565b6100df610162366004610718565b505f92915050565b6100df61017836600461078e565b505f9695505050505050565b6100df61012e36600461085e565b6101466101a03660046108ad565b610245565b6101096101b336600461094f565b505f928392509050565b6100df6101783660046109a5565b60408051610140810182525f80825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082015290516100eb9190610a28565b5f805b9392505050565b5f606081855b915091509850989650505050505050565b5f60608186610234565b73ffffffffffffffffffffffffffffffffffffffff81168114610270575f80fd5b50565b803561027e8161024f565b919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040516080810167ffffffffffffffff811182821017156102d3576102d3610283565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561030257610302610283565b604052919050565b5f67ffffffffffffffff82111561032357610323610283565b5060051b60200190565b5f6080828403121561033d575f80fd5b50919050565b5f805f8060e08587031215610356575f80fd5b84356103618161024f565b93506020858101356103728161024f565b935060408681013567ffffffffffffffff81111561038e575f80fd5b8701601f8101891361039e575f80fd5b80356103b16103ac8261030a565b6102d9565b81815260079190911b8201840190848101908b8311156103cf575f80fd5b928501925b8284101561044e576080848d0312156103eb575f80fd5b6103f36102b0565b84356103fe8161024f565b81528487013560028110610410575f80fd5b81880152848601356104218161024f565b818701526060858101358015158114610438575f80fd5b90820152825260809390930192908501906103d4565b809750505050505050610464866060870161032d565b905092959194509250565b5f6020828403121561047f575f80fd5b813567ffffffffffffffff811115610495575f80fd5b82016101808185031215610227575f80fd5b5f82601f8301126104b6575f80fd5b813560206104c66103ac8361030a565b8083825260208201915060208460051b8701019350868411156104e7575f80fd5b602086015b8481101561050357803583529183019183016104ec565b509695505050505050565b5f82601f83011261051d575f80fd5b813567ffffffffffffffff81111561053757610537610283565b61054a601f8201601f19166020016102d9565b81815284602083860101111561055e575f80fd5b816020850160208301375f918101602001919091529392505050565b5f806040838503121561058b575f80fd5b823567ffffffffffffffff808211156105a2575f80fd5b6105ae868387016104a7565b935060208501359150808211156105c3575f80fd5b506105d08582860161050e565b9150509250929050565b80356004811061027e575f80fd5b5f805f805f805f80610100898b031215610600575f80fd5b61060989610273565b975061061760208a01610273565b965061062560408a016105da565b955060608901359450608089013567ffffffffffffffff80821115610648575f80fd5b6106548c838d016104a7565b955060a08b0135915080821115610669575f80fd5b6106758c838d016104a7565b945060c08b013591508082111561068a575f80fd5b6106968c838d016104a7565b935060e08b01359150808211156106ab575f80fd5b506106b88b828c0161050e565b9150509295985092959890939650565b5f6040820184151583526020604060208501528185518084526060860191506020870193505f5b8181101561070b578451835293830193918301916001016106ef565b5090979650505050505050565b5f805f6060848603121561072a575f80fd5b833567ffffffffffffffff80821115610741575f80fd5b61074d878388016104a7565b9450602086013593506040860135915080821115610769575f80fd5b506107768682870161050e565b9150509250925092565b80356005811061027e575f80fd5b5f805f805f805f60e0888a0312156107a4575f80fd5b87356107af8161024f565b965060208801356107bf8161024f565b95506107cd60408901610780565b9450606088013567ffffffffffffffff808211156107e9575f80fd5b6107f58b838c016104a7565b955060808a0135945060a08a0135915080821115610811575f80fd5b61081d8b838c016104a7565b935060c08a0135915080821115610832575f80fd5b5061083f8a828b0161050e565b91505092959891949750929550565b5f60e0828403121561033d575f80fd5b5f806040838503121561086f575f80fd5b823567ffffffffffffffff811115610885575f80fd5b6108918582860161084e565b92505060208301356108a28161024f565b809150509250929050565b5f805f805f805f80610100898b0312156108c5575f80fd5b6108ce89610273565b97506108dc60208a01610273565b96506108ea60408a01610780565b9550606089013567ffffffffffffffff80821115610906575f80fd5b6109128c838d016104a7565b965060808b0135915080821115610927575f80fd5b6109338c838d016104a7565b955060a08b0135945060c08b013591508082111561068a575f80fd5b5f805f60608486031215610961575f80fd5b833567ffffffffffffffff811115610977575f80fd5b6109838682870161084e565b93505060208401356109948161024f565b929592945050506040919091013590565b5f805f805f805f60e0888a0312156109bb575f80fd5b87356109c68161024f565b965060208801356109d68161024f565b95506109e4604089016105da565b945060608801359350608088013567ffffffffffffffff80821115610a07575f80fd5b610a138b838c016104a7565b945060a08a0135915080821115610811575f80fd5b81511515815261014081016020830151610a46602084018215159052565b506040830151610a5a604084018215159052565b506060830151610a6e606084018215159052565b506080830151610a82608084018215159052565b5060a0830151610a9660a084018215159052565b5060c0830151610aaa60c084018215159052565b5060e0830151610abe60e084018215159052565b506101008381015115159083015261012092830151151592909101919091529056fea2646970667358221220f6a93fd18aaf8f020abed2aac246dc2be559385fbf964053febc6766de418e0264736f6c63430008180033","sourceMap":"272:4377:104:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b50600436106100c4575f3560e01c806345421ec71161007d578063a0e8f5ac11610058578063a0e8f5ac146101a5578063ba5f9f40146101bd578063d77153a7146101cb575f80fd5b806345421ec71461016a5780635211fa7714610184578063976907cc14610192575f80fd5b80631c149e28116100ad5780631c149e28146101205780632754888d1461013357806338be241d14610154575f80fd5b80630b89f182146100c857806318b6eb55146100f4575b5f80fd5b6100df6100d6366004610343565b505f9392505050565b60405190151581526020015b60405180910390f35b61010961010236600461046f565b505f908190565b6040805192151583526020830191909152016100eb565b6100df61012e36600461057a565b610224565b6101466101413660046105e8565b61022e565b6040516100eb9291906106c8565b6100df610162366004610718565b505f92915050565b6100df61017836600461078e565b505f9695505050505050565b6100df61012e36600461085e565b6101466101a03660046108ad565b610245565b6101096101b336600461094f565b505f928392509050565b6100df6101783660046109a5565b60408051610140810182525f80825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082015290516100eb9190610a28565b5f805b9392505050565b5f606081855b915091509850989650505050505050565b5f60608186610234565b73ffffffffffffffffffffffffffffffffffffffff81168114610270575f80fd5b50565b803561027e8161024f565b919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040516080810167ffffffffffffffff811182821017156102d3576102d3610283565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561030257610302610283565b604052919050565b5f67ffffffffffffffff82111561032357610323610283565b5060051b60200190565b5f6080828403121561033d575f80fd5b50919050565b5f805f8060e08587031215610356575f80fd5b84356103618161024f565b93506020858101356103728161024f565b935060408681013567ffffffffffffffff81111561038e575f80fd5b8701601f8101891361039e575f80fd5b80356103b16103ac8261030a565b6102d9565b81815260079190911b8201840190848101908b8311156103cf575f80fd5b928501925b8284101561044e576080848d0312156103eb575f80fd5b6103f36102b0565b84356103fe8161024f565b81528487013560028110610410575f80fd5b81880152848601356104218161024f565b818701526060858101358015158114610438575f80fd5b90820152825260809390930192908501906103d4565b809750505050505050610464866060870161032d565b905092959194509250565b5f6020828403121561047f575f80fd5b813567ffffffffffffffff811115610495575f80fd5b82016101808185031215610227575f80fd5b5f82601f8301126104b6575f80fd5b813560206104c66103ac8361030a565b8083825260208201915060208460051b8701019350868411156104e7575f80fd5b602086015b8481101561050357803583529183019183016104ec565b509695505050505050565b5f82601f83011261051d575f80fd5b813567ffffffffffffffff81111561053757610537610283565b61054a601f8201601f19166020016102d9565b81815284602083860101111561055e575f80fd5b816020850160208301375f918101602001919091529392505050565b5f806040838503121561058b575f80fd5b823567ffffffffffffffff808211156105a2575f80fd5b6105ae868387016104a7565b935060208501359150808211156105c3575f80fd5b506105d08582860161050e565b9150509250929050565b80356004811061027e575f80fd5b5f805f805f805f80610100898b031215610600575f80fd5b61060989610273565b975061061760208a01610273565b965061062560408a016105da565b955060608901359450608089013567ffffffffffffffff80821115610648575f80fd5b6106548c838d016104a7565b955060a08b0135915080821115610669575f80fd5b6106758c838d016104a7565b945060c08b013591508082111561068a575f80fd5b6106968c838d016104a7565b935060e08b01359150808211156106ab575f80fd5b506106b88b828c0161050e565b9150509295985092959890939650565b5f6040820184151583526020604060208501528185518084526060860191506020870193505f5b8181101561070b578451835293830193918301916001016106ef565b5090979650505050505050565b5f805f6060848603121561072a575f80fd5b833567ffffffffffffffff80821115610741575f80fd5b61074d878388016104a7565b9450602086013593506040860135915080821115610769575f80fd5b506107768682870161050e565b9150509250925092565b80356005811061027e575f80fd5b5f805f805f805f60e0888a0312156107a4575f80fd5b87356107af8161024f565b965060208801356107bf8161024f565b95506107cd60408901610780565b9450606088013567ffffffffffffffff808211156107e9575f80fd5b6107f58b838c016104a7565b955060808a0135945060a08a0135915080821115610811575f80fd5b61081d8b838c016104a7565b935060c08a0135915080821115610832575f80fd5b5061083f8a828b0161050e565b91505092959891949750929550565b5f60e0828403121561033d575f80fd5b5f806040838503121561086f575f80fd5b823567ffffffffffffffff811115610885575f80fd5b6108918582860161084e565b92505060208301356108a28161024f565b809150509250929050565b5f805f805f805f80610100898b0312156108c5575f80fd5b6108ce89610273565b97506108dc60208a01610273565b96506108ea60408a01610780565b9550606089013567ffffffffffffffff80821115610906575f80fd5b6109128c838d016104a7565b965060808b0135915080821115610927575f80fd5b6109338c838d016104a7565b955060a08b0135945060c08b013591508082111561068a575f80fd5b5f805f60608486031215610961575f80fd5b833567ffffffffffffffff811115610977575f80fd5b6109838682870161084e565b93505060208401356109948161024f565b929592945050506040919091013590565b5f805f805f805f60e0888a0312156109bb575f80fd5b87356109c68161024f565b965060208801356109d68161024f565b95506109e4604089016105da565b945060608801359350608088013567ffffffffffffffff80821115610a07575f80fd5b610a138b838c016104a7565b945060a08a0135915080821115610811575f80fd5b81511515815261014081016020830151610a46602084018215159052565b506040830151610a5a604084018215159052565b506060830151610a6e606084018215159052565b506080830151610a82608084018215159052565b5060a0830151610a9660a084018215159052565b5060c0830151610aaa60c084018215159052565b5060e0830151610abe60e084018215159052565b506101008381015115159083015261012092830151151592909101919091529056fea2646970667358221220f6a93fd18aaf8f020abed2aac246dc2be559385fbf964053febc6766de418e0264736f6c63430008180033","sourceMap":"272:4377:104:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;341:293;;;;;;:::i;:::-;-1:-1:-1;539:4:104;;555:72;-1:-1:-1;;;341:293:104;;;;3790:14:227;;3783:22;3765:41;;3753:2;3738:18;341:293:104;;;;;;;;4172:143;;;;;;:::i;:::-;-1:-1:-1;4251:4:104;;;;4172:143;;;;;4410:14:227;;4403:22;4385:41;;4457:2;4442:18;;4435:34;;;;4358:18;4172:143:104;4217:258:227;886:189:104;;;;;;:::i;:::-;;:::i;3294:657::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1108:253::-;;;;;;:::i;:::-;-1:-1:-1;1268:4:104;;1284:70;-1:-1:-1;;1108:253:104;1394:573;;;;;;:::i;:::-;-1:-1:-1;1686:4:104;;1702:258;-1:-1:-1;;;;;;1394:573:104;3984:155;;;;;;:::i;2000:646::-;;;;;;:::i;:::-;;:::i;4348:299::-;;;;;;:::i;:::-;-1:-1:-1;4530:4:104;;;;-1:-1:-1;4348:299:104;-1:-1:-1;4348:299:104;2679:582;;;;;;:::i;667:186::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:186:104;;;;-1:-1:-1;667:186:104;:::i;886:189::-;995:4;;1018:50;1011:57;886:189;-1:-1:-1;;;886:189:104:o;3294:657::-;3625:4;3631:16;3625:4;3857:13;3678:266;3659:285;;;;3294:657;;;;;;;;;;;:::o;2000:646::-;2324:4;2330:16;2324:4;2523:12;2377:262;1805:318:81;14:154:227;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:134::-;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:184::-;364:77;361:1;354:88;461:4;458:1;451:15;485:4;482:1;475:15;501:253;573:2;567:9;615:4;603:17;;650:18;635:34;;671:22;;;632:62;629:88;;;697:18;;:::i;:::-;733:2;726:22;501:253;:::o;759:275::-;830:2;824:9;895:2;876:13;;-1:-1:-1;;872:27:227;860:40;;930:18;915:34;;951:22;;;912:62;909:88;;;977:18;;:::i;:::-;1013:2;1006:22;759:275;;-1:-1:-1;759:275:227:o;1039:194::-;1110:4;1143:18;1135:6;1132:30;1129:56;;;1165:18;;:::i;:::-;-1:-1:-1;1210:1:227;1206:14;1222:4;1202:25;;1039:194::o;1238:168::-;1310:5;1355:3;1346:6;1341:3;1337:16;1333:26;1330:46;;;1372:1;1369;1362:12;1330:46;-1:-1:-1;1394:6:227;1238:168;-1:-1:-1;1238:168:227:o;1411:2113::-;1590:6;1598;1606;1614;1667:3;1655:9;1646:7;1642:23;1638:33;1635:53;;;1684:1;1681;1674:12;1635:53;1723:9;1710:23;1742:31;1767:5;1742:31;:::i;:::-;1792:5;-1:-1:-1;1816:2:227;1855:18;;;1842:32;1883:33;1842:32;1883:33;:::i;:::-;1935:7;-1:-1:-1;1961:2:227;1999:18;;;1986:32;2041:18;2030:30;;2027:50;;;2073:1;2070;2063:12;2027:50;2096:22;;2149:4;2141:13;;2137:27;-1:-1:-1;2127:55:227;;2178:1;2175;2168:12;2127:55;2214:2;2201:16;2237:71;2253:54;2304:2;2253:54;:::i;:::-;2237:71;:::i;:::-;2342:15;;;2424:1;2420:10;;;;2412:19;;2408:28;;;2373:12;;;;2448:19;;;2445:39;;;2480:1;2477;2470:12;2445:39;2504:11;;;;2524:876;2540:6;2535:3;2532:15;2524:876;;;2622:4;2616:3;2607:7;2603:17;2599:28;2596:48;;;2640:1;2637;2630:12;2596:48;2672:22;;:::i;:::-;2735:3;2722:17;2752:33;2777:7;2752:33;:::i;:::-;2798:24;;2863:12;;;2850:26;2911:1;2899:14;;2889:42;;2927:1;2924;2917:12;2889:42;2951:16;;;2944:33;3018:12;;;3005:26;3044:33;3005:26;3044:33;:::i;:::-;3097:16;;;3090:33;3146:2;3189:12;;;3176:26;3244:15;;3237:23;3225:36;;3215:64;;3275:1;3272;3265:12;3215:64;3299:16;;;3292:33;3338:20;;2566:4;2557:14;;;;;3378:12;;;;2524:876;;;3419:5;3409:15;;;;;;;;3443:75;3510:7;3505:2;3494:9;3490:18;3443:75;:::i;:::-;3433:85;;1411:2113;;;;;;;:::o;3817:395::-;3911:6;3964:2;3952:9;3943:7;3939:23;3935:32;3932:52;;;3980:1;3977;3970:12;3932:52;4020:9;4007:23;4053:18;4045:6;4042:30;4039:50;;;4085:1;4082;4075:12;4039:50;4108:22;;4164:3;4146:16;;;4142:26;4139:46;;;4181:1;4178;4171:12;4480:679;4534:5;4587:3;4580:4;4572:6;4568:17;4564:27;4554:55;;4605:1;4602;4595:12;4554:55;4641:6;4628:20;4667:4;4691:71;4707:54;4758:2;4707:54;:::i;4691:71::-;4784:3;4808:2;4803:3;4796:15;4836:4;4831:3;4827:14;4820:21;;4893:4;4887:2;4884:1;4880:10;4872:6;4868:23;4864:34;4850:48;;4921:3;4913:6;4910:15;4907:35;;;4938:1;4935;4928:12;4907:35;4974:4;4966:6;4962:17;4988:142;5004:6;4999:3;4996:15;4988:142;;;5070:17;;5058:30;;5108:12;;;;5021;;4988:142;;;-1:-1:-1;5148:5:227;4480:679;-1:-1:-1;;;;;;4480:679:227:o;5164:530::-;5206:5;5259:3;5252:4;5244:6;5240:17;5236:27;5226:55;;5277:1;5274;5267:12;5226:55;5313:6;5300:20;5339:18;5335:2;5332:26;5329:52;;;5361:18;;:::i;:::-;5405:55;5448:2;5429:13;;-1:-1:-1;;5425:27:227;5454:4;5421:38;5405:55;:::i;:::-;5485:2;5476:7;5469:19;5531:3;5524:4;5519:2;5511:6;5507:15;5503:26;5500:35;5497:55;;;5548:1;5545;5538:12;5497:55;5613:2;5606:4;5598:6;5594:17;5587:4;5578:7;5574:18;5561:55;5661:1;5636:16;;;5654:4;5632:27;5625:38;;;;5640:7;5164:530;-1:-1:-1;;;5164:530:227:o;5699:567::-;5801:6;5809;5862:2;5850:9;5841:7;5837:23;5833:32;5830:52;;;5878:1;5875;5868:12;5830:52;5918:9;5905:23;5947:18;5988:2;5980:6;5977:14;5974:34;;;6004:1;6001;5994:12;5974:34;6027:61;6080:7;6071:6;6060:9;6056:22;6027:61;:::i;:::-;6017:71;;6141:2;6130:9;6126:18;6113:32;6097:48;;6170:2;6160:8;6157:16;6154:36;;;6186:1;6183;6176:12;6154:36;;6209:51;6252:7;6241:8;6230:9;6226:24;6209:51;:::i;:::-;6199:61;;;5699:567;;;;;:::o;6271:160::-;6356:20;;6405:1;6395:12;;6385:40;;6421:1;6418;6411:12;6436:1355;6666:6;6674;6682;6690;6698;6706;6714;6722;6775:3;6763:9;6754:7;6750:23;6746:33;6743:53;;;6792:1;6789;6782:12;6743:53;6815:29;6834:9;6815:29;:::i;:::-;6805:39;;6863:38;6897:2;6886:9;6882:18;6863:38;:::i;:::-;6853:48;;6920:55;6971:2;6960:9;6956:18;6920:55;:::i;:::-;6910:65;;7022:2;7011:9;7007:18;6994:32;6984:42;;7077:3;7066:9;7062:19;7049:33;7101:18;7142:2;7134:6;7131:14;7128:34;;;7158:1;7155;7148:12;7128:34;7181:61;7234:7;7225:6;7214:9;7210:22;7181:61;:::i;:::-;7171:71;;7295:3;7284:9;7280:19;7267:33;7251:49;;7325:2;7315:8;7312:16;7309:36;;;7341:1;7338;7331:12;7309:36;7364:63;7419:7;7408:8;7397:9;7393:24;7364:63;:::i;:::-;7354:73;;7480:3;7469:9;7465:19;7452:33;7436:49;;7510:2;7500:8;7497:16;7494:36;;;7526:1;7523;7516:12;7494:36;7549:63;7604:7;7593:8;7582:9;7578:24;7549:63;:::i;:::-;7539:73;;7665:3;7654:9;7650:19;7637:33;7621:49;;7695:2;7685:8;7682:16;7679:36;;;7711:1;7708;7701:12;7679:36;;7734:51;7777:7;7766:8;7755:9;7751:24;7734:51;:::i;:::-;7724:61;;;6436:1355;;;;;;;;;;;:::o;7796:713::-;7960:4;8008:2;7997:9;7993:18;8052:6;8045:14;8038:22;8027:9;8020:41;8080:2;8118;8113;8102:9;8098:18;8091:30;8141:6;8176;8170:13;8207:6;8199;8192:22;8245:2;8234:9;8230:18;8223:25;;8283:2;8275:6;8271:15;8257:29;;8304:1;8314:169;8328:6;8325:1;8322:13;8314:169;;;8389:13;;8377:26;;8458:15;;;;8423:12;;;;8350:1;8343:9;8314:169;;;-1:-1:-1;8500:3:227;;7796:713;-1:-1:-1;;;;;;;7796:713:227:o;8514:635::-;8625:6;8633;8641;8694:2;8682:9;8673:7;8669:23;8665:32;8662:52;;;8710:1;8707;8700:12;8662:52;8750:9;8737:23;8779:18;8820:2;8812:6;8809:14;8806:34;;;8836:1;8833;8826:12;8806:34;8859:61;8912:7;8903:6;8892:9;8888:22;8859:61;:::i;:::-;8849:71;;8967:2;8956:9;8952:18;8939:32;8929:42;;9024:2;9013:9;9009:18;8996:32;8980:48;;9053:2;9043:8;9040:16;9037:36;;;9069:1;9066;9059:12;9037:36;;9092:51;9135:7;9124:8;9113:9;9109:24;9092:51;:::i;:::-;9082:61;;;8514:635;;;;;:::o;9154:157::-;9236:20;;9285:1;9275:12;;9265:40;;9301:1;9298;9291:12;9316:1250;9509:6;9517;9525;9533;9541;9549;9557;9610:3;9598:9;9589:7;9585:23;9581:33;9578:53;;;9627:1;9624;9617:12;9578:53;9666:9;9653:23;9685:31;9710:5;9685:31;:::i;:::-;9735:5;-1:-1:-1;9792:2:227;9777:18;;9764:32;9805:33;9764:32;9805:33;:::i;:::-;9857:7;-1:-1:-1;9883:52:227;9931:2;9916:18;;9883:52;:::i;:::-;9873:62;;9986:2;9975:9;9971:18;9958:32;10009:18;10050:2;10042:6;10039:14;10036:34;;;10066:1;10063;10056:12;10036:34;10089:61;10142:7;10133:6;10122:9;10118:22;10089:61;:::i;:::-;10079:71;;10197:3;10186:9;10182:19;10169:33;10159:43;;10255:3;10244:9;10240:19;10227:33;10211:49;;10285:2;10275:8;10272:16;10269:36;;;10301:1;10298;10291:12;10269:36;10324:63;10379:7;10368:8;10357:9;10353:24;10324:63;:::i;:::-;10314:73;;10440:3;10429:9;10425:19;10412:33;10396:49;;10470:2;10460:8;10457:16;10454:36;;;10486:1;10483;10476:12;10454:36;;10509:51;10552:7;10541:8;10530:9;10526:24;10509:51;:::i;:::-;10499:61;;;9316:1250;;;;;;;;;;:::o;10571:163::-;10638:5;10683:3;10674:6;10669:3;10665:16;10661:26;10658:46;;;10700:1;10697;10690:12;10739:505;10841:6;10849;10902:2;10890:9;10881:7;10877:23;10873:32;10870:52;;;10918:1;10915;10908:12;10870:52;10958:9;10945:23;10991:18;10983:6;10980:30;10977:50;;;11023:1;11020;11013:12;10977:50;11046:74;11112:7;11103:6;11092:9;11088:22;11046:74;:::i;:::-;11036:84;;;11170:2;11159:9;11155:18;11142:32;11183:31;11208:5;11183:31;:::i;:::-;11233:5;11223:15;;;10739:505;;;;;:::o;11249:1349::-;11476:6;11484;11492;11500;11508;11516;11524;11532;11585:3;11573:9;11564:7;11560:23;11556:33;11553:53;;;11602:1;11599;11592:12;11553:53;11625:29;11644:9;11625:29;:::i;:::-;11615:39;;11673:38;11707:2;11696:9;11692:18;11673:38;:::i;:::-;11663:48;;11730:52;11778:2;11767:9;11763:18;11730:52;:::i;:::-;11720:62;;11833:2;11822:9;11818:18;11805:32;11856:18;11897:2;11889:6;11886:14;11883:34;;;11913:1;11910;11903:12;11883:34;11936:61;11989:7;11980:6;11969:9;11965:22;11936:61;:::i;:::-;11926:71;;12050:3;12039:9;12035:19;12022:33;12006:49;;12080:2;12070:8;12067:16;12064:36;;;12096:1;12093;12086:12;12064:36;12119:63;12174:7;12163:8;12152:9;12148:24;12119:63;:::i;:::-;12109:73;;12229:3;12218:9;12214:19;12201:33;12191:43;;12287:3;12276:9;12272:19;12259:33;12243:49;;12317:2;12307:8;12304:16;12301:36;;;12333:1;12330;12323:12;12603:573;12714:6;12722;12730;12783:2;12771:9;12762:7;12758:23;12754:32;12751:52;;;12799:1;12796;12789:12;12751:52;12839:9;12826:23;12872:18;12864:6;12861:30;12858:50;;;12904:1;12901;12894:12;12858:50;12927:74;12993:7;12984:6;12973:9;12969:22;12927:74;:::i;:::-;12917:84;;;13051:2;13040:9;13036:18;13023:32;13064:31;13089:5;13064:31;:::i;:::-;12603:573;;13114:5;;-1:-1:-1;;;13166:2:227;13151:18;;;;13138:32;;12603:573::o;13181:1256::-;13377:6;13385;13393;13401;13409;13417;13425;13478:3;13466:9;13457:7;13453:23;13449:33;13446:53;;;13495:1;13492;13485:12;13446:53;13534:9;13521:23;13553:31;13578:5;13553:31;:::i;:::-;13603:5;-1:-1:-1;13660:2:227;13645:18;;13632:32;13673:33;13632:32;13673:33;:::i;:::-;13725:7;-1:-1:-1;13751:55:227;13802:2;13787:18;;13751:55;:::i;:::-;13741:65;;13853:2;13842:9;13838:18;13825:32;13815:42;;13908:3;13897:9;13893:19;13880:33;13932:18;13973:2;13965:6;13962:14;13959:34;;;13989:1;13986;13979:12;13959:34;14012:61;14065:7;14056:6;14045:9;14041:22;14012:61;:::i;:::-;14002:71;;14126:3;14115:9;14111:19;14098:33;14082:49;;14156:2;14146:8;14143:16;14140:36;;;14172:1;14169;14162:12;14442:1339;14659:13;;3599;3592:21;3580:34;;14630:3;14615:19;;14731:4;14723:6;14719:17;14713:24;14746:51;14791:4;14780:9;14776:20;14762:12;3599:13;3592:21;3580:34;;3529:91;14746:51;;14846:4;14838:6;14834:17;14828:24;14861:53;14908:4;14897:9;14893:20;14877:14;3599:13;3592:21;3580:34;;3529:91;14861:53;;14963:4;14955:6;14951:17;14945:24;14978:53;15025:4;15014:9;15010:20;14994:14;3599:13;3592:21;3580:34;;3529:91;14978:53;;15080:4;15072:6;15068:17;15062:24;15095:53;15142:4;15131:9;15127:20;15111:14;3599:13;3592:21;3580:34;;3529:91;15095:53;;15197:4;15189:6;15185:17;15179:24;15212:53;15259:4;15248:9;15244:20;15228:14;3599:13;3592:21;3580:34;;3529:91;15212:53;;15314:4;15306:6;15302:17;15296:24;15329:53;15376:4;15365:9;15361:20;15345:14;3599:13;3592:21;3580:34;;3529:91;15329:53;;15431:4;15423:6;15419:17;15413:24;15446:53;15493:4;15482:9;15478:20;15462:14;3599:13;3592:21;3580:34;;3529:91;15446:53;-1:-1:-1;15518:6:227;15561:15;;;15555:22;3599:13;3592:21;15618:18;;;3580:34;15656:6;15699:15;;;15693:22;3599:13;3592:21;15756:18;;;;3580:34;;;;14442:1339;:::o","linkReferences":{}},"methodIdentifiers":{"getHookFlags()":"d77153a7","onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":"976907cc","onAfterInitialize(uint256[],uint256,bytes)":"38be241d","onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":"2754888d","onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":"18b6eb55","onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":"45421ec7","onBeforeInitialize(uint256[],bytes)":"1c149e28","onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":"ba5f9f40","onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":"5211fa77","onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":"a0e8f5ac","onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":"0b89f182"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getHookFlags\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"}],\"internalType\":\"struct HookFlags\",\"name\":\"hookFlags\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onAfterAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onAfterInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onAfterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AfterSwapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"onAfterSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsInScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onBeforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onBeforeInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOutScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onBeforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"onBeforeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"staticSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"onComputeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"onRegister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getHookFlags()\":{\"details\":\"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \\\"mandatory\\\" hook.\",\"returns\":{\"hookFlags\":\"Flags indicating which hooks the contract supports\"}},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsInRaw\":\"Actual amounts of tokens added, sorted in token registration order\",\"amountsInScaled18\":\"Actual amounts of tokens added, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountOut\":\"Amount of pool tokens minted\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsInRaw, potentially modified by the hook\"}},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"details\":\"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"bptAmountOut\":\"Amount of pool tokens minted during initialization\",\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool accepts the initialization results\"}},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsOutRaw\":\"Actual amount of tokens to receive, sorted in token registration order\",\"amountsOutScaled18\":\"Scaled amount of tokens to receive, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountIn\":\"Amount of pool tokens to burn\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsOutRaw, potentially modified by the hook\"}},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"details\":\"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see above for struct definition)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amount calculated, potentially modified by the hook\"}},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"maxAmountsInScaled18\":\"Maximum amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeInitialize(uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool wishes to proceed with initialization\"}},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"maxBptAmountIn\":\"Maximum amount of input pool tokens\",\"minAmountsOutScaled18\":\"Minimum output amounts, sorted in token registration order\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"details\":\"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the Vault (poolData, token config, etc.)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"details\":\"Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the Vault (poolData, token config, etc.)\",\"staticSwapFeePercentage\":\"18-decimal FP value of the static swap fee percentage, for reference\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"Value of the swap fee percentage, as an 18-decimal FP value\"}},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"details\":\"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.\",\"params\":{\"factory\":\"Address of the pool factory (contract deploying the pool)\",\"liquidityManagement\":\"Liquidity management flags indicating which functions are enabled\",\"pool\":\"Address of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"},\"returns\":{\"_0\":\"success True if the hook allowed the registration, false otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getHookFlags()\":{\"notice\":\"Return the set of hooks implemented by the contract.\"},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed after adding liquidity.\"},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"notice\":\"Hook to be executed after pool initialization.\"},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed after removing liquidity.\"},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"notice\":\"Called after a swap to perform further actions once the balances have been updated by the swap.\"},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed before adding liquidity.\"},\"onBeforeInitialize(uint256[],bytes)\":{\"notice\":\"Hook executed before pool initialization.\"},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed before removing liquidity.\"},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"notice\":\"Called before a swap to give the Pool an opportunity to perform actions.\"},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"notice\":\"Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees.\"},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"notice\":\"Hook executed when a pool is registered with a non-zero hooks contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer-v3-monorepo/pkg/vault/contracts/test/BaseHooksMock.sol\":\"BaseHooksMock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol\":{\"keccak256\":\"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452\",\"dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol\":{\"keccak256\":\"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f\",\"dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol\":{\"keccak256\":\"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3\",\"dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol\":{\"keccak256\":\"0xe987f0806641ac62fc66a6f3b0c6b58a44832c01a1c95f349eb880b00529756a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f8fc15c0fc44dd7032aa5ece3f281d1d83076719ef9b6f6442be79a62e2c1848\",\"dweb:/ipfs/QmVAZSVhzg6fb3ChkCeAPtLLwqnwmxdkxrenvJaf83trNC\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/test/BaseHooksMock.sol\":{\"keccak256\":\"0xdaaa79ac5bd3b5b3d4a265666bbbb85d99fd59b5c105cef637a06d748882a585\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c21dd79b3879804e420b6551a5de214e5a9a64ec08da751e7d5ef97a40270522\",\"dweb:/ipfs/QmUzQQNNi68WkPHR2VdZPCueco65EzCQ7EEZKFzL2MvcfU\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf\",\"dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"pure","type":"function","name":"getHookFlags","outputs":[{"internalType":"struct HookFlags","name":"hookFlags","type":"tuple","components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"}]}]},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"uint256[]","name":"amountsInScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsInRaw","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterAddLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterInitialize","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOutScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsOutRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterRemoveLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"struct AfterSwapParams","name":"params","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountInScaled18","type":"uint256"},{"internalType":"uint256","name":"amountOutScaled18","type":"uint256"},{"internalType":"uint256","name":"tokenInBalanceScaled18","type":"uint256"},{"internalType":"uint256","name":"tokenOutBalanceScaled18","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedScaled18","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"onAfterSwap","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"uint256[]","name":"maxAmountsInScaled18","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeAddLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeInitialize","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOutScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeRemoveLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct PoolSwapParams","name":"params","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeSwap","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct PoolSwapParams","name":"params","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"staticSwapFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function","name":"onComputeDynamicSwapFeePercentage","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"onRegister","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"getHookFlags()":{"details":"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \"mandatory\" hook.","returns":{"hookFlags":"Flags indicating which hooks the contract supports"}},"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":{"details":"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"amountsInRaw":"Actual amounts of tokens added, sorted in token registration order","amountsInScaled18":"Actual amounts of tokens added, sorted in token registration order","balancesScaled18":"Current pool balances, sorted in token registration order","bptAmountOut":"Amount of pool tokens minted","kind":"The type of add liquidity operation (e.g., proportional, custom)","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated an add liquidity operation on the Vault","userData":"Additional (optional) data provided by the user"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"New amountsInRaw, potentially modified by the hook"}},"onAfterInitialize(uint256[],uint256,bytes)":{"details":"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"bptAmountOut":"Amount of pool tokens minted during initialization","exactAmountsIn":"Exact amounts of input tokens","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"success True if the pool accepts the initialization results"}},"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":{"details":"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"amountsOutRaw":"Actual amount of tokens to receive, sorted in token registration order","amountsOutScaled18":"Scaled amount of tokens to receive, sorted in token registration order","balancesScaled18":"Current pool balances, sorted in token registration order","bptAmountIn":"Amount of pool tokens to burn","kind":"The type of remove liquidity operation (e.g., proportional, custom)","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated a remove liquidity operation on the Vault","userData":"Additional (optional) data provided by the user"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"New amountsOutRaw, potentially modified by the hook"}},"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":{"details":"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see above for struct definition)"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"New amount calculated, potentially modified by the hook"}},"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":{"details":"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"balancesScaled18":"Current pool balances, sorted in token registration order","kind":"The type of add liquidity operation (e.g., proportional, custom)","maxAmountsInScaled18":"Maximum amounts of input tokens","minBptAmountOut":"Minimum amount of output pool tokens","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated an add liquidity operation on the Vault","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onBeforeInitialize(uint256[],bytes)":{"details":"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"exactAmountsIn":"Exact amounts of input tokens","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"success True if the pool wishes to proceed with initialization"}},"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":{"details":"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"balancesScaled18":"Current pool balances, sorted in token registration order","kind":"The type of remove liquidity operation (e.g., proportional, custom)","maxBptAmountIn":"Maximum amount of input pool tokens","minAmountsOutScaled18":"Minimum output amounts, sorted in token registration order","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated a remove liquidity operation on the Vault","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":{"details":"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see PoolSwapParams for struct definition)","pool":"Pool address, used to get pool information from the Vault (poolData, token config, etc.)"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":{"details":"Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see PoolSwapParams for struct definition)","pool":"Pool address, used to get pool information from the Vault (poolData, token config, etc.)","staticSwapFeePercentage":"18-decimal FP value of the static swap fee percentage, for reference"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"Value of the swap fee percentage, as an 18-decimal FP value"}},"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":{"details":"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.","params":{"factory":"Address of the pool factory (contract deploying the pool)","liquidityManagement":"Liquidity management flags indicating which functions are enabled","pool":"Address of the pool","tokenConfig":"An array of descriptors for the tokens the pool will manage"},"returns":{"_0":"success True if the hook allowed the registration, false otherwise"}}},"version":1},"userdoc":{"kind":"user","methods":{"getHookFlags()":{"notice":"Return the set of hooks implemented by the contract."},"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":{"notice":"Hook to be executed after adding liquidity."},"onAfterInitialize(uint256[],uint256,bytes)":{"notice":"Hook to be executed after pool initialization."},"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":{"notice":"Hook to be executed after removing liquidity."},"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":{"notice":"Called after a swap to perform further actions once the balances have been updated by the swap."},"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":{"notice":"Hook to be executed before adding liquidity."},"onBeforeInitialize(uint256[],bytes)":{"notice":"Hook executed before pool initialization."},"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":{"notice":"Hook to be executed before removing liquidity."},"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":{"notice":"Called before a swap to give the Pool an opportunity to perform actions."},"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":{"notice":"Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees."},"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":{"notice":"Hook executed when a pool is registered with a non-zero hooks contract."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/balancer-v3-monorepo/pkg/vault/contracts/test/BaseHooksMock.sol":"BaseHooksMock"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol":{"keccak256":"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906","urls":["bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452","dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol":{"keccak256":"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638","urls":["bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f","dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol":{"keccak256":"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3","urls":["bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3","dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol":{"keccak256":"0xe987f0806641ac62fc66a6f3b0c6b58a44832c01a1c95f349eb880b00529756a","urls":["bzz-raw://f8fc15c0fc44dd7032aa5ece3f281d1d83076719ef9b6f6442be79a62e2c1848","dweb:/ipfs/QmVAZSVhzg6fb3ChkCeAPtLLwqnwmxdkxrenvJaf83trNC"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/test/BaseHooksMock.sol":{"keccak256":"0xdaaa79ac5bd3b5b3d4a265666bbbb85d99fd59b5c105cef637a06d748882a585","urls":["bzz-raw://c21dd79b3879804e420b6551a5de214e5a9a64ec08da751e7d5ef97a40270522","dweb:/ipfs/QmUzQQNNi68WkPHR2VdZPCueco65EzCQ7EEZKFzL2MvcfU"],"license":"GPL-3.0-or-later"},"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06","urls":["bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf","dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28","urls":["bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323","dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/balancer-v3-monorepo/pkg/vault/contracts/test/BaseHooksMock.sol","id":41390,"exportedSymbols":{"AddLiquidityKind":[8556],"AddLiquidityParams":[8572],"AfterSwapParams":[8550],"BaseHooks":[19204],"BaseHooksMock":[41389],"BufferWrapOrUnwrapParams":[8611],"FEE_BITLENGTH":[8614],"FEE_SCALING_FACTOR":[8620],"HookFlags":[8376],"HooksConfig":[8400],"IERC20":[97896],"IERC4626":[97037],"IHooks":[5517],"IRateProvider":[3802],"LiquidityManagement":[8329],"MAX_FEE_PERCENTAGE":[8617],"PoolConfig":[8354],"PoolConfigBits":[8331],"PoolData":[8478],"PoolRoleAccounts":[8426],"PoolSwapParams":[8521],"RemoveLiquidityKind":[8577],"RemoveLiquidityParams":[8593],"Rounding":[8481],"SwapKind":[8484],"SwapState":[8410],"TokenConfig":[8443],"TokenInfo":[8453],"TokenType":[8430],"VaultState":[8418],"VaultSwapParams":[8503],"WrappingDirection":[8596]},"nodeType":"SourceUnit","src":"46:4604:104","nodes":[{"id":41083,"nodeType":"PragmaDirective","src":"46:24:104","nodes":[],"literals":["solidity","^","0.8",".24"]},{"id":41085,"nodeType":"ImportDirective","src":"72:81:104","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/IHooks.sol","nameLocation":"-1:-1:-1","scope":41390,"sourceUnit":5518,"symbolAliases":[{"foreign":{"id":41084,"name":"IHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"81:6:104","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":41086,"nodeType":"ImportDirective","src":"154:69:104","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/VaultTypes.sol","nameLocation":"-1:-1:-1","scope":41390,"sourceUnit":8621,"symbolAliases":[],"unitAlias":""},{"id":41088,"nodeType":"ImportDirective","src":"225:45:104","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol","file":"../BaseHooks.sol","nameLocation":"-1:-1:-1","scope":41390,"sourceUnit":19205,"symbolAliases":[{"foreign":{"id":41087,"name":"BaseHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19204,"src":"234:9:104","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":41389,"nodeType":"ContractDefinition","src":"272:4377:104","nodes":[{"id":41117,"nodeType":"FunctionDefinition","src":"341:293:104","nodes":[],"body":{"id":41116,"nodeType":"Block","src":"545:89:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41110,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41093,"src":"579:7:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41111,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41095,"src":"588:4:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41112,"name":"tokenConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41099,"src":"594:11:104","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8443_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenConfig memory[] memory"}},{"id":41113,"name":"liquidityManagement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41102,"src":"607:19:104","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8329_calldata_ptr","typeString":"struct LiquidityManagement calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8443_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenConfig memory[] memory"},{"typeIdentifier":"t_struct$_LiquidityManagement_$8329_calldata_ptr","typeString":"struct LiquidityManagement calldata"}],"expression":{"id":41108,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"562:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"568:10:104","memberName":"onRegister","nodeType":"MemberAccess","referencedDeclaration":18996,"src":"562:16:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_TokenConfig_$8443_memory_ptr_$dyn_memory_ptr_$_t_struct$_LiquidityManagement_$8329_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,address,struct TokenConfig memory[] memory,struct LiquidityManagement calldata) returns (bool)"}},"id":41114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"562:65:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41107,"id":41115,"nodeType":"Return","src":"555:72:104"}]},"baseFunctions":[18996],"documentation":{"id":41091,"nodeType":"StructuredDocumentation","src":"314:22:104","text":"@inheritdoc IHooks"},"functionSelector":"0b89f182","implemented":true,"kind":"function","modifiers":[],"name":"onRegister","nameLocation":"350:10:104","overrides":{"id":41104,"nodeType":"OverrideSpecifier","overrides":[],"src":"521:8:104"},"parameters":{"id":41103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41093,"mutability":"mutable","name":"factory","nameLocation":"378:7:104","nodeType":"VariableDeclaration","scope":41117,"src":"370:15:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41092,"name":"address","nodeType":"ElementaryTypeName","src":"370:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41095,"mutability":"mutable","name":"pool","nameLocation":"403:4:104","nodeType":"VariableDeclaration","scope":41117,"src":"395:12:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41094,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41099,"mutability":"mutable","name":"tokenConfig","nameLocation":"438:11:104","nodeType":"VariableDeclaration","scope":41117,"src":"417:32:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8443_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenConfig[]"},"typeName":{"baseType":{"id":41097,"nodeType":"UserDefinedTypeName","pathNode":{"id":41096,"name":"TokenConfig","nameLocations":["417:11:104"],"nodeType":"IdentifierPath","referencedDeclaration":8443,"src":"417:11:104"},"referencedDeclaration":8443,"src":"417:11:104","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfig_$8443_storage_ptr","typeString":"struct TokenConfig"}},"id":41098,"nodeType":"ArrayTypeName","src":"417:13:104","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8443_storage_$dyn_storage_ptr","typeString":"struct TokenConfig[]"}},"visibility":"internal"},{"constant":false,"id":41102,"mutability":"mutable","name":"liquidityManagement","nameLocation":"488:19:104","nodeType":"VariableDeclaration","scope":41117,"src":"459:48:104","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8329_calldata_ptr","typeString":"struct LiquidityManagement"},"typeName":{"id":41101,"nodeType":"UserDefinedTypeName","pathNode":{"id":41100,"name":"LiquidityManagement","nameLocations":["459:19:104"],"nodeType":"IdentifierPath","referencedDeclaration":8329,"src":"459:19:104"},"referencedDeclaration":8329,"src":"459:19:104","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8329_storage_ptr","typeString":"struct LiquidityManagement"}},"visibility":"internal"}],"src":"360:153:104"},"returnParameters":{"id":41107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41117,"src":"539:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41105,"name":"bool","nodeType":"ElementaryTypeName","src":"539:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"538:6:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41128,"nodeType":"FunctionDefinition","src":"667:186:104","nodes":[],"body":{"id":41127,"nodeType":"Block","src":"749:104:104","nodes":[],"statements":[{"expression":{"id":41125,"name":"hookFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41123,"src":"837:9:104","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$8376_memory_ptr","typeString":"struct HookFlags memory"}},"functionReturnParameters":41124,"id":41126,"nodeType":"Return","src":"830:16:104"}]},"baseFunctions":[19003],"documentation":{"id":41118,"nodeType":"StructuredDocumentation","src":"640:22:104","text":"@inheritdoc IHooks"},"functionSelector":"d77153a7","implemented":true,"kind":"function","modifiers":[],"name":"getHookFlags","nameLocation":"676:12:104","overrides":{"id":41120,"nodeType":"OverrideSpecifier","overrides":[],"src":"703:8:104"},"parameters":{"id":41119,"nodeType":"ParameterList","parameters":[],"src":"688:2:104"},"returnParameters":{"id":41124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41123,"mutability":"mutable","name":"hookFlags","nameLocation":"738:9:104","nodeType":"VariableDeclaration","scope":41128,"src":"721:26:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$8376_memory_ptr","typeString":"struct HookFlags"},"typeName":{"id":41122,"nodeType":"UserDefinedTypeName","pathNode":{"id":41121,"name":"HookFlags","nameLocations":["721:9:104"],"nodeType":"IdentifierPath","referencedDeclaration":8376,"src":"721:9:104"},"referencedDeclaration":8376,"src":"721:9:104","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$8376_storage_ptr","typeString":"struct HookFlags"}},"visibility":"internal"}],"src":"720:28:104"},"scope":41389,"stateMutability":"pure","virtual":false,"visibility":"public"},{"id":41147,"nodeType":"FunctionDefinition","src":"886:189:104","nodes":[],"body":{"id":41146,"nodeType":"Block","src":"1001:74:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41142,"name":"exactAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41132,"src":"1043:14:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41143,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41134,"src":"1059:8:104","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":41140,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1018:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1024:18:104","memberName":"onBeforeInitialize","nodeType":"MemberAccess","referencedDeclaration":19017,"src":"1018:24:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[] memory,bytes memory) returns (bool)"}},"id":41144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1018:50:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41139,"id":41145,"nodeType":"Return","src":"1011:57:104"}]},"baseFunctions":[19017],"documentation":{"id":41129,"nodeType":"StructuredDocumentation","src":"859:22:104","text":"@inheritdoc IHooks"},"functionSelector":"1c149e28","implemented":true,"kind":"function","modifiers":[],"name":"onBeforeInitialize","nameLocation":"895:18:104","overrides":{"id":41136,"nodeType":"OverrideSpecifier","overrides":[],"src":"977:8:104"},"parameters":{"id":41135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41132,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"931:14:104","nodeType":"VariableDeclaration","scope":41147,"src":"914:31:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41130,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41131,"nodeType":"ArrayTypeName","src":"914:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41134,"mutability":"mutable","name":"userData","nameLocation":"960:8:104","nodeType":"VariableDeclaration","scope":41147,"src":"947:21:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41133,"name":"bytes","nodeType":"ElementaryTypeName","src":"947:5:104","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"913:56:104"},"returnParameters":{"id":41139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41147,"src":"995:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41137,"name":"bool","nodeType":"ElementaryTypeName","src":"995:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"994:6:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41169,"nodeType":"FunctionDefinition","src":"1108:253:104","nodes":[],"body":{"id":41168,"nodeType":"Block","src":"1274:87:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41163,"name":"exactAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41151,"src":"1315:14:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41164,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41153,"src":"1331:12:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":41165,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41155,"src":"1345:8:104","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":41161,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1291:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1297:17:104","memberName":"onAfterInitialize","nodeType":"MemberAccess","referencedDeclaration":19033,"src":"1291:23:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[] memory,uint256,bytes memory) returns (bool)"}},"id":41166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:63:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41160,"id":41167,"nodeType":"Return","src":"1284:70:104"}]},"baseFunctions":[19033],"documentation":{"id":41148,"nodeType":"StructuredDocumentation","src":"1081:22:104","text":"@inheritdoc IHooks"},"functionSelector":"38be241d","implemented":true,"kind":"function","modifiers":[],"name":"onAfterInitialize","nameLocation":"1117:17:104","overrides":{"id":41157,"nodeType":"OverrideSpecifier","overrides":[],"src":"1250:8:104"},"parameters":{"id":41156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41151,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"1161:14:104","nodeType":"VariableDeclaration","scope":41169,"src":"1144:31:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41150,"nodeType":"ArrayTypeName","src":"1144:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41153,"mutability":"mutable","name":"bptAmountOut","nameLocation":"1193:12:104","nodeType":"VariableDeclaration","scope":41169,"src":"1185:20:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41155,"mutability":"mutable","name":"userData","nameLocation":"1228:8:104","nodeType":"VariableDeclaration","scope":41169,"src":"1215:21:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41154,"name":"bytes","nodeType":"ElementaryTypeName","src":"1215:5:104","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1134:108:104"},"returnParameters":{"id":41160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41169,"src":"1268:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41158,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41205,"nodeType":"FunctionDefinition","src":"1394:573:104","nodes":[],"body":{"id":41204,"nodeType":"Block","src":"1692:275:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41195,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41172,"src":"1765:6:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41196,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41174,"src":"1789:4:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41197,"name":"kind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41177,"src":"1811:4:104","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8556","typeString":"enum AddLiquidityKind"}},{"id":41198,"name":"maxAmountsInScaled18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41180,"src":"1833:20:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41199,"name":"minBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41182,"src":"1871:15:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":41200,"name":"balancesScaled18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41185,"src":"1904:16:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41201,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41187,"src":"1938:8:104","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8556","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":41193,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1721:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1727:20:104","memberName":"onBeforeAddLiquidity","nodeType":"MemberAccess","referencedDeclaration":19059,"src":"1721:26:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_AddLiquidityKind_$8556_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,enum AddLiquidityKind,uint256[] memory,uint256,uint256[] memory,bytes memory) returns (bool)"}},"id":41202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:239:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41192,"id":41203,"nodeType":"Return","src":"1702:258:104"}]},"baseFunctions":[19059],"documentation":{"id":41170,"nodeType":"StructuredDocumentation","src":"1367:22:104","text":"@inheritdoc IHooks"},"functionSelector":"45421ec7","implemented":true,"kind":"function","modifiers":[],"name":"onBeforeAddLiquidity","nameLocation":"1403:20:104","overrides":{"id":41189,"nodeType":"OverrideSpecifier","overrides":[],"src":"1668:8:104"},"parameters":{"id":41188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41172,"mutability":"mutable","name":"router","nameLocation":"1441:6:104","nodeType":"VariableDeclaration","scope":41205,"src":"1433:14:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41171,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41174,"mutability":"mutable","name":"pool","nameLocation":"1465:4:104","nodeType":"VariableDeclaration","scope":41205,"src":"1457:12:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41173,"name":"address","nodeType":"ElementaryTypeName","src":"1457:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41177,"mutability":"mutable","name":"kind","nameLocation":"1496:4:104","nodeType":"VariableDeclaration","scope":41205,"src":"1479:21:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8556","typeString":"enum AddLiquidityKind"},"typeName":{"id":41176,"nodeType":"UserDefinedTypeName","pathNode":{"id":41175,"name":"AddLiquidityKind","nameLocations":["1479:16:104"],"nodeType":"IdentifierPath","referencedDeclaration":8556,"src":"1479:16:104"},"referencedDeclaration":8556,"src":"1479:16:104","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8556","typeString":"enum AddLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":41180,"mutability":"mutable","name":"maxAmountsInScaled18","nameLocation":"1527:20:104","nodeType":"VariableDeclaration","scope":41205,"src":"1510:37:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41179,"nodeType":"ArrayTypeName","src":"1510:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41182,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"1565:15:104","nodeType":"VariableDeclaration","scope":41205,"src":"1557:23:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1557:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41185,"mutability":"mutable","name":"balancesScaled18","nameLocation":"1607:16:104","nodeType":"VariableDeclaration","scope":41205,"src":"1590:33:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1590:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41184,"nodeType":"ArrayTypeName","src":"1590:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41187,"mutability":"mutable","name":"userData","nameLocation":"1646:8:104","nodeType":"VariableDeclaration","scope":41205,"src":"1633:21:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41186,"name":"bytes","nodeType":"ElementaryTypeName","src":"1633:5:104","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1423:237:104"},"returnParameters":{"id":41192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41205,"src":"1686:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41190,"name":"bool","nodeType":"ElementaryTypeName","src":"1686:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1685:6:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41248,"nodeType":"FunctionDefinition","src":"2000:646:104","nodes":[],"body":{"id":41247,"nodeType":"Block","src":"2348:298:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41237,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41208,"src":"2420:6:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41238,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41210,"src":"2444:4:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41239,"name":"kind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41213,"src":"2466:4:104","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8556","typeString":"enum AddLiquidityKind"}},{"id":41240,"name":"amountsInScaled18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41216,"src":"2488:17:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41241,"name":"amountsInRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41219,"src":"2523:12:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41242,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41221,"src":"2553:12:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":41243,"name":"balancesScaled18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41224,"src":"2583:16:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41244,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41226,"src":"2617:8:104","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8556","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":41235,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2377:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2383:19:104","memberName":"onAfterAddLiquidity","nodeType":"MemberAccess","referencedDeclaration":19093,"src":"2377:25:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_AddLiquidityKind_$8556_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,address,enum AddLiquidityKind,uint256[] memory,uint256[] memory,uint256,uint256[] memory,bytes memory) returns (bool,uint256[] memory)"}},"id":41245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2377:262:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool,uint256[] memory)"}},"functionReturnParameters":41234,"id":41246,"nodeType":"Return","src":"2358:281:104"}]},"baseFunctions":[19093],"documentation":{"id":41206,"nodeType":"StructuredDocumentation","src":"1973:22:104","text":"@inheritdoc IHooks"},"functionSelector":"976907cc","implemented":true,"kind":"function","modifiers":[],"name":"onAfterAddLiquidity","nameLocation":"2009:19:104","overrides":{"id":41228,"nodeType":"OverrideSpecifier","overrides":[],"src":"2306:8:104"},"parameters":{"id":41227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41208,"mutability":"mutable","name":"router","nameLocation":"2046:6:104","nodeType":"VariableDeclaration","scope":41248,"src":"2038:14:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41207,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41210,"mutability":"mutable","name":"pool","nameLocation":"2070:4:104","nodeType":"VariableDeclaration","scope":41248,"src":"2062:12:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41209,"name":"address","nodeType":"ElementaryTypeName","src":"2062:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41213,"mutability":"mutable","name":"kind","nameLocation":"2101:4:104","nodeType":"VariableDeclaration","scope":41248,"src":"2084:21:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8556","typeString":"enum AddLiquidityKind"},"typeName":{"id":41212,"nodeType":"UserDefinedTypeName","pathNode":{"id":41211,"name":"AddLiquidityKind","nameLocations":["2084:16:104"],"nodeType":"IdentifierPath","referencedDeclaration":8556,"src":"2084:16:104"},"referencedDeclaration":8556,"src":"2084:16:104","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8556","typeString":"enum AddLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":41216,"mutability":"mutable","name":"amountsInScaled18","nameLocation":"2132:17:104","nodeType":"VariableDeclaration","scope":41248,"src":"2115:34:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41215,"nodeType":"ArrayTypeName","src":"2115:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41219,"mutability":"mutable","name":"amountsInRaw","nameLocation":"2176:12:104","nodeType":"VariableDeclaration","scope":41248,"src":"2159:29:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2159:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41218,"nodeType":"ArrayTypeName","src":"2159:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41221,"mutability":"mutable","name":"bptAmountOut","nameLocation":"2206:12:104","nodeType":"VariableDeclaration","scope":41248,"src":"2198:20:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41220,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41224,"mutability":"mutable","name":"balancesScaled18","nameLocation":"2245:16:104","nodeType":"VariableDeclaration","scope":41248,"src":"2228:33:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2228:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41223,"nodeType":"ArrayTypeName","src":"2228:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41226,"mutability":"mutable","name":"userData","nameLocation":"2284:8:104","nodeType":"VariableDeclaration","scope":41248,"src":"2271:21:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41225,"name":"bytes","nodeType":"ElementaryTypeName","src":"2271:5:104","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2028:270:104"},"returnParameters":{"id":41234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41248,"src":"2324:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41229,"name":"bool","nodeType":"ElementaryTypeName","src":"2324:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41248,"src":"2330:16:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41232,"nodeType":"ArrayTypeName","src":"2330:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2323:24:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41284,"nodeType":"FunctionDefinition","src":"2679:582:104","nodes":[],"body":{"id":41283,"nodeType":"Block","src":"2983:278:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41274,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41251,"src":"3059:6:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41275,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41253,"src":"3083:4:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41276,"name":"kind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41256,"src":"3105:4:104","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8577","typeString":"enum RemoveLiquidityKind"}},{"id":41277,"name":"maxBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41258,"src":"3127:14:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":41278,"name":"minAmountsOutScaled18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41261,"src":"3159:21:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41279,"name":"balancesScaled18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41264,"src":"3198:16:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41280,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41266,"src":"3232:8:104","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8577","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":41272,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3012:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:23:104","memberName":"onBeforeRemoveLiquidity","nodeType":"MemberAccess","referencedDeclaration":19119,"src":"3012:29:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_RemoveLiquidityKind_$8577_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,enum RemoveLiquidityKind,uint256,uint256[] memory,uint256[] memory,bytes memory) returns (bool)"}},"id":41281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:242:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41271,"id":41282,"nodeType":"Return","src":"2993:261:104"}]},"baseFunctions":[19119],"documentation":{"id":41249,"nodeType":"StructuredDocumentation","src":"2652:22:104","text":"@inheritdoc IHooks"},"functionSelector":"ba5f9f40","implemented":true,"kind":"function","modifiers":[],"name":"onBeforeRemoveLiquidity","nameLocation":"2688:23:104","overrides":{"id":41268,"nodeType":"OverrideSpecifier","overrides":[],"src":"2959:8:104"},"parameters":{"id":41267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41251,"mutability":"mutable","name":"router","nameLocation":"2729:6:104","nodeType":"VariableDeclaration","scope":41284,"src":"2721:14:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41250,"name":"address","nodeType":"ElementaryTypeName","src":"2721:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41253,"mutability":"mutable","name":"pool","nameLocation":"2753:4:104","nodeType":"VariableDeclaration","scope":41284,"src":"2745:12:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41252,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41256,"mutability":"mutable","name":"kind","nameLocation":"2787:4:104","nodeType":"VariableDeclaration","scope":41284,"src":"2767:24:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8577","typeString":"enum RemoveLiquidityKind"},"typeName":{"id":41255,"nodeType":"UserDefinedTypeName","pathNode":{"id":41254,"name":"RemoveLiquidityKind","nameLocations":["2767:19:104"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"2767:19:104"},"referencedDeclaration":8577,"src":"2767:19:104","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8577","typeString":"enum RemoveLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":41258,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"2809:14:104","nodeType":"VariableDeclaration","scope":41284,"src":"2801:22:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2801:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41261,"mutability":"mutable","name":"minAmountsOutScaled18","nameLocation":"2850:21:104","nodeType":"VariableDeclaration","scope":41284,"src":"2833:38:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2833:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41260,"nodeType":"ArrayTypeName","src":"2833:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41264,"mutability":"mutable","name":"balancesScaled18","nameLocation":"2898:16:104","nodeType":"VariableDeclaration","scope":41284,"src":"2881:33:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2881:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41263,"nodeType":"ArrayTypeName","src":"2881:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41266,"mutability":"mutable","name":"userData","nameLocation":"2937:8:104","nodeType":"VariableDeclaration","scope":41284,"src":"2924:21:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41265,"name":"bytes","nodeType":"ElementaryTypeName","src":"2924:5:104","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2711:240:104"},"returnParameters":{"id":41271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41284,"src":"2977:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41269,"name":"bool","nodeType":"ElementaryTypeName","src":"2977:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2976:6:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41327,"nodeType":"FunctionDefinition","src":"3294:657:104","nodes":[],"body":{"id":41326,"nodeType":"Block","src":"3649:302:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41316,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41287,"src":"3724:6:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41317,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41289,"src":"3748:4:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41318,"name":"kind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41292,"src":"3770:4:104","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8577","typeString":"enum RemoveLiquidityKind"}},{"id":41319,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41294,"src":"3792:11:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":41320,"name":"amountsOutScaled18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41297,"src":"3821:18:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41321,"name":"amountsOutRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41300,"src":"3857:13:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41322,"name":"balancesScaled18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41303,"src":"3888:16:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":41323,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41305,"src":"3922:8:104","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8577","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":41314,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3678:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3684:22:104","memberName":"onAfterRemoveLiquidity","nodeType":"MemberAccess","referencedDeclaration":19153,"src":"3678:28:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_RemoveLiquidityKind_$8577_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,address,enum RemoveLiquidityKind,uint256,uint256[] memory,uint256[] memory,uint256[] memory,bytes memory) returns (bool,uint256[] memory)"}},"id":41324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3678:266:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool,uint256[] memory)"}},"functionReturnParameters":41313,"id":41325,"nodeType":"Return","src":"3659:285:104"}]},"baseFunctions":[19153],"documentation":{"id":41285,"nodeType":"StructuredDocumentation","src":"3267:22:104","text":"@inheritdoc IHooks"},"functionSelector":"2754888d","implemented":true,"kind":"function","modifiers":[],"name":"onAfterRemoveLiquidity","nameLocation":"3303:22:104","overrides":{"id":41307,"nodeType":"OverrideSpecifier","overrides":[],"src":"3607:8:104"},"parameters":{"id":41306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41287,"mutability":"mutable","name":"router","nameLocation":"3343:6:104","nodeType":"VariableDeclaration","scope":41327,"src":"3335:14:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41286,"name":"address","nodeType":"ElementaryTypeName","src":"3335:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41289,"mutability":"mutable","name":"pool","nameLocation":"3367:4:104","nodeType":"VariableDeclaration","scope":41327,"src":"3359:12:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41288,"name":"address","nodeType":"ElementaryTypeName","src":"3359:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41292,"mutability":"mutable","name":"kind","nameLocation":"3401:4:104","nodeType":"VariableDeclaration","scope":41327,"src":"3381:24:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8577","typeString":"enum RemoveLiquidityKind"},"typeName":{"id":41291,"nodeType":"UserDefinedTypeName","pathNode":{"id":41290,"name":"RemoveLiquidityKind","nameLocations":["3381:19:104"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"3381:19:104"},"referencedDeclaration":8577,"src":"3381:19:104","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8577","typeString":"enum RemoveLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":41294,"mutability":"mutable","name":"bptAmountIn","nameLocation":"3423:11:104","nodeType":"VariableDeclaration","scope":41327,"src":"3415:19:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3415:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41297,"mutability":"mutable","name":"amountsOutScaled18","nameLocation":"3461:18:104","nodeType":"VariableDeclaration","scope":41327,"src":"3444:35:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41296,"nodeType":"ArrayTypeName","src":"3444:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41300,"mutability":"mutable","name":"amountsOutRaw","nameLocation":"3506:13:104","nodeType":"VariableDeclaration","scope":41327,"src":"3489:30:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41298,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41299,"nodeType":"ArrayTypeName","src":"3489:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41303,"mutability":"mutable","name":"balancesScaled18","nameLocation":"3546:16:104","nodeType":"VariableDeclaration","scope":41327,"src":"3529:33:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3529:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41302,"nodeType":"ArrayTypeName","src":"3529:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":41305,"mutability":"mutable","name":"userData","nameLocation":"3585:8:104","nodeType":"VariableDeclaration","scope":41327,"src":"3572:21:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41304,"name":"bytes","nodeType":"ElementaryTypeName","src":"3572:5:104","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3325:274:104"},"returnParameters":{"id":41313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41327,"src":"3625:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41308,"name":"bool","nodeType":"ElementaryTypeName","src":"3625:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41327,"src":"3631:16:104","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":41310,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41311,"nodeType":"ArrayTypeName","src":"3631:9:104","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3624:24:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41346,"nodeType":"FunctionDefinition","src":"3984:155:104","nodes":[],"body":{"id":41345,"nodeType":"Block","src":"4083:56:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41341,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41331,"src":"4119:6:104","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8521_calldata_ptr","typeString":"struct PoolSwapParams calldata"}},{"id":41342,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41333,"src":"4127:4:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolSwapParams_$8521_calldata_ptr","typeString":"struct PoolSwapParams calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":41339,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4100:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4106:12:104","memberName":"onBeforeSwap","nodeType":"MemberAccess","referencedDeclaration":19167,"src":"4100:18:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PoolSwapParams_$8521_calldata_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct PoolSwapParams calldata,address) returns (bool)"}},"id":41343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:32:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41338,"id":41344,"nodeType":"Return","src":"4093:39:104"}]},"baseFunctions":[19167],"documentation":{"id":41328,"nodeType":"StructuredDocumentation","src":"3957:22:104","text":"@inheritdoc IHooks"},"functionSelector":"5211fa77","implemented":true,"kind":"function","modifiers":[],"name":"onBeforeSwap","nameLocation":"3993:12:104","overrides":{"id":41335,"nodeType":"OverrideSpecifier","overrides":[],"src":"4059:8:104"},"parameters":{"id":41334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41331,"mutability":"mutable","name":"params","nameLocation":"4030:6:104","nodeType":"VariableDeclaration","scope":41346,"src":"4006:30:104","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8521_calldata_ptr","typeString":"struct PoolSwapParams"},"typeName":{"id":41330,"nodeType":"UserDefinedTypeName","pathNode":{"id":41329,"name":"PoolSwapParams","nameLocations":["4006:14:104"],"nodeType":"IdentifierPath","referencedDeclaration":8521,"src":"4006:14:104"},"referencedDeclaration":8521,"src":"4006:14:104","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8521_storage_ptr","typeString":"struct PoolSwapParams"}},"visibility":"internal"},{"constant":false,"id":41333,"mutability":"mutable","name":"pool","nameLocation":"4046:4:104","nodeType":"VariableDeclaration","scope":41346,"src":"4038:12:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41332,"name":"address","nodeType":"ElementaryTypeName","src":"4038:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:46:104"},"returnParameters":{"id":41338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41346,"src":"4077:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41336,"name":"bool","nodeType":"ElementaryTypeName","src":"4077:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4076:6:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41364,"nodeType":"FunctionDefinition","src":"4172:143:104","nodes":[],"body":{"id":41363,"nodeType":"Block","src":"4266:49:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41360,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41350,"src":"4301:6:104","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$8550_calldata_ptr","typeString":"struct AfterSwapParams calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AfterSwapParams_$8550_calldata_ptr","typeString":"struct AfterSwapParams calldata"}],"expression":{"id":41358,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4283:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4289:11:104","memberName":"onAfterSwap","nodeType":"MemberAccess","referencedDeclaration":19183,"src":"4283:17:104","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AfterSwapParams_$8550_calldata_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (struct AfterSwapParams calldata) returns (bool,uint256)"}},"id":41361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:25:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":41357,"id":41362,"nodeType":"Return","src":"4276:32:104"}]},"baseFunctions":[19183],"documentation":{"id":41347,"nodeType":"StructuredDocumentation","src":"4145:22:104","text":"@inheritdoc IHooks"},"functionSelector":"18b6eb55","implemented":true,"kind":"function","modifiers":[],"name":"onAfterSwap","nameLocation":"4181:11:104","overrides":{"id":41352,"nodeType":"OverrideSpecifier","overrides":[],"src":"4233:8:104"},"parameters":{"id":41351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41350,"mutability":"mutable","name":"params","nameLocation":"4218:6:104","nodeType":"VariableDeclaration","scope":41364,"src":"4193:31:104","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$8550_calldata_ptr","typeString":"struct AfterSwapParams"},"typeName":{"id":41349,"nodeType":"UserDefinedTypeName","pathNode":{"id":41348,"name":"AfterSwapParams","nameLocations":["4193:15:104"],"nodeType":"IdentifierPath","referencedDeclaration":8550,"src":"4193:15:104"},"referencedDeclaration":8550,"src":"4193:15:104","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$8550_storage_ptr","typeString":"struct AfterSwapParams"}},"visibility":"internal"}],"src":"4192:33:104"},"returnParameters":{"id":41357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41364,"src":"4251:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41353,"name":"bool","nodeType":"ElementaryTypeName","src":"4251:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41364,"src":"4257:7:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41355,"name":"uint256","nodeType":"ElementaryTypeName","src":"4257:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4250:15:104"},"scope":41389,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":41388,"nodeType":"FunctionDefinition","src":"4348:299:104","nodes":[],"body":{"id":41387,"nodeType":"Block","src":"4545:102:104","nodes":[],"statements":[{"expression":{"arguments":[{"id":41382,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41368,"src":"4602:6:104","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8521_calldata_ptr","typeString":"struct PoolSwapParams calldata"}},{"id":41383,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41370,"src":"4610:4:104","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":41384,"name":"staticSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41372,"src":"4616:23:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolSwapParams_$8521_calldata_ptr","typeString":"struct PoolSwapParams calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":41380,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4562:5:104","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseHooksMock_$41389_$","typeString":"type(contract super BaseHooksMock)"}},"id":41381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:33:104","memberName":"onComputeDynamicSwapFeePercentage","nodeType":"MemberAccess","referencedDeclaration":19203,"src":"4562:39:104","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PoolSwapParams_$8521_calldata_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (struct PoolSwapParams calldata,address,uint256) view returns (bool,uint256)"}},"id":41385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:78:104","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":41379,"id":41386,"nodeType":"Return","src":"4555:85:104"}]},"baseFunctions":[19203],"documentation":{"id":41365,"nodeType":"StructuredDocumentation","src":"4321:22:104","text":"@inheritdoc IHooks"},"functionSelector":"a0e8f5ac","implemented":true,"kind":"function","modifiers":[],"name":"onComputeDynamicSwapFeePercentage","nameLocation":"4357:33:104","overrides":{"id":41374,"nodeType":"OverrideSpecifier","overrides":[],"src":"4512:8:104"},"parameters":{"id":41373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41368,"mutability":"mutable","name":"params","nameLocation":"4424:6:104","nodeType":"VariableDeclaration","scope":41388,"src":"4400:30:104","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8521_calldata_ptr","typeString":"struct PoolSwapParams"},"typeName":{"id":41367,"nodeType":"UserDefinedTypeName","pathNode":{"id":41366,"name":"PoolSwapParams","nameLocations":["4400:14:104"],"nodeType":"IdentifierPath","referencedDeclaration":8521,"src":"4400:14:104"},"referencedDeclaration":8521,"src":"4400:14:104","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8521_storage_ptr","typeString":"struct PoolSwapParams"}},"visibility":"internal"},{"constant":false,"id":41370,"mutability":"mutable","name":"pool","nameLocation":"4448:4:104","nodeType":"VariableDeclaration","scope":41388,"src":"4440:12:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41369,"name":"address","nodeType":"ElementaryTypeName","src":"4440:7:104","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41372,"mutability":"mutable","name":"staticSwapFeePercentage","nameLocation":"4470:23:104","nodeType":"VariableDeclaration","scope":41388,"src":"4462:31:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4462:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4390:109:104"},"returnParameters":{"id":41379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41388,"src":"4530:4:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41375,"name":"bool","nodeType":"ElementaryTypeName","src":"4530:4:104","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41388,"src":"4536:7:104","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41377,"name":"uint256","nodeType":"ElementaryTypeName","src":"4536:7:104","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:15:104"},"scope":41389,"stateMutability":"view","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[{"baseName":{"id":41089,"name":"BaseHooks","nameLocations":["298:9:104"],"nodeType":"IdentifierPath","referencedDeclaration":19204,"src":"298:9:104"},"id":41090,"nodeType":"InheritanceSpecifier","src":"298:9:104"}],"canonicalName":"BaseHooksMock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[41389,19204,5517],"name":"BaseHooksMock","nameLocation":"281:13:104","scope":41390,"usedErrors":[],"usedEvents":[]}],"license":"GPL-3.0-or-later"},"id":104}