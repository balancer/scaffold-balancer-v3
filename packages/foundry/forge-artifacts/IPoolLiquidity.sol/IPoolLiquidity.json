{"abi":[{"type":"function","name":"onAddLiquidityCustom","inputs":[{"name":"router","type":"address","internalType":"address"},{"name":"maxAmountsInScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"minBptAmountOut","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"amountsInScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"bptAmountOut","type":"uint256","internalType":"uint256"},{"name":"swapFeeAmountsScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"onRemoveLiquidityCustom","inputs":[{"name":"router","type":"address","internalType":"address"},{"name":"maxBptAmountIn","type":"uint256","internalType":"uint256"},{"name":"minAmountsOutScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"bptAmountIn","type":"uint256","internalType":"uint256"},{"name":"amountsOutScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"swapFeeAmountsScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onAddLiquidityCustom(address,uint256[],uint256,uint256[],bytes)":"e4c43663","onRemoveLiquidityCustom(address,uint256,uint256[],uint256[],bytes)":"ab68e28c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsInScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onAddLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsInScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmountsScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOutScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onRemoveLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmountsScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onAddLiquidityCustom(address,uint256[],uint256,uint256[],bytes)\":{\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"maxAmountsInScaled18\":\"Maximum input amounts, sorted in token registration order\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"router\":\"The address (usually a router contract) that initiated a swap operation on the Vault\",\"userData\":\"Arbitrary data sent with the encoded request\"},\"returns\":{\"amountsInScaled18\":\"Input token amounts, sorted in token registration order\",\"bptAmountOut\":\"Calculated pool token amount to receive\",\"returnData\":\"Arbitrary data with an encoded response from the pool\",\"swapFeeAmountsScaled18\":\"The amount of swap fees charged for each token\"}},\"onRemoveLiquidityCustom(address,uint256,uint256[],uint256[],bytes)\":{\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"maxBptAmountIn\":\"Maximum amount of input pool tokens\",\"minAmountsOutScaled18\":\"Minimum output amounts, sorted in token registration order\",\"router\":\"The address (usually a router contract) that initiated a swap operation on the Vault\",\"userData\":\"Arbitrary data sent with the encoded request\"},\"returns\":{\"amountsOutScaled18\":\"Amount of tokens to receive, sorted in token registration order\",\"bptAmountIn\":\"Calculated pool token amount to burn\",\"returnData\":\"Arbitrary data with an encoded response from the pool\",\"swapFeeAmountsScaled18\":\"The amount of swap fees charged for each token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onAddLiquidityCustom(address,uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Add liquidity to the pool with a custom hook.\"},\"onRemoveLiquidityCustom(address,uint256,uint256[],uint256[],bytes)\":{\"notice\":\"Remove liquidity from the pool with a custom hook.\"}},\"notice\":\"Interface for custom liquidity operations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IPoolLiquidity.sol\":\"IPoolLiquidity\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IPoolLiquidity.sol\":{\"keccak256\":\"0x990d3c436d0d809fc761b29d84f237a796b85d033b0a44d51811d15237d97382\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12842a54c105575da4af303f1323cec608097d8491598da23426b98102c42652\",\"dweb:/ipfs/QmPSR9YSmyN2n6UYTWT5aqoeDt96wkanf9qSVyxdhQAvrb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"uint256[]","name":"maxAmountsInScaled18","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAddLiquidityCustom","outputs":[{"internalType":"uint256[]","name":"amountsInScaled18","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"uint256[]","name":"swapFeeAmountsScaled18","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOutScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onRemoveLiquidityCustom","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOutScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"swapFeeAmountsScaled18","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"onAddLiquidityCustom(address,uint256[],uint256,uint256[],bytes)":{"params":{"balancesScaled18":"Current pool balances, sorted in token registration order","maxAmountsInScaled18":"Maximum input amounts, sorted in token registration order","minBptAmountOut":"Minimum amount of output pool tokens","router":"The address (usually a router contract) that initiated a swap operation on the Vault","userData":"Arbitrary data sent with the encoded request"},"returns":{"amountsInScaled18":"Input token amounts, sorted in token registration order","bptAmountOut":"Calculated pool token amount to receive","returnData":"Arbitrary data with an encoded response from the pool","swapFeeAmountsScaled18":"The amount of swap fees charged for each token"}},"onRemoveLiquidityCustom(address,uint256,uint256[],uint256[],bytes)":{"params":{"balancesScaled18":"Current pool balances, sorted in token registration order","maxBptAmountIn":"Maximum amount of input pool tokens","minAmountsOutScaled18":"Minimum output amounts, sorted in token registration order","router":"The address (usually a router contract) that initiated a swap operation on the Vault","userData":"Arbitrary data sent with the encoded request"},"returns":{"amountsOutScaled18":"Amount of tokens to receive, sorted in token registration order","bptAmountIn":"Calculated pool token amount to burn","returnData":"Arbitrary data with an encoded response from the pool","swapFeeAmountsScaled18":"The amount of swap fees charged for each token"}}},"version":1},"userdoc":{"kind":"user","methods":{"onAddLiquidityCustom(address,uint256[],uint256,uint256[],bytes)":{"notice":"Add liquidity to the pool with a custom hook."},"onRemoveLiquidityCustom(address,uint256,uint256[],uint256[],bytes)":{"notice":"Remove liquidity from the pool with a custom hook."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IPoolLiquidity.sol":"IPoolLiquidity"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IPoolLiquidity.sol":{"keccak256":"0x990d3c436d0d809fc761b29d84f237a796b85d033b0a44d51811d15237d97382","urls":["bzz-raw://12842a54c105575da4af303f1323cec608097d8491598da23426b98102c42652","dweb:/ipfs/QmPSR9YSmyN2n6UYTWT5aqoeDt96wkanf9qSVyxdhQAvrb"],"license":"GPL-3.0-or-later"}},"version":1},"id":27}