{"abi":[],"bytecode":{"object":"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202011b48cbff6d201e313f713a1e8ad83fd7a2ecb9928d515cd74079bb85234cd64736f6c63430008180033","sourceMap":"532:1805:115:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;532:1805:115;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202011b48cbff6d201e313f713a1e8ad83fd7a2ecb9928d515cd74079bb85234cd64736f6c63430008180033","sourceMap":"532:1805:115:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0a7e89ffa57127a2e75931be926a11094b6ee2955632a5dce0228f3d8e98eb02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca02052cca6c00d760253f74519e6d7460dfaaf4efb3c004bf9c811ad7791d40\",\"dweb:/ipfs/QmSfzCXbsALfzo6Joqte5oyJxi7h27VqhDmcMJhmNGX2GJ\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x499cb322fe046f09e7accdf52e4c0e3d4fcddecb9eded2e4a23d5303c5a16180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f1801d1c9baf83d0fdb04515eb752e21a73a2a8973045f42e976821ab168c5f\",\"dweb:/ipfs/QmNYMKSKkrgAW1YTfi9K5FsVzeg3zQh8nDyLdXAct8m8kU\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3583c2609d961607b0938ba8b19d8c348eea2bdfe79605d54b1a54b03564730d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://667624dfb350b124c1d2e77268e1e5bb97b1259a2e27c39f1a08530cd95cbc20\",\"dweb:/ipfs/QmNMLeuwnaX9cbty9zEHj5vKsJP5VFmBKibPKDqMJzkZsx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol":"SignatureChecker"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"keccak256":"0x0a7e89ffa57127a2e75931be926a11094b6ee2955632a5dce0228f3d8e98eb02","urls":["bzz-raw://ca02052cca6c00d760253f74519e6d7460dfaaf4efb3c004bf9c811ad7791d40","dweb:/ipfs/QmSfzCXbsALfzo6Joqte5oyJxi7h27VqhDmcMJhmNGX2GJ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x499cb322fe046f09e7accdf52e4c0e3d4fcddecb9eded2e4a23d5303c5a16180","urls":["bzz-raw://8f1801d1c9baf83d0fdb04515eb752e21a73a2a8973045f42e976821ab168c5f","dweb:/ipfs/QmNYMKSKkrgAW1YTfi9K5FsVzeg3zQh8nDyLdXAct8m8kU"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol":{"keccak256":"0x3583c2609d961607b0938ba8b19d8c348eea2bdfe79605d54b1a54b03564730d","urls":["bzz-raw://667624dfb350b124c1d2e77268e1e5bb97b1259a2e27c39f1a08530cd95cbc20","dweb:/ipfs/QmNMLeuwnaX9cbty9zEHj5vKsJP5VFmBKibPKDqMJzkZsx"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol","id":56185,"exportedSymbols":{"ECDSA":[55775],"IERC1271":[51223],"SignatureChecker":[56184]},"nodeType":"SourceUnit","src":"123:2215:115","nodes":[{"id":56078,"nodeType":"PragmaDirective","src":"123:24:115","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":56080,"nodeType":"ImportDirective","src":"149:34:115","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","nameLocation":"-1:-1:-1","scope":56185,"sourceUnit":55776,"symbolAliases":[{"foreign":{"id":56079,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55775,"src":"157:5:115","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":56082,"nodeType":"ImportDirective","src":"184:55:115","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","nameLocation":"-1:-1:-1","scope":56185,"sourceUnit":51224,"symbolAliases":[{"foreign":{"id":56081,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51223,"src":"192:8:115","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":56184,"nodeType":"ContractDefinition","src":"532:1805:115","nodes":[{"id":56131,"nodeType":"FunctionDefinition","src":"1041:429:115","nodes":[],"body":{"id":56130,"nodeType":"Block","src":"1153:317:115","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":56099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":56095,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56086,"src":"1167:6:115","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":56096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1174:4:115","memberName":"code","nodeType":"MemberAccess","src":"1167:11:115","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":56097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:6:115","memberName":"length","nodeType":"MemberAccess","src":"1167:18:115","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":56098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1189:1:115","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1167:23:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":56128,"nodeType":"Block","src":"1381:83:115","statements":[{"expression":{"arguments":[{"id":56123,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56086,"src":"1429:6:115","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":56124,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56088,"src":"1437:4:115","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":56125,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56090,"src":"1443:9:115","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":56122,"name":"isValidERC1271SignatureNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56183,"src":"1402:26:115","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":56126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1402:51:115","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":56094,"id":56127,"nodeType":"Return","src":"1395:58:115"}]},"id":56129,"nodeType":"IfStatement","src":"1163:301:115","trueBody":{"id":56121,"nodeType":"Block","src":"1192:183:115","statements":[{"assignments":[56101,56104,null],"declarations":[{"constant":false,"id":56101,"mutability":"mutable","name":"recovered","nameLocation":"1215:9:115","nodeType":"VariableDeclaration","scope":56121,"src":"1207:17:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56100,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:115","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":56104,"mutability":"mutable","name":"err","nameLocation":"1245:3:115","nodeType":"VariableDeclaration","scope":56121,"src":"1226:22:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$55435","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":56103,"nodeType":"UserDefinedTypeName","pathNode":{"id":56102,"name":"ECDSA.RecoverError","nameLocations":["1226:5:115","1232:12:115"],"nodeType":"IdentifierPath","referencedDeclaration":55435,"src":"1226:18:115"},"referencedDeclaration":55435,"src":"1226:18:115","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$55435","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},null],"id":56110,"initialValue":{"arguments":[{"id":56107,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56088,"src":"1271:4:115","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":56108,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56090,"src":"1277:9:115","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":56105,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55775,"src":"1254:5:115","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$55775_$","typeString":"type(library ECDSA)"}},"id":56106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1260:10:115","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":55501,"src":"1254:16:115","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$55435_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":56109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:33:115","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$55435_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"1206:81:115"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":56119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$55435","typeString":"enum ECDSA.RecoverError"},"id":56115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":56111,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56104,"src":"1308:3:115","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$55435","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":56112,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55775,"src":"1315:5:115","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$55775_$","typeString":"type(library ECDSA)"}},"id":56113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1321:12:115","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":55435,"src":"1315:18:115","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$55435_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":56114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1334:7:115","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":55431,"src":"1315:26:115","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$55435","typeString":"enum ECDSA.RecoverError"}},"src":"1308:33:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":56118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":56116,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56101,"src":"1345:9:115","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":56117,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56086,"src":"1358:6:115","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1345:19:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1308:56:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":56094,"id":56120,"nodeType":"Return","src":"1301:63:115"}]}}]},"documentation":{"id":56084,"nodeType":"StructuredDocumentation","src":"563:473:115","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nameLocation":"1050:19:115","parameters":{"id":56091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56086,"mutability":"mutable","name":"signer","nameLocation":"1078:6:115","nodeType":"VariableDeclaration","scope":56131,"src":"1070:14:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56085,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:115","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":56088,"mutability":"mutable","name":"hash","nameLocation":"1094:4:115","nodeType":"VariableDeclaration","scope":56131,"src":"1086:12:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1086:7:115","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":56090,"mutability":"mutable","name":"signature","nameLocation":"1113:9:115","nodeType":"VariableDeclaration","scope":56131,"src":"1100:22:115","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56089,"name":"bytes","nodeType":"ElementaryTypeName","src":"1100:5:115","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1069:54:115"},"returnParameters":{"id":56094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56131,"src":"1147:4:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":56092,"name":"bool","nodeType":"ElementaryTypeName","src":"1147:4:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1146:6:115"},"scope":56184,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":56183,"nodeType":"FunctionDefinition","src":"1877:458:115","nodes":[],"body":{"id":56182,"nodeType":"Block","src":"2026:309:115","nodes":[],"statements":[{"assignments":[56144,56146],"declarations":[{"constant":false,"id":56144,"mutability":"mutable","name":"success","nameLocation":"2042:7:115","nodeType":"VariableDeclaration","scope":56182,"src":"2037:12:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":56143,"name":"bool","nodeType":"ElementaryTypeName","src":"2037:4:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":56146,"mutability":"mutable","name":"result","nameLocation":"2064:6:115","nodeType":"VariableDeclaration","scope":56182,"src":"2051:19:115","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56145,"name":"bytes","nodeType":"ElementaryTypeName","src":"2051:5:115","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":56158,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":56151,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51223,"src":"2120:8:115","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$51223_$","typeString":"type(contract IERC1271)"}},"id":56152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2129:16:115","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":51222,"src":"2120:25:115","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},{"components":[{"id":56153,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56136,"src":"2148:4:115","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":56154,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56138,"src":"2154:9:115","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":56155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2147:17:115","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"},{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}],"expression":{"id":56149,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2105:3:115","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":56150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2109:10:115","memberName":"encodeCall","nodeType":"MemberAccess","src":"2105:14:115","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":56156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:60:115","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":56147,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56134,"src":"2074:6:115","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":56148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2081:10:115","memberName":"staticcall","nodeType":"MemberAccess","src":"2074:17:115","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":56157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:101:115","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2036:139:115"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":56179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":56164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":56159,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56144,"src":"2193:7:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":56163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":56160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56146,"src":"2216:6:115","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":56161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2223:6:115","memberName":"length","nodeType":"MemberAccess","src":"2216:13:115","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":56162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2233:2:115","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2216:19:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2193:42:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":56178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":56167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56146,"src":"2262:6:115","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":56169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2271:7:115","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":56168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2271:7:115","typeDescriptions":{}}}],"id":56170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2270:9:115","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":56165,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2251:3:115","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":56166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2255:6:115","memberName":"decode","nodeType":"MemberAccess","src":"2251:10:115","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":56171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:29:115","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":56174,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51223,"src":"2292:8:115","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$51223_$","typeString":"type(contract IERC1271)"}},"id":56175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2301:16:115","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":51222,"src":"2292:25:115","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":56176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2318:8:115","memberName":"selector","nodeType":"MemberAccess","src":"2292:34:115","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":56173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2284:7:115","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":56172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:115","typeDescriptions":{}}},"id":56177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:43:115","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2251:76:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2193:134:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":56180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2192:136:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":56142,"id":56181,"nodeType":"Return","src":"2185:143:115"}]},"documentation":{"id":56132,"nodeType":"StructuredDocumentation","src":"1476:396:115","text":" @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC-1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"implemented":true,"kind":"function","modifiers":[],"name":"isValidERC1271SignatureNow","nameLocation":"1886:26:115","parameters":{"id":56139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56134,"mutability":"mutable","name":"signer","nameLocation":"1930:6:115","nodeType":"VariableDeclaration","scope":56183,"src":"1922:14:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56133,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:115","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":56136,"mutability":"mutable","name":"hash","nameLocation":"1954:4:115","nodeType":"VariableDeclaration","scope":56183,"src":"1946:12:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1946:7:115","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":56138,"mutability":"mutable","name":"signature","nameLocation":"1981:9:115","nodeType":"VariableDeclaration","scope":56183,"src":"1968:22:115","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56137,"name":"bytes","nodeType":"ElementaryTypeName","src":"1968:5:115","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1912:84:115"},"returnParameters":{"id":56142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56183,"src":"2020:4:115","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":56140,"name":"bool","nodeType":"ElementaryTypeName","src":"2020:4:115","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2019:6:115"},"scope":56184,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":56083,"nodeType":"StructuredDocumentation","src":"241:290:115","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\n Argent and Safe Wallet (previously Gnosis Safe)."},"fullyImplemented":true,"linearizedBaseContracts":[56184],"name":"SignatureChecker","nameLocation":"540:16:115","scope":56185,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":115}