{"abi":[],"bytecode":{"object":"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b57ec0d72f666b3103712f5735d2ad2906e8d197a28d84f131785fcbfbcbb35064736f6c63430008180033","sourceMap":"521:3181:114:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:114;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b57ec0d72f666b3103712f5735d2ad2906e8d197a28d84f131785fcbfbcbb35064736f6c63430008180033","sourceMap":"521:3181:114:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xf56e072d3c3b390275daa0a3f00c7a634604780b5daf4cf8590fc1c2c56b47ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e48cec5a9338d1c7fd52783831a9fca2cae2152c5aa7cf23b364e789d6f01992\",\"dweb:/ipfs/QmQCPm66skhi1LK9ji3rFk91atc95vqrpbyCmmtKXH8YUX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c","urls":["bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4","dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2","urls":["bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440","dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xf56e072d3c3b390275daa0a3f00c7a634604780b5daf4cf8590fc1c2c56b47ff","urls":["bzz-raw://e48cec5a9338d1c7fd52783831a9fca2cae2152c5aa7cf23b364e789d6f01992","dweb:/ipfs/QmQCPm66skhi1LK9ji3rFk91atc95vqrpbyCmmtKXH8YUX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c","urls":["bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966","dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481","urls":["bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb","dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0","urls":["bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426","dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":56077,"exportedSymbols":{"MessageHashUtils":[56076],"Strings":[55427]},"nodeType":"SourceUnit","src":"123:3580:114","nodes":[{"id":56004,"nodeType":"PragmaDirective","src":"123:24:114","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":56006,"nodeType":"ImportDirective","src":"149:39:114","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":56077,"sourceUnit":55428,"symbolAliases":[{"foreign":{"id":56005,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55427,"src":"157:7:114","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":56076,"nodeType":"ContractDefinition","src":"521:3181:114","nodes":[{"id":56017,"nodeType":"FunctionDefinition","src":"1222:433:114","nodes":[],"body":{"id":56016,"nodeType":"Block","src":"1314:341:114","nodes":[],"statements":[{"AST":{"nativeSrc":"1349:300:114","nodeType":"YulBlock","src":"1349:300:114","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:114","nodeType":"YulLiteral","src":"1370:4:114","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:114","nodeType":"YulLiteral","src":"1376:34:114","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:114","nodeType":"YulIdentifier","src":"1363:6:114"},"nativeSrc":"1363:48:114","nodeType":"YulFunctionCall","src":"1363:48:114"},"nativeSrc":"1363:48:114","nodeType":"YulExpressionStatement","src":"1363:48:114"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:114","nodeType":"YulLiteral","src":"1472:4:114","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:114","nodeType":"YulIdentifier","src":"1478:11:114"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:114","nodeType":"YulIdentifier","src":"1465:6:114"},"nativeSrc":"1465:25:114","nodeType":"YulFunctionCall","src":"1465:25:114"},"nativeSrc":"1465:25:114","nodeType":"YulExpressionStatement","src":"1465:25:114"},{"nativeSrc":"1544:31:114","nodeType":"YulAssignment","src":"1544:31:114","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:114","nodeType":"YulLiteral","src":"1564:4:114","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:114","nodeType":"YulLiteral","src":"1570:4:114","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:114","nodeType":"YulIdentifier","src":"1554:9:114"},"nativeSrc":"1554:21:114","nodeType":"YulFunctionCall","src":"1554:21:114"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:114","nodeType":"YulIdentifier","src":"1544:6:114"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":56013,"isOffset":false,"isSlot":false,"src":"1544:6:114","valueSize":1},{"declaration":56010,"isOffset":false,"isSlot":false,"src":"1478:11:114","valueSize":1}],"flags":["memory-safe"],"id":56015,"nodeType":"InlineAssembly","src":"1324:325:114"}]},"documentation":{"id":56008,"nodeType":"StructuredDocumentation","src":"552:665:114","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:114","parameters":{"id":56011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56010,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:114","nodeType":"VariableDeclaration","scope":56017,"src":"1254:19:114","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:114","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:114"},"returnParameters":{"id":56014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56013,"mutability":"mutable","name":"digest","nameLocation":"1306:6:114","nodeType":"VariableDeclaration","scope":56017,"src":"1298:14:114","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:114","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:114"},"scope":56076,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":56043,"nodeType":"FunctionDefinition","src":"2121:229:114","nodes":[],"body":{"id":56042,"nodeType":"Block","src":"2207:143:114","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":56029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:114","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":56034,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56020,"src":"2316:7:114","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":56035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:114","memberName":"length","nodeType":"MemberAccess","src":"2316:14:114","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":56032,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55427,"src":"2299:7:114","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$55427_$","typeString":"type(library Strings)"}},"id":56033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:114","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":55175,"src":"2299:16:114","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":56036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:114","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":56031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:114","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":56030,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:114","typeDescriptions":{}}},"id":56037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:114","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":56038,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56020,"src":"2334:7:114","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":56027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:114","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":56026,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:114","typeDescriptions":{}}},"id":56028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:114","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:114","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":56039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:114","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":56025,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:114","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":56040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:114","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":56024,"id":56041,"nodeType":"Return","src":"2217:126:114"}]},"documentation":{"id":56018,"nodeType":"StructuredDocumentation","src":"1661:455:114","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:114","parameters":{"id":56021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56020,"mutability":"mutable","name":"message","nameLocation":"2166:7:114","nodeType":"VariableDeclaration","scope":56043,"src":"2153:20:114","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56019,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:114","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:114"},"returnParameters":{"id":56024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56043,"src":"2198:7:114","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:114","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:114"},"scope":56076,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":56063,"nodeType":"FunctionDefinition","src":"2693:191:114","nodes":[],"body":{"id":56062,"nodeType":"Block","src":"2804:80:114","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":56056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:114","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":56057,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56046,"src":"2860:9:114","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":56058,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56048,"src":"2871:4:114","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":56054,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:114","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":56055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:114","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:114","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":56059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:114","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":56053,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:114","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":56060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:114","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":56052,"id":56061,"nodeType":"Return","src":"2814:63:114"}]},"documentation":{"id":56044,"nodeType":"StructuredDocumentation","src":"2356:332:114","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:114","parameters":{"id":56049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56046,"mutability":"mutable","name":"validator","nameLocation":"2742:9:114","nodeType":"VariableDeclaration","scope":56063,"src":"2734:17:114","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56045,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:114","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":56048,"mutability":"mutable","name":"data","nameLocation":"2766:4:114","nodeType":"VariableDeclaration","scope":56063,"src":"2753:17:114","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56047,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:114","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:114"},"returnParameters":{"id":56052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56063,"src":"2795:7:114","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:114","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:114"},"scope":56076,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":56075,"nodeType":"FunctionDefinition","src":"3326:374:114","nodes":[],"body":{"id":56074,"nodeType":"Block","src":"3435:265:114","nodes":[],"statements":[{"AST":{"nativeSrc":"3470:224:114","nodeType":"YulBlock","src":"3470:224:114","statements":[{"nativeSrc":"3484:22:114","nodeType":"YulVariableDeclaration","src":"3484:22:114","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:114","nodeType":"YulLiteral","src":"3501:4:114","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:114","nodeType":"YulIdentifier","src":"3495:5:114"},"nativeSrc":"3495:11:114","nodeType":"YulFunctionCall","src":"3495:11:114"},"variables":[{"name":"ptr","nativeSrc":"3488:3:114","nodeType":"YulTypedName","src":"3488:3:114","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:114","nodeType":"YulIdentifier","src":"3526:3:114"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:114","nodeType":"YulLiteral","src":"3531:10:114","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:114","nodeType":"YulIdentifier","src":"3519:6:114"},"nativeSrc":"3519:23:114","nodeType":"YulFunctionCall","src":"3519:23:114"},"nativeSrc":"3519:23:114","nodeType":"YulExpressionStatement","src":"3519:23:114"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:114","nodeType":"YulIdentifier","src":"3566:3:114"},{"kind":"number","nativeSrc":"3571:4:114","nodeType":"YulLiteral","src":"3571:4:114","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:114","nodeType":"YulIdentifier","src":"3562:3:114"},"nativeSrc":"3562:14:114","nodeType":"YulFunctionCall","src":"3562:14:114"},{"name":"domainSeparator","nativeSrc":"3578:15:114","nodeType":"YulIdentifier","src":"3578:15:114"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:114","nodeType":"YulIdentifier","src":"3555:6:114"},"nativeSrc":"3555:39:114","nodeType":"YulFunctionCall","src":"3555:39:114"},"nativeSrc":"3555:39:114","nodeType":"YulExpressionStatement","src":"3555:39:114"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:114","nodeType":"YulIdentifier","src":"3618:3:114"},{"kind":"number","nativeSrc":"3623:4:114","nodeType":"YulLiteral","src":"3623:4:114","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:114","nodeType":"YulIdentifier","src":"3614:3:114"},"nativeSrc":"3614:14:114","nodeType":"YulFunctionCall","src":"3614:14:114"},{"name":"structHash","nativeSrc":"3630:10:114","nodeType":"YulIdentifier","src":"3630:10:114"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:114","nodeType":"YulIdentifier","src":"3607:6:114"},"nativeSrc":"3607:34:114","nodeType":"YulFunctionCall","src":"3607:34:114"},"nativeSrc":"3607:34:114","nodeType":"YulExpressionStatement","src":"3607:34:114"},{"nativeSrc":"3654:30:114","nodeType":"YulAssignment","src":"3654:30:114","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:114","nodeType":"YulIdentifier","src":"3674:3:114"},{"kind":"number","nativeSrc":"3679:4:114","nodeType":"YulLiteral","src":"3679:4:114","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:114","nodeType":"YulIdentifier","src":"3664:9:114"},"nativeSrc":"3664:20:114","nodeType":"YulFunctionCall","src":"3664:20:114"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:114","nodeType":"YulIdentifier","src":"3654:6:114"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":56071,"isOffset":false,"isSlot":false,"src":"3654:6:114","valueSize":1},{"declaration":56066,"isOffset":false,"isSlot":false,"src":"3578:15:114","valueSize":1},{"declaration":56068,"isOffset":false,"isSlot":false,"src":"3630:10:114","valueSize":1}],"flags":["memory-safe"],"id":56073,"nodeType":"InlineAssembly","src":"3445:249:114"}]},"documentation":{"id":56064,"nodeType":"StructuredDocumentation","src":"2890:431:114","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:114","parameters":{"id":56069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56066,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:114","nodeType":"VariableDeclaration","scope":56075,"src":"3351:23:114","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:114","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":56068,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:114","nodeType":"VariableDeclaration","scope":56075,"src":"3376:18:114","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:114","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:114"},"returnParameters":{"id":56072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56071,"mutability":"mutable","name":"digest","nameLocation":"3427:6:114","nodeType":"VariableDeclaration","scope":56075,"src":"3419:14:114","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:114","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:114"},"scope":56076,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":56007,"nodeType":"StructuredDocumentation","src":"190:330:114","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[56076],"name":"MessageHashUtils","nameLocation":"529:16:114","scope":56077,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":114}