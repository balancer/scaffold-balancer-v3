{"abi":[{"type":"constructor","inputs":[{"name":"vault","type":"address","internalType":"contract IVault"},{"name":"router","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"LUCKY_NUMBER","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"MAX_NUMBER","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getHookFlags","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct HookFlags","components":[{"name":"enableHookAdjustedAmounts","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallAfterInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallComputeDynamicSwapFee","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeSwap","type":"bool","internalType":"bool"},{"name":"shouldCallAfterSwap","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterRemoveLiquidity","type":"bool","internalType":"bool"}]}],"stateMutability":"pure"},{"type":"function","name":"getRandomNumber","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"hookSwapFeePercentage","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"onAfterAddLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsInRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterInitialize","inputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterRemoveLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsOutRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterSwap","inputs":[{"name":"params","type":"tuple","internalType":"struct AfterSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountInScaled18","type":"uint256","internalType":"uint256"},{"name":"amountOutScaled18","type":"uint256","internalType":"uint256"},{"name":"tokenInBalanceScaled18","type":"uint256","internalType":"uint256"},{"name":"tokenOutBalanceScaled18","type":"uint256","internalType":"uint256"},{"name":"amountCalculatedScaled18","type":"uint256","internalType":"uint256"},{"name":"amountCalculatedRaw","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"success","type":"bool","internalType":"bool"},{"name":"hookAdjustedAmountCalculatedRaw","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeAddLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeInitialize","inputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeRemoveLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeSwap","inputs":[{"name":"","type":"tuple","internalType":"struct PoolSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onComputeDynamicSwapFeePercentage","inputs":[{"name":"","type":"tuple","internalType":"struct PoolSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"onRegister","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"","type":"tuple","internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setHookSwapFeePercentage","inputs":[{"name":"swapFeePercentage","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"HookSwapFeePercentageChanged","inputs":[{"name":"hooksContract","type":"address","indexed":true,"internalType":"address"},{"name":"hookFeePercentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LotteryFeeCollected","inputs":[{"name":"hooksContract","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"feeAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LotteryHookExampleRegistered","inputs":[{"name":"hooksContract","type":"address","indexed":true,"internalType":"address"},{"name":"pool","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LotteryWinningsPaid","inputs":[{"name":"hooksContract","type":"address","indexed":true,"internalType":"address"},{"name":"winner","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"amountWon","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"IndexOutOfBounds","inputs":[]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]},{"type":"error","name":"SenderIsNotVault","inputs":[{"name":"sender","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60e06040525f60045534801562000014575f80fd5b5060405162001902380380620019028339810160408190526200003791620000f0565b6001600160a01b03821660805233806200006a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000758162000089565b506001600160a01b031660a052506200012d565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000ed575f80fd5b50565b5f806040838503121562000102575f80fd5b82516200010f81620000d8565b60208401519092506200012281620000d8565b809150509250929050565b60805160a05160c0516117a66200015c5f395f50505f61040601525f8181610678015261094d01526117a65ff3fe608060405234801561000f575f80fd5b5060043610610149575f3560e01c80638da5cb5b116100c7578063dbdff2c11161007d578063f883fcaa11610063578063f883fcaa14610384578063f9e5c1971461038c578063fea9b5721461039f575f80fd5b8063dbdff2c114610357578063f2fde38b14610371575f80fd5b8063a0e8f5ac116100ad578063a0e8f5ac1461028c578063ba5f9f40146102a4578063d77153a7146102b2575f80fd5b80638da5cb5b14610255578063976907cc1461026f575f80fd5b806338be241d1161011c57806345421ec71161010257806345421ec7146102235780635211fa771461023d578063715018a61461024b575f80fd5b806338be241d146101dd5780634392312a146101f0575f80fd5b80630b89f1821461014d57806318b6eb55146101755780631c149e281461019f5780632754888d146101b2575b5f80fd5b61016061015b366004610e7b565b6103a7565b60405190151581526020015b60405180910390f35b610188610183366004610fa4565b6103f1565b60408051921515835260208301919091520161016c565b6101606101ad3660046110af565b610561565b6101cf6101c036600461111d565b5f839850989650505050505050565b60405161016c9291906111fd565b6101606101eb36600461124d565b610569565b5f5461020a90600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161016c565b6101606102313660046112c3565b5f979650505050505050565b6101606101ad366004611393565b610253610572565b005b5f546040516001600160a01b03909116815260200161016c565b6101cf61027d3660046113e2565b5f849850989650505050505050565b61018861029a366004611484565b5f80935093915050565b6101606102313660046114da565b6040805161014080820183525f80835260208084018290528385018290526060808501839052608080860184905260a080870185905260c080880186905260e0808901879052610100808a01889052610120998a018890528a519889018b52958801879052878a0187905293870186905291860185905290850184905290840183905290830182905292820152600180825291810191909152905161016c919061155d565b61035f610585565b60405160ff909116815260200161016c565b61025361037f366004611615565b610593565b61035f600a81565b61025361039a366004611630565b6105ee565b61035f601481565b5f6103b061066d565b6040516001600160a01b0385169030907f8b640b5b54a040cdfb1149b7446b0c7c18c820e860ed3d8b584acea1888b7ecd905f90a35060015b949350505050565b5f806103fb61066d565b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661043861014086016101208701611615565b6001600160a01b0316036104515761044e6106d1565b90505b60048054905f6104608361166b565b90915550505f546101008501359250600160a01b900467ffffffffffffffff1615610557575f80546104a99061010087013590600160a01b900467ffffffffffffffff16610720565b90505f6104b96020870187611697565b60018111156104ca576104ca611683565b03610517575f6104fc6104e561014088016101208901611615565b846104f660608a0160408b01611615565b85610740565b905080156105115761050e81856116b2565b93505b50610555565b5f61053e61052d61014088016101208901611615565b846104f660408a0160208b01611615565b905080156105535761055081856116c5565b93505b505b505b6001925050915091565b5f5b92915050565b5f5b9392505050565b61057a6109ec565b6105835f610a31565b565b5f61058e6106d1565b905090565b61059b6109ec565b6001600160a01b0381166105e2576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6105eb81610a31565b50565b6105f66109ec565b5f80547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff84169081029190911790915560405190815230907fb25b38640ad709be28a74117ede8cc6094d9e8b3aa27330e26b10898c92ba5229060200160405180910390a250565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610583576040517f089676d50000000000000000000000000000000000000000000000000000000081523360048201526024016105d9565b6004546040515f916014916106f3914491602001918252602082015260400190565b604051602081830303815290604052805190602001205f1c61071591906116ec565b61058e9060016116c5565b5f8061072c83856116ff565b90506103e9670de0b6b3a764000082611716565b5f60091960ff8516016108f5575f856001600160a01b0316635e01eb5a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561078a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ae9190611729565b6001549091505b80156108eb575f6107d26107ca6001846116b2565b600190610a8d565b5090506107e0600182610af0565b506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f906001600160a01b038316906370a0823190602401602060405180830381865afa15801561083e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108629190611744565b905080156108d65761087e6001600160a01b0383168583610bdc565b816001600160a01b0316846001600160a01b0316306001600160a01b03167fad248945aa9c6e54a3aae4c347a04143e677a981dbefd64b871fd587ad6077c6846040516108cd91815260200190565b60405180910390a45b505080806108e39061175b565b9150506107b5565b505f9150506103e9565b61090160018481610c61565b5081156109e5576040517fae6393290000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152306024830152604482018490527f0000000000000000000000000000000000000000000000000000000000000000169063ae639329906064015f604051808303815f87803b15801561098e575f80fd5b505af11580156109a0573d5f803e3d5ffd5b50506040518481526001600160a01b03861692503091507f9614d1bfde1842c37d557aba9f2b69fa1ad92fef808d832d9f4b3ab5cdd06a7b9060200160405180910390a35b50806103e9565b5f546001600160a01b03163314610583576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016105d9565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f80835f01548310610acb576040517f4e23d03500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505f90815260019182016020526040902080549101546001600160a01b0390911691565b6001600160a01b0381165f9081526002830160205260408120548015610bd35783545f198083019101808214610b7d575f8181526001808801602090815260408084208685528185208154815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0391821617825582860154919095015554909216835260028901905290208390555b5f818152600180880160209081526040808420805473ffffffffffffffffffffffffffffffffffffffff1916815583018490559389556001600160a01b0388168352600289019052918120559250610563915050565b5f915050610563565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610c5c908490610d19565b505050565b6001600160a01b0382165f908152600284016020526040812054808203610cfb57505082546040805180820182526001600160a01b0385811680835260208084018781525f8781526001808c0184528782209651875473ffffffffffffffffffffffffffffffffffffffff19169616959095178655905194840194909455948201808955908352600288019094529190209190915561056b565b5f19015f90815260018086016020526040822001839055905061056b565b5f8060205f8451602086015f885af180610d38576040513d5f823e3d81fd5b50505f513d91508115610d4f578060011415610d5c565b6001600160a01b0384163b155b15610d9e576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016105d9565b50505050565b6001600160a01b03811681146105eb575f80fd5b8035610dc381610da4565b919050565b634e487b7160e01b5f52604160045260245ffd5b6040516080810167ffffffffffffffff81118282101715610dff57610dff610dc8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e2e57610e2e610dc8565b604052919050565b5f67ffffffffffffffff821115610e4f57610e4f610dc8565b5060051b60200190565b600281106105eb575f80fd5b5f60808284031215610e75575f80fd5b50919050565b5f805f8060e08587031215610e8e575f80fd5b8435610e9981610da4565b9350602085810135610eaa81610da4565b935060408681013567ffffffffffffffff811115610ec6575f80fd5b8701601f81018913610ed6575f80fd5b8035610ee9610ee482610e36565b610e05565b81815260079190911b8201840190848101908b831115610f07575f80fd5b928501925b82841015610f83576080848d031215610f23575f80fd5b610f2b610ddc565b8435610f3681610da4565b815284870135610f4581610e59565b8188015284860135610f5681610da4565b818701526060858101358015158114610f6d575f80fd5b9082015282526080939093019290850190610f0c565b809750505050505050610f998660608701610e65565b905092959194509250565b5f60208284031215610fb4575f80fd5b813567ffffffffffffffff811115610fca575f80fd5b8201610180818503121561056b575f80fd5b5f82601f830112610feb575f80fd5b81356020610ffb610ee483610e36565b8083825260208201915060208460051b87010193508684111561101c575f80fd5b602086015b848110156110385780358352918301918301611021565b509695505050505050565b5f82601f830112611052575f80fd5b813567ffffffffffffffff81111561106c5761106c610dc8565b61107f601f8201601f1916602001610e05565b818152846020838601011115611093575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156110c0575f80fd5b823567ffffffffffffffff808211156110d7575f80fd5b6110e386838701610fdc565b935060208501359150808211156110f8575f80fd5b5061110585828601611043565b9150509250929050565b803560048110610dc3575f80fd5b5f805f805f805f80610100898b031215611135575f80fd5b61113e89610db8565b975061114c60208a01610db8565b965061115a60408a0161110f565b955060608901359450608089013567ffffffffffffffff8082111561117d575f80fd5b6111898c838d01610fdc565b955060a08b013591508082111561119e575f80fd5b6111aa8c838d01610fdc565b945060c08b01359150808211156111bf575f80fd5b6111cb8c838d01610fdc565b935060e08b01359150808211156111e0575f80fd5b506111ed8b828c01611043565b9150509295985092959890939650565b5f6040820184151583526020604060208501528185518084526060860191506020870193505f5b8181101561124057845183529383019391830191600101611224565b5090979650505050505050565b5f805f6060848603121561125f575f80fd5b833567ffffffffffffffff80821115611276575f80fd5b61128287838801610fdc565b945060208601359350604086013591508082111561129e575f80fd5b506112ab86828701611043565b9150509250925092565b803560058110610dc3575f80fd5b5f805f805f805f60e0888a0312156112d9575f80fd5b87356112e481610da4565b965060208801356112f481610da4565b9550611302604089016112b5565b9450606088013567ffffffffffffffff8082111561131e575f80fd5b61132a8b838c01610fdc565b955060808a0135945060a08a0135915080821115611346575f80fd5b6113528b838c01610fdc565b935060c08a0135915080821115611367575f80fd5b506113748a828b01611043565b91505092959891949750929550565b5f60e08284031215610e75575f80fd5b5f80604083850312156113a4575f80fd5b823567ffffffffffffffff8111156113ba575f80fd5b6113c685828601611383565b92505060208301356113d781610da4565b809150509250929050565b5f805f805f805f80610100898b0312156113fa575f80fd5b61140389610db8565b975061141160208a01610db8565b965061141f60408a016112b5565b9550606089013567ffffffffffffffff8082111561143b575f80fd5b6114478c838d01610fdc565b965060808b013591508082111561145c575f80fd5b6114688c838d01610fdc565b955060a08b0135945060c08b01359150808211156111bf575f80fd5b5f805f60608486031215611496575f80fd5b833567ffffffffffffffff8111156114ac575f80fd5b6114b886828701611383565b93505060208401356114c981610da4565b929592945050506040919091013590565b5f805f805f805f60e0888a0312156114f0575f80fd5b87356114fb81610da4565b9650602088013561150b81610da4565b95506115196040890161110f565b945060608801359350608088013567ffffffffffffffff8082111561153c575f80fd5b6115488b838c01610fdc565b945060a08a0135915080821115611346575f80fd5b8151151581526101408101602083015161157b602084018215159052565b50604083015161158f604084018215159052565b5060608301516115a3606084018215159052565b5060808301516115b7608084018215159052565b5060a08301516115cb60a084018215159052565b5060c08301516115df60c084018215159052565b5060e08301516115f360e084018215159052565b5061010083810151151590830152610120928301511515929091019190915290565b5f60208284031215611625575f80fd5b813561056b81610da4565b5f60208284031215611640575f80fd5b813567ffffffffffffffff8116811461056b575f80fd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161167c5761167c611657565b5060010190565b634e487b7160e01b5f52602160045260245ffd5b5f602082840312156116a7575f80fd5b813561056b81610e59565b8181038181111561056357610563611657565b8082018082111561056357610563611657565b634e487b7160e01b5f52601260045260245ffd5b5f826116fa576116fa6116d8565b500690565b808202811582820484141761056357610563611657565b5f82611724576117246116d8565b500490565b5f60208284031215611739575f80fd5b815161056b81610da4565b5f60208284031215611754575f80fd5b5051919050565b5f8161176957611769611657565b505f19019056fea2646970667358221220aea5c8bf368b3395e3e5a1e55dcef9efff4c0d546b8e4bcdd6733bd7d8c71a9c64736f6c63430008180033","sourceMap":"1533:10528:3:-:0;;;2621:1;2594:28;;4277:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;409:14:56;;;;4345:10:3;;1269:95:76;;1322:31;;-1:-1:-1;;;1322:31:76;;1350:1;1322:31;;;725:51:136;698:18;;1322:31:76;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;4367:23:3::2;;::::0;-1:-1:-1;1533:10528:3;;2912:187:76;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:76;;;-1:-1:-1;;;;;;3020:17:76;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:139:136:-;-1:-1:-1;;;;;97:31:136;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:416::-;252:6;260;313:2;301:9;292:7;288:23;284:32;281:52;;;329:1;326;319:12;281:52;361:9;355:16;380:39;413:5;380:39;:::i;:::-;488:2;473:18;;467:25;438:5;;-1:-1:-1;501:41:136;467:25;501:41;:::i;:::-;561:7;551:17;;;158:416;;;;;:::o;579:203::-;1533:10528:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b5060043610610149575f3560e01c80638da5cb5b116100c7578063dbdff2c11161007d578063f883fcaa11610063578063f883fcaa14610384578063f9e5c1971461038c578063fea9b5721461039f575f80fd5b8063dbdff2c114610357578063f2fde38b14610371575f80fd5b8063a0e8f5ac116100ad578063a0e8f5ac1461028c578063ba5f9f40146102a4578063d77153a7146102b2575f80fd5b80638da5cb5b14610255578063976907cc1461026f575f80fd5b806338be241d1161011c57806345421ec71161010257806345421ec7146102235780635211fa771461023d578063715018a61461024b575f80fd5b806338be241d146101dd5780634392312a146101f0575f80fd5b80630b89f1821461014d57806318b6eb55146101755780631c149e281461019f5780632754888d146101b2575b5f80fd5b61016061015b366004610e7b565b6103a7565b60405190151581526020015b60405180910390f35b610188610183366004610fa4565b6103f1565b60408051921515835260208301919091520161016c565b6101606101ad3660046110af565b610561565b6101cf6101c036600461111d565b5f839850989650505050505050565b60405161016c9291906111fd565b6101606101eb36600461124d565b610569565b5f5461020a90600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161016c565b6101606102313660046112c3565b5f979650505050505050565b6101606101ad366004611393565b610253610572565b005b5f546040516001600160a01b03909116815260200161016c565b6101cf61027d3660046113e2565b5f849850989650505050505050565b61018861029a366004611484565b5f80935093915050565b6101606102313660046114da565b6040805161014080820183525f80835260208084018290528385018290526060808501839052608080860184905260a080870185905260c080880186905260e0808901879052610100808a01889052610120998a018890528a519889018b52958801879052878a0187905293870186905291860185905290850184905290840183905290830182905292820152600180825291810191909152905161016c919061155d565b61035f610585565b60405160ff909116815260200161016c565b61025361037f366004611615565b610593565b61035f600a81565b61025361039a366004611630565b6105ee565b61035f601481565b5f6103b061066d565b6040516001600160a01b0385169030907f8b640b5b54a040cdfb1149b7446b0c7c18c820e860ed3d8b584acea1888b7ecd905f90a35060015b949350505050565b5f806103fb61066d565b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661043861014086016101208701611615565b6001600160a01b0316036104515761044e6106d1565b90505b60048054905f6104608361166b565b90915550505f546101008501359250600160a01b900467ffffffffffffffff1615610557575f80546104a99061010087013590600160a01b900467ffffffffffffffff16610720565b90505f6104b96020870187611697565b60018111156104ca576104ca611683565b03610517575f6104fc6104e561014088016101208901611615565b846104f660608a0160408b01611615565b85610740565b905080156105115761050e81856116b2565b93505b50610555565b5f61053e61052d61014088016101208901611615565b846104f660408a0160208b01611615565b905080156105535761055081856116c5565b93505b505b505b6001925050915091565b5f5b92915050565b5f5b9392505050565b61057a6109ec565b6105835f610a31565b565b5f61058e6106d1565b905090565b61059b6109ec565b6001600160a01b0381166105e2576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6105eb81610a31565b50565b6105f66109ec565b5f80547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff84169081029190911790915560405190815230907fb25b38640ad709be28a74117ede8cc6094d9e8b3aa27330e26b10898c92ba5229060200160405180910390a250565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610583576040517f089676d50000000000000000000000000000000000000000000000000000000081523360048201526024016105d9565b6004546040515f916014916106f3914491602001918252602082015260400190565b604051602081830303815290604052805190602001205f1c61071591906116ec565b61058e9060016116c5565b5f8061072c83856116ff565b90506103e9670de0b6b3a764000082611716565b5f60091960ff8516016108f5575f856001600160a01b0316635e01eb5a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561078a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ae9190611729565b6001549091505b80156108eb575f6107d26107ca6001846116b2565b600190610a8d565b5090506107e0600182610af0565b506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f906001600160a01b038316906370a0823190602401602060405180830381865afa15801561083e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108629190611744565b905080156108d65761087e6001600160a01b0383168583610bdc565b816001600160a01b0316846001600160a01b0316306001600160a01b03167fad248945aa9c6e54a3aae4c347a04143e677a981dbefd64b871fd587ad6077c6846040516108cd91815260200190565b60405180910390a45b505080806108e39061175b565b9150506107b5565b505f9150506103e9565b61090160018481610c61565b5081156109e5576040517fae6393290000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152306024830152604482018490527f0000000000000000000000000000000000000000000000000000000000000000169063ae639329906064015f604051808303815f87803b15801561098e575f80fd5b505af11580156109a0573d5f803e3d5ffd5b50506040518481526001600160a01b03861692503091507f9614d1bfde1842c37d557aba9f2b69fa1ad92fef808d832d9f4b3ab5cdd06a7b9060200160405180910390a35b50806103e9565b5f546001600160a01b03163314610583576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016105d9565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f80835f01548310610acb576040517f4e23d03500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505f90815260019182016020526040902080549101546001600160a01b0390911691565b6001600160a01b0381165f9081526002830160205260408120548015610bd35783545f198083019101808214610b7d575f8181526001808801602090815260408084208685528185208154815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0391821617825582860154919095015554909216835260028901905290208390555b5f818152600180880160209081526040808420805473ffffffffffffffffffffffffffffffffffffffff1916815583018490559389556001600160a01b0388168352600289019052918120559250610563915050565b5f915050610563565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610c5c908490610d19565b505050565b6001600160a01b0382165f908152600284016020526040812054808203610cfb57505082546040805180820182526001600160a01b0385811680835260208084018781525f8781526001808c0184528782209651875473ffffffffffffffffffffffffffffffffffffffff19169616959095178655905194840194909455948201808955908352600288019094529190209190915561056b565b5f19015f90815260018086016020526040822001839055905061056b565b5f8060205f8451602086015f885af180610d38576040513d5f823e3d81fd5b50505f513d91508115610d4f578060011415610d5c565b6001600160a01b0384163b155b15610d9e576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016105d9565b50505050565b6001600160a01b03811681146105eb575f80fd5b8035610dc381610da4565b919050565b634e487b7160e01b5f52604160045260245ffd5b6040516080810167ffffffffffffffff81118282101715610dff57610dff610dc8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e2e57610e2e610dc8565b604052919050565b5f67ffffffffffffffff821115610e4f57610e4f610dc8565b5060051b60200190565b600281106105eb575f80fd5b5f60808284031215610e75575f80fd5b50919050565b5f805f8060e08587031215610e8e575f80fd5b8435610e9981610da4565b9350602085810135610eaa81610da4565b935060408681013567ffffffffffffffff811115610ec6575f80fd5b8701601f81018913610ed6575f80fd5b8035610ee9610ee482610e36565b610e05565b81815260079190911b8201840190848101908b831115610f07575f80fd5b928501925b82841015610f83576080848d031215610f23575f80fd5b610f2b610ddc565b8435610f3681610da4565b815284870135610f4581610e59565b8188015284860135610f5681610da4565b818701526060858101358015158114610f6d575f80fd5b9082015282526080939093019290850190610f0c565b809750505050505050610f998660608701610e65565b905092959194509250565b5f60208284031215610fb4575f80fd5b813567ffffffffffffffff811115610fca575f80fd5b8201610180818503121561056b575f80fd5b5f82601f830112610feb575f80fd5b81356020610ffb610ee483610e36565b8083825260208201915060208460051b87010193508684111561101c575f80fd5b602086015b848110156110385780358352918301918301611021565b509695505050505050565b5f82601f830112611052575f80fd5b813567ffffffffffffffff81111561106c5761106c610dc8565b61107f601f8201601f1916602001610e05565b818152846020838601011115611093575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156110c0575f80fd5b823567ffffffffffffffff808211156110d7575f80fd5b6110e386838701610fdc565b935060208501359150808211156110f8575f80fd5b5061110585828601611043565b9150509250929050565b803560048110610dc3575f80fd5b5f805f805f805f80610100898b031215611135575f80fd5b61113e89610db8565b975061114c60208a01610db8565b965061115a60408a0161110f565b955060608901359450608089013567ffffffffffffffff8082111561117d575f80fd5b6111898c838d01610fdc565b955060a08b013591508082111561119e575f80fd5b6111aa8c838d01610fdc565b945060c08b01359150808211156111bf575f80fd5b6111cb8c838d01610fdc565b935060e08b01359150808211156111e0575f80fd5b506111ed8b828c01611043565b9150509295985092959890939650565b5f6040820184151583526020604060208501528185518084526060860191506020870193505f5b8181101561124057845183529383019391830191600101611224565b5090979650505050505050565b5f805f6060848603121561125f575f80fd5b833567ffffffffffffffff80821115611276575f80fd5b61128287838801610fdc565b945060208601359350604086013591508082111561129e575f80fd5b506112ab86828701611043565b9150509250925092565b803560058110610dc3575f80fd5b5f805f805f805f60e0888a0312156112d9575f80fd5b87356112e481610da4565b965060208801356112f481610da4565b9550611302604089016112b5565b9450606088013567ffffffffffffffff8082111561131e575f80fd5b61132a8b838c01610fdc565b955060808a0135945060a08a0135915080821115611346575f80fd5b6113528b838c01610fdc565b935060c08a0135915080821115611367575f80fd5b506113748a828b01611043565b91505092959891949750929550565b5f60e08284031215610e75575f80fd5b5f80604083850312156113a4575f80fd5b823567ffffffffffffffff8111156113ba575f80fd5b6113c685828601611383565b92505060208301356113d781610da4565b809150509250929050565b5f805f805f805f80610100898b0312156113fa575f80fd5b61140389610db8565b975061141160208a01610db8565b965061141f60408a016112b5565b9550606089013567ffffffffffffffff8082111561143b575f80fd5b6114478c838d01610fdc565b965060808b013591508082111561145c575f80fd5b6114688c838d01610fdc565b955060a08b0135945060c08b01359150808211156111bf575f80fd5b5f805f60608486031215611496575f80fd5b833567ffffffffffffffff8111156114ac575f80fd5b6114b886828701611383565b93505060208401356114c981610da4565b929592945050506040919091013590565b5f805f805f805f60e0888a0312156114f0575f80fd5b87356114fb81610da4565b9650602088013561150b81610da4565b95506115196040890161110f565b945060608801359350608088013567ffffffffffffffff8082111561153c575f80fd5b6115488b838c01610fdc565b945060a08a0135915080821115611346575f80fd5b8151151581526101408101602083015161157b602084018215159052565b50604083015161158f604084018215159052565b5060608301516115a3606084018215159052565b5060808301516115b7608084018215159052565b5060a08301516115cb60a084018215159052565b5060c08301516115df60c084018215159052565b5060e08301516115f360e084018215159052565b5061010083810151151590830152610120928301511515929091019190915290565b5f60208284031215611625575f80fd5b813561056b81610da4565b5f60208284031215611640575f80fd5b813567ffffffffffffffff8116811461056b575f80fd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161167c5761167c611657565b5060010190565b634e487b7160e01b5f52602160045260245ffd5b5f602082840312156116a7575f80fd5b813561056b81610e59565b8181038181111561056357610563611657565b8082018082111561056357610563611657565b634e487b7160e01b5f52601260045260245ffd5b5f826116fa576116fa6116d8565b500690565b808202811582820484141761056357610563611657565b5f82611724576117246116d8565b500490565b5f60208284031215611739575f80fd5b815161056b81610da4565b5f60208284031215611754575f80fd5b5051919050565b5f8161176957611769611657565b505f19019056fea2646970667358221220aea5c8bf368b3395e3e5a1e55dcef9efff4c0d546b8e4bcdd6733bd7d8c71a9c64736f6c63430008180033","sourceMap":"1533:10528:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:539;;;;;;:::i;:::-;;:::i;:::-;;;3901:14:136;;3894:22;3876:41;;3864:2;3849:18;4430:539:3;;;;;;;;5575:2912;;;;;;:::i;:::-;;:::i;:::-;;;;4521:14:136;;4514:22;4496:41;;4568:2;4553:18;;4546:34;;;;4469:18;5575:2912:3;4328:258:136;1214:119:54;;;;;;:::i;:::-;;:::i;2441:326::-;;;;;;:::i;:::-;2697:4;2746:13;2441:326;;;;;;;;;;;;;;;;;;;;:::i;1366:127::-;;;;;;:::i;:::-;;:::i;2442:35:3:-;;;;;-1:-1:-1;;;2442:35:3;;;;;;;;;9439:18:136;9427:31;;;9409:50;;9397:2;9382:18;2442:35:3;9265:200:136;1526:246:54;;;;;;:::i;:::-;1737:4;1526:246;;;;;;;;;;2800:228;;;;;;:::i;2293:101:76:-;;;:::i;:::-;;1638:85;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:76;;;11711:74:136;;11699:2;11684:18;1638:85:76;11565:226:136;1805:318:54;;;;;;:::i;:::-;2054:4;2103:12;1805:318;;;;;;;;;;;;3370:194;;;;;;:::i;:::-;3515:4;;3370:194;;;;;;;2156:252;;;;;;:::i;5002:540:3:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5459:4:3;5421:42;;;-1:-1:-1;;;5473:36:3;;;;5002:540;;;;-1:-1:-1;5002:540:3;:::i;9414:99::-;;;:::i;:::-;;;16505:4:136;16493:17;;;16475:36;;16463:2;16448:18;9414:99:3;16333:184:136;2543:215:76;;;;;;:::i;:::-;;:::i;2149:39:3:-;;2186:2;2149:39;;8715:215;;;;;;:::i;:::-;;:::i;2250:37::-;;2285:2;2250:37;;4430:539;4598:4;467:18:56;:16;:18::i;:::-;4891:49:3::1;::::0;-1:-1:-1;;;;;4891:49:3;::::1;::::0;4928:4:::1;::::0;4891:49:::1;::::0;;;::::1;-1:-1:-1::0;4958:4:3::1;495:1:56;4430:539:3::0;;;;;;:::o;5575:2912::-;5678:12;5692:39;467:18:56;:16;:18::i;:::-;5743:17:3::1;-1:-1:-1::0;;;;;5791:14:3::1;5774:31;:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;5774:31:3::1;::::0;5770:294:::1;;6035:18;:16;:18::i;:::-;6021:32;;5770:294;6160:8;:10:::0;;;:8:::1;:10;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;6279:1:3::1;6255:21:::0;6215:26:::1;::::0;::::1;;::::0;-1:-1:-1;;;;6255:21:3;::::1;;;:25:::0;6251:2174:::1;;6296:15;6349:21:::0;;6314:57:::1;::::0;6349:21:::1;6314:26:::0;::::1;;::::0;-1:-1:-1;;;6349:21:3;::::1;;;6314:34;:57::i;:::-;6296:75:::0;-1:-1:-1;6404:17:3::1;6389:11;;::::0;::::1;:6:::0;:11:::1;:::i;:::-;:32;;;;;;;;:::i;:::-;::::0;6385:2030:::1;;7185:16;7204:75;7226:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;7241:11:::0;7254:15:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;7271:7;7204:21;:75::i;:::-;7185:94:::0;-1:-1:-1;7301:12:3;;7297:102:::1;;7337:43;7372:8:::0;7337:43;::::1;:::i;:::-;;;7297:102;6423:990;6385:2030;;;8188:16;8207:74;8229:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;8244:11:::0;8257:14:::1;::::0;;;::::1;::::0;::::1;;:::i;8207:74::-;8188:93:::0;-1:-1:-1;8303:12:3;;8299:102:::1;;8339:43;8374:8:::0;8339:43;::::1;:::i;:::-;;;8299:102;7419:996;6385:2030;6282:2143;6251:2174;8442:4;8434:46;;;5575:2912:::0;;;:::o;1214:119:54:-;1298:4;1214:119;;;;;:::o;1366:127::-;1458:4;1366:127;;;;;;:::o;2293:101:76:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;9414:99:3:-;9464:5;9488:18;:16;:18::i;:::-;9481:25;;9414:99;:::o;2543:215:76:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:76;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;11711:74:136::0;11684:18;;2672:31:76::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8715::3:-;1531:13:76;:11;:13::i;:::-;8804:21:3::1;:41:::0;;;::::1;-1:-1:-1::0;;;8804:41:3::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;8861:62:::1;::::0;9409:50:136;;;8898:4:3::1;::::0;8861:62:::1;::::0;9397:2:136;9382:18;8861:62:3::1;;;;;;;8715:215:::0;:::o;509:165:56:-;564:10;-1:-1:-1;;;;;586:6:56;564:29;;560:108;;616:41;;;;;646:10;616:41;;;11711:74:136;11684:18;;616:41:56;11565:226:136;11891:168:3;12022:8;;11987:44;;11941:5;;2285:2;;11987:44;;12004:16;;11987:44;;18747:19:136;;;18791:2;18782:12;;18775:28;18828:2;18819:12;;18590:247;11987:44:3;;;;;;;;;;;;;11977:55;;;;;;11972:61;;:74;;;;:::i;:::-;11971:80;;12050:1;11971:80;:::i;662:218:47:-;724:7;;837:5;841:1;837;:5;:::i;:::-;819:23;-1:-1:-1;860:13:47;465:4;819:23;860:13;:::i;9635:1997:3:-;9787:7;-1:-1:-1;;9810:27:3;;;;9806:1820;;9853:12;9882:6;-1:-1:-1;;;;;9868:31:3;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10053:22;:27;9853:48;;-1:-1:-1;10036:1074:3;10082:5;;10036:1074;;10113:15;10134:32;10160:5;10164:1;10160;:5;:::i;:::-;10134:22;;:25;:32::i;:::-;-1:-1:-1;10112:54:3;-1:-1:-1;10184:39:3;:22;10112:54;10184:29;:39::i;:::-;-1:-1:-1;10262:33:3;;;;;10289:4;10262:33;;;11711:74:136;10242:17:3;;-1:-1:-1;;;;;10262:18:3;;;;;11684::136;;10262:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10242:53;-1:-1:-1;10318:13:3;;10314:782;;10950:38;-1:-1:-1;;;;;10950:21:3;;10972:4;10978:9;10950:21;:38::i;:::-;11057:8;-1:-1:-1;;;;;11016:61:3;11051:4;-1:-1:-1;;;;;11016:61:3;11044:4;-1:-1:-1;;;;;11016:61:3;;11067:9;11016:61;;;;20037:25:136;;20025:2;20010:18;;19891:177;11016:61:3;;;;;;;;10314:782;10094:1016;;10089:3;;;;;:::i;:::-;;;;10036:1074;;;;11166:1;11159:8;;;;;9806:1820;11263:36;11297:1;11290:5;11297:1;11263:26;:36::i;:::-;-1:-1:-1;11318:11:3;;11314:273;;11454:44;;;;;-1:-1:-1;;;;;20511:15:136;;;11454:44:3;;;20493:34:136;11483:4:3;20543:18:136;;;20536:43;20595:18;;;20588:34;;;11454:6:3;:13;;;;20405:18:136;;11454:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11522:50:3;;20037:25:136;;;-1:-1:-1;;;;;11522:50:3;;;-1:-1:-1;11550:4:3;;-1:-1:-1;11522:50:3;;20025:2:136;20010:18;11522:50:3;;;;;;;11314:273;-1:-1:-1;11608:7:3;11601:14;;1796:162:76;1684:7;1710:6;-1:-1:-1;;;;;1710:6:76;735:10:104;1855:23:76;1851:101;;1901:40;;;;;735:10:104;1901:40:76;;;11711:74:136;11684:18;;1901:40:76;11565:226:136;2912:187:76;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:76;;;-1:-1:-1;;3020:17:76;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14295:230:50:-;14377:6;14385:7;14417:3;:8;;;14408:5;:17;14404:73;;14448:18;;;;;;;;;;;;;;14404:73;-1:-1:-1;;14927:6:50;14994:18;;;:11;;;;:18;;;;;15030:9;;15041:11;;;-1:-1:-1;;;;;15030:9:50;;;;14295:230::o;11914:1643::-;-1:-1:-1;;;;;12125:16:50;;11992:4;12125:16;;;:11;;;:16;;;;;;12200:13;;12196:1355;;12689:8;;-1:-1:-1;;12647:12:50;;;;12689;12815:26;;;12811:428;;12861:41;12905:22;;;:11;;;;:22;;;;;;;;13027:26;;;;;;:38;;;;-1:-1:-1;;13027:38:50;-1:-1:-1;;;;;13027:38:50;;;;;;;;;;;;;;;13151:13;;;;13139:26;;:11;;;:26;;;;:37;;;12811:428;13324:22;;;;:11;;;;:22;;;;;;;;13317:29;;-1:-1:-1;;13317:29:50;;;;;;;;13360:20;;;-1:-1:-1;;;;;13455:16:50;;;;:11;;;:16;;;;;13448:23;13324:11;-1:-1:-1;13486:11:50;;-1:-1:-1;;13486:11:50;12196:1355;13535:5;13528:12;;;;;1271:160:96;1380:43;;;-1:-1:-1;;;;;20825:55:136;;1380:43:96;;;20807:74:136;20897:18;;;;20890:34;;;1380:43:96;;;;;;;;;;20780:18:136;;;;1380:43:96;;;;;;;;;;;;;;1353:71;;1373:5;;1353:19;:71::i;:::-;1271:160;;;:::o;10330:882:50:-;-1:-1:-1;;;;;10553:16:50;;10420:4;10553:16;;;:11;;;:16;;;;;;10657:13;;;10653:543;;-1:-1:-1;;10715:8:50;;10771:35;;;;;;;;-1:-1:-1;;;;;10771:35:50;;;;;;;;;;;;;-1:-1:-1;10741:27:50;;;:11;;;;:27;;;;;:65;;;;-1:-1:-1;;10741:65:50;;;;;;;;;;;;;;;;;;10835:18;;;10824:29;;;11007:16;;;:11;;;:16;;;;;;:37;;;;11062:11;;10653:543;-1:-1:-1;;11124:12:50;11112:25;;;;:11;;;;:25;;;;;:31;:39;;;:25;-1:-1:-1;11169:12:50;;6550:720:96;6630:18;6658:19;6796:4;6793:1;6786:4;6780:11;6773:4;6767;6763:15;6760:1;6753:5;6746;6741:60;6853:7;6843:176;;6897:4;6891:11;6942:16;6939:1;6934:3;6919:40;6988:16;6983:3;6976:29;6843:176;-1:-1:-1;;7096:1:96;7090:8;7046:16;;-1:-1:-1;7122:15:96;;:68;;7174:11;7189:1;7174:16;;7122:68;;;-1:-1:-1;;;;;7140:26:96;;;:31;7122:68;7118:146;;;7213:40;;;;;-1:-1:-1;;;;;11729:55:136;;7213:40:96;;;11711:74:136;11684:18;;7213:40:96;11565:226:136;7118:146:96;6620:650;;6550:720;;:::o;14:154:136:-;-1:-1:-1;;;;;93:5:136;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:134;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:184::-;-1:-1:-1;;;361:1:136;354:88;461:4;458:1;451:15;485:4;482:1;475:15;501:253;573:2;567:9;615:4;603:17;;650:18;635:34;;671:22;;;632:62;629:88;;;697:18;;:::i;:::-;733:2;726:22;501:253;:::o;759:275::-;830:2;824:9;895:2;876:13;;-1:-1:-1;;872:27:136;860:40;;930:18;915:34;;951:22;;;912:62;909:88;;;977:18;;:::i;:::-;1013:2;1006:22;759:275;;-1:-1:-1;759:275:136:o;1039:194::-;1110:4;1143:18;1135:6;1132:30;1129:56;;;1165:18;;:::i;:::-;-1:-1:-1;1210:1:136;1206:14;1222:4;1202:25;;1039:194::o;1238:108::-;1320:1;1313:5;1310:12;1300:40;;1336:1;1333;1326:12;1351:168;1423:5;1468:3;1459:6;1454:3;1450:16;1446:26;1443:46;;;1485:1;1482;1475:12;1443:46;-1:-1:-1;1507:6:136;1351:168;-1:-1:-1;1351:168:136:o;1524:2111::-;1703:6;1711;1719;1727;1780:3;1768:9;1759:7;1755:23;1751:33;1748:53;;;1797:1;1794;1787:12;1748:53;1836:9;1823:23;1855:31;1880:5;1855:31;:::i;:::-;1905:5;-1:-1:-1;1929:2:136;1968:18;;;1955:32;1996:33;1955:32;1996:33;:::i;:::-;2048:7;-1:-1:-1;2074:2:136;2112:18;;;2099:32;2154:18;2143:30;;2140:50;;;2186:1;2183;2176:12;2140:50;2209:22;;2262:4;2254:13;;2250:27;-1:-1:-1;2240:55:136;;2291:1;2288;2281:12;2240:55;2327:2;2314:16;2350:71;2366:54;2417:2;2366:54;:::i;:::-;2350:71;:::i;:::-;2455:15;;;2537:1;2533:10;;;;2525:19;;2521:28;;;2486:12;;;;2561:19;;;2558:39;;;2593:1;2590;2583:12;2558:39;2617:11;;;;2637:874;2653:6;2648:3;2645:15;2637:874;;;2735:4;2729:3;2720:7;2716:17;2712:28;2709:48;;;2753:1;2750;2743:12;2709:48;2785:22;;:::i;:::-;2848:3;2835:17;2865:33;2890:7;2865:33;:::i;:::-;2911:24;;2976:12;;;2963:26;3002:40;2963:26;3002:40;:::i;:::-;3062:16;;;3055:33;3129:12;;;3116:26;3155:33;3116:26;3155:33;:::i;:::-;3208:16;;;3201:33;3257:2;3300:12;;;3287:26;3355:15;;3348:23;3336:36;;3326:64;;3386:1;3383;3376:12;3326:64;3410:16;;;3403:33;3449:20;;2679:4;2670:14;;;;;3489:12;;;;2637:874;;;3530:5;3520:15;;;;;;;;3554:75;3621:7;3616:2;3605:9;3601:18;3554:75;:::i;:::-;3544:85;;1524:2111;;;;;;;:::o;3928:395::-;4022:6;4075:2;4063:9;4054:7;4050:23;4046:32;4043:52;;;4091:1;4088;4081:12;4043:52;4131:9;4118:23;4164:18;4156:6;4153:30;4150:50;;;4196:1;4193;4186:12;4150:50;4219:22;;4275:3;4257:16;;;4253:26;4250:46;;;4292:1;4289;4282:12;4591:679;4645:5;4698:3;4691:4;4683:6;4679:17;4675:27;4665:55;;4716:1;4713;4706:12;4665:55;4752:6;4739:20;4778:4;4802:71;4818:54;4869:2;4818:54;:::i;4802:71::-;4895:3;4919:2;4914:3;4907:15;4947:4;4942:3;4938:14;4931:21;;5004:4;4998:2;4995:1;4991:10;4983:6;4979:23;4975:34;4961:48;;5032:3;5024:6;5021:15;5018:35;;;5049:1;5046;5039:12;5018:35;5085:4;5077:6;5073:17;5099:142;5115:6;5110:3;5107:15;5099:142;;;5181:17;;5169:30;;5219:12;;;;5132;;5099:142;;;-1:-1:-1;5259:5:136;4591:679;-1:-1:-1;;;;;;4591:679:136:o;5275:530::-;5317:5;5370:3;5363:4;5355:6;5351:17;5347:27;5337:55;;5388:1;5385;5378:12;5337:55;5424:6;5411:20;5450:18;5446:2;5443:26;5440:52;;;5472:18;;:::i;:::-;5516:55;5559:2;5540:13;;-1:-1:-1;;5536:27:136;5565:4;5532:38;5516:55;:::i;:::-;5596:2;5587:7;5580:19;5642:3;5635:4;5630:2;5622:6;5618:15;5614:26;5611:35;5608:55;;;5659:1;5656;5649:12;5608:55;5724:2;5717:4;5709:6;5705:17;5698:4;5689:7;5685:18;5672:55;5772:1;5747:16;;;5765:4;5743:27;5736:38;;;;5751:7;5275:530;-1:-1:-1;;;5275:530:136:o;5810:567::-;5912:6;5920;5973:2;5961:9;5952:7;5948:23;5944:32;5941:52;;;5989:1;5986;5979:12;5941:52;6029:9;6016:23;6058:18;6099:2;6091:6;6088:14;6085:34;;;6115:1;6112;6105:12;6085:34;6138:61;6191:7;6182:6;6171:9;6167:22;6138:61;:::i;:::-;6128:71;;6252:2;6241:9;6237:18;6224:32;6208:48;;6281:2;6271:8;6268:16;6265:36;;;6297:1;6294;6287:12;6265:36;;6320:51;6363:7;6352:8;6341:9;6337:24;6320:51;:::i;:::-;6310:61;;;5810:567;;;;;:::o;6382:160::-;6467:20;;6516:1;6506:12;;6496:40;;6532:1;6529;6522:12;6547:1355;6777:6;6785;6793;6801;6809;6817;6825;6833;6886:3;6874:9;6865:7;6861:23;6857:33;6854:53;;;6903:1;6900;6893:12;6854:53;6926:29;6945:9;6926:29;:::i;:::-;6916:39;;6974:38;7008:2;6997:9;6993:18;6974:38;:::i;:::-;6964:48;;7031:55;7082:2;7071:9;7067:18;7031:55;:::i;:::-;7021:65;;7133:2;7122:9;7118:18;7105:32;7095:42;;7188:3;7177:9;7173:19;7160:33;7212:18;7253:2;7245:6;7242:14;7239:34;;;7269:1;7266;7259:12;7239:34;7292:61;7345:7;7336:6;7325:9;7321:22;7292:61;:::i;:::-;7282:71;;7406:3;7395:9;7391:19;7378:33;7362:49;;7436:2;7426:8;7423:16;7420:36;;;7452:1;7449;7442:12;7420:36;7475:63;7530:7;7519:8;7508:9;7504:24;7475:63;:::i;:::-;7465:73;;7591:3;7580:9;7576:19;7563:33;7547:49;;7621:2;7611:8;7608:16;7605:36;;;7637:1;7634;7627:12;7605:36;7660:63;7715:7;7704:8;7693:9;7689:24;7660:63;:::i;:::-;7650:73;;7776:3;7765:9;7761:19;7748:33;7732:49;;7806:2;7796:8;7793:16;7790:36;;;7822:1;7819;7812:12;7790:36;;7845:51;7888:7;7877:8;7866:9;7862:24;7845:51;:::i;:::-;7835:61;;;6547:1355;;;;;;;;;;;:::o;7907:713::-;8071:4;8119:2;8108:9;8104:18;8163:6;8156:14;8149:22;8138:9;8131:41;8191:2;8229;8224;8213:9;8209:18;8202:30;8252:6;8287;8281:13;8318:6;8310;8303:22;8356:2;8345:9;8341:18;8334:25;;8394:2;8386:6;8382:15;8368:29;;8415:1;8425:169;8439:6;8436:1;8433:13;8425:169;;;8500:13;;8488:26;;8569:15;;;;8534:12;;;;8461:1;8454:9;8425:169;;;-1:-1:-1;8611:3:136;;7907:713;-1:-1:-1;;;;;;;7907:713:136:o;8625:635::-;8736:6;8744;8752;8805:2;8793:9;8784:7;8780:23;8776:32;8773:52;;;8821:1;8818;8811:12;8773:52;8861:9;8848:23;8890:18;8931:2;8923:6;8920:14;8917:34;;;8947:1;8944;8937:12;8917:34;8970:61;9023:7;9014:6;9003:9;8999:22;8970:61;:::i;:::-;8960:71;;9078:2;9067:9;9063:18;9050:32;9040:42;;9135:2;9124:9;9120:18;9107:32;9091:48;;9164:2;9154:8;9151:16;9148:36;;;9180:1;9177;9170:12;9148:36;;9203:51;9246:7;9235:8;9224:9;9220:24;9203:51;:::i;:::-;9193:61;;;8625:635;;;;;:::o;9470:157::-;9552:20;;9601:1;9591:12;;9581:40;;9617:1;9614;9607:12;9632:1250;9825:6;9833;9841;9849;9857;9865;9873;9926:3;9914:9;9905:7;9901:23;9897:33;9894:53;;;9943:1;9940;9933:12;9894:53;9982:9;9969:23;10001:31;10026:5;10001:31;:::i;:::-;10051:5;-1:-1:-1;10108:2:136;10093:18;;10080:32;10121:33;10080:32;10121:33;:::i;:::-;10173:7;-1:-1:-1;10199:52:136;10247:2;10232:18;;10199:52;:::i;:::-;10189:62;;10302:2;10291:9;10287:18;10274:32;10325:18;10366:2;10358:6;10355:14;10352:34;;;10382:1;10379;10372:12;10352:34;10405:61;10458:7;10449:6;10438:9;10434:22;10405:61;:::i;:::-;10395:71;;10513:3;10502:9;10498:19;10485:33;10475:43;;10571:3;10560:9;10556:19;10543:33;10527:49;;10601:2;10591:8;10588:16;10585:36;;;10617:1;10614;10607:12;10585:36;10640:63;10695:7;10684:8;10673:9;10669:24;10640:63;:::i;:::-;10630:73;;10756:3;10745:9;10741:19;10728:33;10712:49;;10786:2;10776:8;10773:16;10770:36;;;10802:1;10799;10792:12;10770:36;;10825:51;10868:7;10857:8;10846:9;10842:24;10825:51;:::i;:::-;10815:61;;;9632:1250;;;;;;;;;;:::o;10887:163::-;10954:5;10999:3;10990:6;10985:3;10981:16;10977:26;10974:46;;;11016:1;11013;11006:12;11055:505;11157:6;11165;11218:2;11206:9;11197:7;11193:23;11189:32;11186:52;;;11234:1;11231;11224:12;11186:52;11274:9;11261:23;11307:18;11299:6;11296:30;11293:50;;;11339:1;11336;11329:12;11293:50;11362:74;11428:7;11419:6;11408:9;11404:22;11362:74;:::i;:::-;11352:84;;;11486:2;11475:9;11471:18;11458:32;11499:31;11524:5;11499:31;:::i;:::-;11549:5;11539:15;;;11055:505;;;;;:::o;11796:1349::-;12023:6;12031;12039;12047;12055;12063;12071;12079;12132:3;12120:9;12111:7;12107:23;12103:33;12100:53;;;12149:1;12146;12139:12;12100:53;12172:29;12191:9;12172:29;:::i;:::-;12162:39;;12220:38;12254:2;12243:9;12239:18;12220:38;:::i;:::-;12210:48;;12277:52;12325:2;12314:9;12310:18;12277:52;:::i;:::-;12267:62;;12380:2;12369:9;12365:18;12352:32;12403:18;12444:2;12436:6;12433:14;12430:34;;;12460:1;12457;12450:12;12430:34;12483:61;12536:7;12527:6;12516:9;12512:22;12483:61;:::i;:::-;12473:71;;12597:3;12586:9;12582:19;12569:33;12553:49;;12627:2;12617:8;12614:16;12611:36;;;12643:1;12640;12633:12;12611:36;12666:63;12721:7;12710:8;12699:9;12695:24;12666:63;:::i;:::-;12656:73;;12776:3;12765:9;12761:19;12748:33;12738:43;;12834:3;12823:9;12819:19;12806:33;12790:49;;12864:2;12854:8;12851:16;12848:36;;;12880:1;12877;12870:12;13150:573;13261:6;13269;13277;13330:2;13318:9;13309:7;13305:23;13301:32;13298:52;;;13346:1;13343;13336:12;13298:52;13386:9;13373:23;13419:18;13411:6;13408:30;13405:50;;;13451:1;13448;13441:12;13405:50;13474:74;13540:7;13531:6;13520:9;13516:22;13474:74;:::i;:::-;13464:84;;;13598:2;13587:9;13583:18;13570:32;13611:31;13636:5;13611:31;:::i;:::-;13150:573;;13661:5;;-1:-1:-1;;;13713:2:136;13698:18;;;;13685:32;;13150:573::o;13728:1256::-;13924:6;13932;13940;13948;13956;13964;13972;14025:3;14013:9;14004:7;14000:23;13996:33;13993:53;;;14042:1;14039;14032:12;13993:53;14081:9;14068:23;14100:31;14125:5;14100:31;:::i;:::-;14150:5;-1:-1:-1;14207:2:136;14192:18;;14179:32;14220:33;14179:32;14220:33;:::i;:::-;14272:7;-1:-1:-1;14298:55:136;14349:2;14334:18;;14298:55;:::i;:::-;14288:65;;14400:2;14389:9;14385:18;14372:32;14362:42;;14455:3;14444:9;14440:19;14427:33;14479:18;14520:2;14512:6;14509:14;14506:34;;;14536:1;14533;14526:12;14506:34;14559:61;14612:7;14603:6;14592:9;14588:22;14559:61;:::i;:::-;14549:71;;14673:3;14662:9;14658:19;14645:33;14629:49;;14703:2;14693:8;14690:16;14687:36;;;14719:1;14716;14709:12;14989:1339;15206:13;;3710;3703:21;3691:34;;15177:3;15162:19;;15278:4;15270:6;15266:17;15260:24;15293:51;15338:4;15327:9;15323:20;15309:12;3710:13;3703:21;3691:34;;3640:91;15293:51;;15393:4;15385:6;15381:17;15375:24;15408:53;15455:4;15444:9;15440:20;15424:14;3710:13;3703:21;3691:34;;3640:91;15408:53;;15510:4;15502:6;15498:17;15492:24;15525:53;15572:4;15561:9;15557:20;15541:14;3710:13;3703:21;3691:34;;3640:91;15525:53;;15627:4;15619:6;15615:17;15609:24;15642:53;15689:4;15678:9;15674:20;15658:14;3710:13;3703:21;3691:34;;3640:91;15642:53;;15744:4;15736:6;15732:17;15726:24;15759:53;15806:4;15795:9;15791:20;15775:14;3710:13;3703:21;3691:34;;3640:91;15759:53;;15861:4;15853:6;15849:17;15843:24;15876:53;15923:4;15912:9;15908:20;15892:14;3710:13;3703:21;3691:34;;3640:91;15876:53;;15978:4;15970:6;15966:17;15960:24;15993:53;16040:4;16029:9;16025:20;16009:14;3710:13;3703:21;3691:34;;3640:91;15993:53;-1:-1:-1;16065:6:136;16108:15;;;16102:22;3710:13;3703:21;16165:18;;;3691:34;16203:6;16246:15;;;16240:22;3710:13;3703:21;16303:18;;;;3691:34;;;;14989:1339;:::o;16522:247::-;16581:6;16634:2;16622:9;16613:7;16609:23;16605:32;16602:52;;;16650:1;16647;16640:12;16602:52;16689:9;16676:23;16708:31;16733:5;16708:31;:::i;16774:284::-;16832:6;16885:2;16873:9;16864:7;16860:23;16856:32;16853:52;;;16901:1;16898;16891:12;16853:52;16940:9;16927:23;16990:18;16983:5;16979:30;16972:5;16969:41;16959:69;;17024:1;17021;17014:12;17063:184;-1:-1:-1;;;17112:1:136;17105:88;17212:4;17209:1;17202:15;17236:4;17233:1;17226:15;17252:135;17291:3;17312:17;;;17309:43;;17332:18;;:::i;:::-;-1:-1:-1;17379:1:136;17368:13;;17252:135::o;17392:184::-;-1:-1:-1;;;17441:1:136;17434:88;17541:4;17538:1;17531:15;17565:4;17562:1;17555:15;17581:267;17653:6;17706:2;17694:9;17685:7;17681:23;17677:32;17674:52;;;17722:1;17719;17712:12;17674:52;17761:9;17748:23;17780:38;17812:5;17780:38;:::i;18121:128::-;18188:9;;;18209:11;;;18206:37;;;18223:18;;:::i;18254:125::-;18319:9;;;18340:10;;;18337:36;;;18353:18;;:::i;18842:184::-;-1:-1:-1;;;18891:1:136;18884:88;18991:4;18988:1;18981:15;19015:4;19012:1;19005:15;19031:112;19063:1;19089;19079:35;;19094:18;;:::i;:::-;-1:-1:-1;19128:9:136;;19031:112::o;19148:168::-;19221:9;;;19252;;19269:15;;;19263:22;;19249:37;19239:71;;19290:18;;:::i;19321:120::-;19361:1;19387;19377:35;;19392:18;;:::i;:::-;-1:-1:-1;19426:9:136;;19321:120::o;19446:251::-;19516:6;19569:2;19557:9;19548:7;19544:23;19540:32;19537:52;;;19585:1;19582;19575:12;19537:52;19617:9;19611:16;19636:31;19661:5;19636:31;:::i;19702:184::-;19772:6;19825:2;19813:9;19804:7;19800:23;19796:32;19793:52;;;19841:1;19838;19831:12;19793:52;-1:-1:-1;19864:16:136;;19702:184;-1:-1:-1;19702:184:136:o;20073:136::-;20112:3;20140:5;20130:39;;20149:18;;:::i;:::-;-1:-1:-1;;;20185:18:136;;20073:136::o","linkReferences":{},"immutableReferences":{"12268":[{"start":1656,"length":32},{"start":2381,"length":32}],"542":[{"start":1030,"length":32}]}},"methodIdentifiers":{"LUCKY_NUMBER()":"f883fcaa","MAX_NUMBER()":"fea9b572","getHookFlags()":"d77153a7","getRandomNumber()":"dbdff2c1","hookSwapFeePercentage()":"4392312a","onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":"976907cc","onAfterInitialize(uint256[],uint256,bytes)":"38be241d","onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":"2754888d","onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":"18b6eb55","onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":"45421ec7","onBeforeInitialize(uint256[],bytes)":"1c149e28","onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":"ba5f9f40","onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":"5211fa77","onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":"a0e8f5ac","onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":"0b89f182","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setHookSwapFeePercentage(uint64)":"f9e5c197","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hookFeePercentage\",\"type\":\"uint256\"}],\"name\":\"HookSwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"LotteryFeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"LotteryHookExampleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWon\",\"type\":\"uint256\"}],\"name\":\"LotteryWinningsPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LUCKY_NUMBER\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookFlags\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"}],\"internalType\":\"struct HookFlags\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hookSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AfterSwapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"onAfterSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"hookAdjustedAmountCalculatedRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onBeforeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"onComputeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"onRegister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"swapFeePercentage\",\"type\":\"uint64\"}],\"name\":\"setHookSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"In this example, every time a swap is executed in a pool registered with this hook, a \\\"random\\\" number is drawn. If the drawn number is not equal to the LUCKY_NUMBER, the user will pay fees to the hook contract. But, if the drawn number is equal to LUCKY_NUMBER, the user won't pay hook fees and will receive all fees accrued by the hook.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}]},\"events\":{\"HookSwapFeePercentageChanged(address,uint256)\":{\"details\":\"Note that the initial fee will be zero, and no event is emitted on deployment.\",\"params\":{\"hookFeePercentage\":\"The new hook swap fee percentage\",\"hooksContract\":\"The hooks contract charging the fee\"}},\"LotteryFeeCollected(address,address,uint256)\":{\"details\":\"The current user did not win the lottery.\",\"params\":{\"feeAmount\":\"The amount of the fee collected\",\"hooksContract\":\"This contract\",\"token\":\"The token in which the fee was collected\"}},\"LotteryHookExampleRegistered(address,address)\":{\"details\":\"If the registration fails the call will revert, so there will be no event.\",\"params\":{\"hooksContract\":\"This contract\",\"pool\":\"The pool on which the hook was registered\"}},\"LotteryWinningsPaid(address,address,address,uint256)\":{\"params\":{\"amountWon\":\"The amount of tokens won\",\"hooksContract\":\"This contract\",\"token\":\"The token in which winnings were paid\",\"winner\":\"Address of the lottery winner\"}}},\"kind\":\"dev\",\"methods\":{\"getHookFlags()\":{\"details\":\"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \\\"mandatory\\\" hook.\",\"returns\":{\"_0\":\"Flags indicating which hooks the contract supports\"}},\"getRandomNumber()\":{\"details\":\"This external function was created to allow the test to access the same random number that will be used by the `onAfterSwap` hook, so we can predict whether the current call is a winner. In real applications, this function should not exist, or should return a different number every time, even if called in the same transaction.\",\"returns\":{\"_0\":\"number A pseudo-random number\"}},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsInRaw\":\"Actual amounts of tokens added, sorted in token registration order\",\"amountsInScaled18\":\"Actual amounts of tokens added, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountOut\":\"Amount of pool tokens minted\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsInRaw, potentially modified by the hook\"}},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"details\":\"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"bptAmountOut\":\"Amount of pool tokens minted during initialization\",\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool accepts the initialization results\"}},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsOutRaw\":\"Actual amount of tokens to receive, sorted in token registration order\",\"amountsOutScaled18\":\"Scaled amount of tokens to receive, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountIn\":\"Amount of pool tokens to burn\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsOutRaw, potentially modified by the hook\"}},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"details\":\"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see above for struct definition)\"},\"returns\":{\"hookAdjustedAmountCalculatedRaw\":\"New amount calculated, potentially modified by the hook\",\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"maxAmountsInScaled18\":\"Maximum amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeInitialize(uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool wishes to proceed with initialization\"}},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"maxBptAmountIn\":\"Maximum amount of input pool tokens\",\"minAmountsOutScaled18\":\"Minimum output amounts, sorted in token registration order\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"details\":\"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the Vault (poolData, token config, etc.)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"details\":\"Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the Vault (poolData, token config, etc.)\",\"staticSwapFeePercentage\":\"18-decimal FP value of the static swap fee percentage, for reference\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"Value of the swap fee percentage, as an 18-decimal FP value\"}},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"details\":\"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.\",\"params\":{\"factory\":\"Address of the pool factory (contract deploying the pool)\",\"liquidityManagement\":\"Liquidity management flags indicating which functions are enabled\",\"pool\":\"Address of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"},\"returns\":{\"_0\":\"success True if the hook allowed the registration, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setHookSwapFeePercentage(uint64)\":{\"details\":\"Sets the hook swap fee percentage, which will be accrued after a swap was executed. This function must be permissioned.\",\"params\":{\"swapFeePercentage\":\"The new swap fee percentage\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"IndexOutOfBounds()\":[{\"notice\":\"An index is beyond the current bounds of the set.\"}],\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}]},\"events\":{\"HookSwapFeePercentageChanged(address,uint256)\":{\"notice\":\"The swap hook fee percentage has been changed.\"},\"LotteryFeeCollected(address,address,uint256)\":{\"notice\":\"Fee collected and added to the lottery pot.\"},\"LotteryHookExampleRegistered(address,address)\":{\"notice\":\"A new `LotteryHookExample` contract has been registered successfully for a given factory and pool.\"},\"LotteryWinningsPaid(address,address,address,uint256)\":{\"notice\":\"Lottery proceeds were paid to a lottery winner.\"}},\"kind\":\"user\",\"methods\":{\"getHookFlags()\":{\"notice\":\"Return the set of hooks implemented by the contract.\"},\"getRandomNumber()\":{\"notice\":\"Generate a pseudo-random number.\"},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed after adding liquidity.\"},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"notice\":\"Hook to be executed after pool initialization.\"},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed after removing liquidity.\"},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"notice\":\"Called after a swap to perform further actions once the balances have been updated by the swap.\"},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed before adding liquidity.\"},\"onBeforeInitialize(uint256[],bytes)\":{\"notice\":\"Hook executed before pool initialization.\"},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed before removing liquidity.\"},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"notice\":\"Called before a swap to give the Pool an opportunity to perform actions.\"},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"notice\":\"Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees.\"},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"notice\":\"Hook executed when a pool is registered with a non-zero hooks contract.\"}},\"notice\":\"Hook that randomly rewards accumulated fees to a user performing a swap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/hooks/LotteryHookExample.sol\":\"LotteryHookExample\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"contracts/hooks/LotteryHookExample.sol\":{\"keccak256\":\"0xc6c324564f43aed4204e987e725e6a44dee298e2f90cc5b993caf549fe5b74a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3e2cc76bc12304ad40bc8e25796672af4e4c41cc4d591022ea7282a182703c6f\",\"dweb:/ipfs/Qmf2fTN4fY5ePZyFnkaLPJkFbZEQhAzEHWAm79kx9hgRZB\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87\",\"dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol\":{\"keccak256\":\"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452\",\"dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c\",\"dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol\":{\"keccak256\":\"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f\",\"dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol\":{\"keccak256\":\"0x265cba6f0225fae5867e47ead3b7d51ea124c6599d450b361bb86795ffb0a586\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9363b61e7b592c6d9476cfcdc9d468669f3e9d2d232ad426f6c5c6c00247258e\",\"dweb:/ipfs/QmT771Kpp4VswEcBCJCMxKKKiRNMcLJeziKCisjLrc2opx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol\":{\"keccak256\":\"0x630ca7522d58e5d4c6777c524d32eaf805cc9af84428c51f693315984de61c70\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://40470293be2b52718e9b9b858030ec27a8c55bfcb626c53db0c5d45a3445d2a5\",\"dweb:/ipfs/QmeJ6Rr7VL74FZsyrLgQWyPFagy1r5C8LkzqMaSrrj9zZ3\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566\",\"dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol\":{\"keccak256\":\"0xe68fbe2bef8c4fda8cf43d186d0e5518f9d76e57ac1c2f8082a1d0bcf444ace7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://614fb11ff5f7ea15cab882dfe4c7f69656eb5ad0e7cb217338664d8f1d0403c7\",\"dweb:/ipfs/QmUPZRXKFLsGEiPM38uDz14EVvJV81NCNBoWajmAbEmDka\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol\":{\"keccak256\":\"0x3bf1cfa4716401af08fd265db6ebbaad011d94d4531be5a6289aafbe4dc02f0f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7969b076f81af1fec02a0cc572ea56be691315bbcc761bb47e38aecb86ae15fc\",\"dweb:/ipfs/QmPkYWjEEj9Kzrbhcc6i8mmB1WAopcf13Ue2ZhayTXtnBm\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol\":{\"keccak256\":\"0xfa87a090e0b1fc87e34b6a891b7abd4697e75997e37d073020b91c7c408bffe3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b33f211008d57462d8b4598b78e477ce6ee53f0c1172682b94e896954752fe9\",\"dweb:/ipfs/QmVzjPRey6qss4ucJx3Mb1gs5MAyLKcLUD5tLt9KNn2SNR\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol\":{\"keccak256\":\"0x2c6f4f4d714a0f1e7e648909753839da8182117f22018f4337f9632f9c40597b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://99fb94d7fcf9f972f4aec716d7d4be43e3d28f90f8f5923b9b8245be178e01aa\",\"dweb:/ipfs/QmeLSFfcvYwmPpQ58yESVjYXPY13NzGU28WjxkWUj8sgqx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol\":{\"keccak256\":\"0x976def53871db0ad0db3504086a783508b0c293b86364c8985d6700283986799\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9a2904288327a95373e32d99b2244a7afcf9f741b970ff34af6a933076076e6\",\"dweb:/ipfs/QmaS4adLMjzagUsqYhtxo7KJW2kZogx5orQgvfVzLR3dzW\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol\":{\"keccak256\":\"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3\",\"dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/FixedPoint.sol\":{\"keccak256\":\"0xfcc6c79162990c47e5e417050b0c5c2dd6c09d2d5f0fb87ec8fe0b04fcb31cf3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ddbda64395d4453492e960044e6d144484f101480ce0dfe5483773f0882165eb\",\"dweb:/ipfs/QmazqRJiTWe86mq4DntV69UDEABFe76jLsHcjtQGxfvhps\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/LogExpMath.sol\":{\"keccak256\":\"0x70449e2b423b9850e39adddd7301205aa8b6e9e4ae788fd44d0968cac018eb2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce2174a3629b45dca032f9cf53df35dea240626913b8882a9e2da21610b02796\",\"dweb:/ipfs/Qmf8E4DePnZXjqb3V4A38gSobjgRK6VqavqPByuXvJxtBG\"]},\"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0xfd3f84a9423832247972ff876aee385022c646369d522606d89c778648d17500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://994020da323c02400f357fd998db15c4db6b644735e4e84d052c5b20fa186c0f\",\"dweb:/ipfs/QmPfheadwjpmxVHYmsyFr2W8QwZv2Gd4PxTcQpDoACF8t5\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol\":{\"keccak256\":\"0xe987f0806641ac62fc66a6f3b0c6b58a44832c01a1c95f349eb880b00529756a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f8fc15c0fc44dd7032aa5ece3f281d1d83076719ef9b6f6442be79a62e2c1848\",\"dweb:/ipfs/QmVAZSVhzg6fb3ChkCeAPtLLwqnwmxdkxrenvJaf83trNC\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol\":{\"keccak256\":\"0x0989167a7367161261e117a00cacb0ab4b66a9c442556841faa7b7cb5a4eb846\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9cc23603607cae657ebb11bdee1d3f40bc5dbf2140474b5212a0f743d524cdba\",\"dweb:/ipfs/QmVqUsVmXKQvmxqLY6oxK8JjuMGrCLaV8VihstXR5AoejG\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf\",\"dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x18436638da96539b6a9f971f8ce332c6fcad32d15c988af689b174f753d9936b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0351b5b167c9f0f6eb670bc6db5e9579aadb9a42edc62256c182695c3e9bf47e\",\"dweb:/ipfs/QmSQPNXU4NYhYojvyqHRzQx2duRx5njv6AHssoJMQb8Tq1\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xe484b91c24d898c84aebae9c06263523a27582e6c97909d9ea71a4e15dc44fa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ca1ffd7dbe0cf24fae85132e0b33bb26f6ff7935effd0d73f1f67e13bff4032\",\"dweb:/ipfs/QmetqL3cbjn5pR4vVtnkWZBYH5LPvEsPoVrd6bDwGe2ZfJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x3f6500df17ff64f838b357a58be5a2d8e8cc937db0cf10504c7049f13608ab66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a0285cedb657d751d809a543e7a3b8a3d541701046808b9d6b0fa2572bac256\",\"dweb:/ipfs/QmTaxGdRkw56LhPRc9F9SLTufmQ37XMgsihdESHREWpwRd\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"vault","type":"address"},{"internalType":"address","name":"router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"IndexOutOfBounds"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"type":"error","name":"SafeERC20FailedOperation"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"SenderIsNotVault"},{"inputs":[{"internalType":"address","name":"hooksContract","type":"address","indexed":true},{"internalType":"uint256","name":"hookFeePercentage","type":"uint256","indexed":false}],"type":"event","name":"HookSwapFeePercentageChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"hooksContract","type":"address","indexed":true},{"internalType":"contract IERC20","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"feeAmount","type":"uint256","indexed":false}],"type":"event","name":"LotteryFeeCollected","anonymous":false},{"inputs":[{"internalType":"address","name":"hooksContract","type":"address","indexed":true},{"internalType":"address","name":"pool","type":"address","indexed":true}],"type":"event","name":"LotteryHookExampleRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"hooksContract","type":"address","indexed":true},{"internalType":"address","name":"winner","type":"address","indexed":true},{"internalType":"contract IERC20","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amountWon","type":"uint256","indexed":false}],"type":"event","name":"LotteryWinningsPaid","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"LUCKY_NUMBER","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_NUMBER","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"getHookFlags","outputs":[{"internalType":"struct HookFlags","name":"","type":"tuple","components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRandomNumber","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"hookSwapFeePercentage","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum AddLiquidityKind","name":"","type":"uint8"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsInRaw","type":"uint256[]"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterAddLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterInitialize","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum RemoveLiquidityKind","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsOutRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterRemoveLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"struct AfterSwapParams","name":"params","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountInScaled18","type":"uint256"},{"internalType":"uint256","name":"amountOutScaled18","type":"uint256"},{"internalType":"uint256","name":"tokenInBalanceScaled18","type":"uint256"},{"internalType":"uint256","name":"tokenOutBalanceScaled18","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedScaled18","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"onAfterSwap","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"hookAdjustedAmountCalculatedRaw","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum AddLiquidityKind","name":"","type":"uint8"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeAddLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeInitialize","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum RemoveLiquidityKind","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeRemoveLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct PoolSwapParams","name":"","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeSwap","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct PoolSwapParams","name":"","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"onComputeDynamicSwapFeePercentage","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct TokenConfig[]","name":"","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"struct LiquidityManagement","name":"","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"onRegister","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"uint64","name":"swapFeePercentage","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setHookSwapFeePercentage"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"getHookFlags()":{"details":"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \"mandatory\" hook.","returns":{"_0":"Flags indicating which hooks the contract supports"}},"getRandomNumber()":{"details":"This external function was created to allow the test to access the same random number that will be used by the `onAfterSwap` hook, so we can predict whether the current call is a winner. In real applications, this function should not exist, or should return a different number every time, even if called in the same transaction.","returns":{"_0":"number A pseudo-random number"}},"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":{"details":"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"amountsInRaw":"Actual amounts of tokens added, sorted in token registration order","amountsInScaled18":"Actual amounts of tokens added, sorted in token registration order","balancesScaled18":"Current pool balances, sorted in token registration order","bptAmountOut":"Amount of pool tokens minted","kind":"The type of add liquidity operation (e.g., proportional, custom)","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated an add liquidity operation on the Vault","userData":"Additional (optional) data provided by the user"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"New amountsInRaw, potentially modified by the hook"}},"onAfterInitialize(uint256[],uint256,bytes)":{"details":"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"bptAmountOut":"Amount of pool tokens minted during initialization","exactAmountsIn":"Exact amounts of input tokens","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"success True if the pool accepts the initialization results"}},"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":{"details":"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"amountsOutRaw":"Actual amount of tokens to receive, sorted in token registration order","amountsOutScaled18":"Scaled amount of tokens to receive, sorted in token registration order","balancesScaled18":"Current pool balances, sorted in token registration order","bptAmountIn":"Amount of pool tokens to burn","kind":"The type of remove liquidity operation (e.g., proportional, custom)","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated a remove liquidity operation on the Vault","userData":"Additional (optional) data provided by the user"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"New amountsOutRaw, potentially modified by the hook"}},"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":{"details":"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see above for struct definition)"},"returns":{"hookAdjustedAmountCalculatedRaw":"New amount calculated, potentially modified by the hook","success":"True if the pool wishes to proceed with settlement"}},"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":{"details":"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"balancesScaled18":"Current pool balances, sorted in token registration order","kind":"The type of add liquidity operation (e.g., proportional, custom)","maxAmountsInScaled18":"Maximum amounts of input tokens","minBptAmountOut":"Minimum amount of output pool tokens","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated an add liquidity operation on the Vault","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onBeforeInitialize(uint256[],bytes)":{"details":"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"exactAmountsIn":"Exact amounts of input tokens","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"success True if the pool wishes to proceed with initialization"}},"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":{"details":"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"balancesScaled18":"Current pool balances, sorted in token registration order","kind":"The type of remove liquidity operation (e.g., proportional, custom)","maxBptAmountIn":"Maximum amount of input pool tokens","minAmountsOutScaled18":"Minimum output amounts, sorted in token registration order","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated a remove liquidity operation on the Vault","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":{"details":"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see PoolSwapParams for struct definition)","pool":"Pool address, used to get pool information from the Vault (poolData, token config, etc.)"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":{"details":"Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see PoolSwapParams for struct definition)","pool":"Pool address, used to get pool information from the Vault (poolData, token config, etc.)","staticSwapFeePercentage":"18-decimal FP value of the static swap fee percentage, for reference"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"Value of the swap fee percentage, as an 18-decimal FP value"}},"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":{"details":"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.","params":{"factory":"Address of the pool factory (contract deploying the pool)","liquidityManagement":"Liquidity management flags indicating which functions are enabled","pool":"Address of the pool","tokenConfig":"An array of descriptors for the tokens the pool will manage"},"returns":{"_0":"success True if the hook allowed the registration, false otherwise"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setHookSwapFeePercentage(uint64)":{"details":"Sets the hook swap fee percentage, which will be accrued after a swap was executed. This function must be permissioned.","params":{"swapFeePercentage":"The new swap fee percentage"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"getHookFlags()":{"notice":"Return the set of hooks implemented by the contract."},"getRandomNumber()":{"notice":"Generate a pseudo-random number."},"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":{"notice":"Hook to be executed after adding liquidity."},"onAfterInitialize(uint256[],uint256,bytes)":{"notice":"Hook to be executed after pool initialization."},"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":{"notice":"Hook to be executed after removing liquidity."},"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":{"notice":"Called after a swap to perform further actions once the balances have been updated by the swap."},"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":{"notice":"Hook to be executed before adding liquidity."},"onBeforeInitialize(uint256[],bytes)":{"notice":"Hook executed before pool initialization."},"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":{"notice":"Hook to be executed before removing liquidity."},"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":{"notice":"Called before a swap to give the Pool an opportunity to perform actions."},"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":{"notice":"Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees."},"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":{"notice":"Hook executed when a pool is registered with a non-zero hooks contract."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/hooks/LotteryHookExample.sol":"LotteryHookExample"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/hooks/LotteryHookExample.sol":{"keccak256":"0xc6c324564f43aed4204e987e725e6a44dee298e2f90cc5b993caf549fe5b74a3","urls":["bzz-raw://3e2cc76bc12304ad40bc8e25796672af4e4c41cc4d591022ea7282a182703c6f","dweb:/ipfs/Qmf2fTN4fY5ePZyFnkaLPJkFbZEQhAzEHWAm79kx9hgRZB"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"keccak256":"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2","urls":["bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87","dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol":{"keccak256":"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906","urls":["bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452","dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol":{"keccak256":"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a","urls":["bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c","dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol":{"keccak256":"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638","urls":["bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f","dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol":{"keccak256":"0x265cba6f0225fae5867e47ead3b7d51ea124c6599d450b361bb86795ffb0a586","urls":["bzz-raw://9363b61e7b592c6d9476cfcdc9d468669f3e9d2d232ad426f6c5c6c00247258e","dweb:/ipfs/QmT771Kpp4VswEcBCJCMxKKKiRNMcLJeziKCisjLrc2opx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol":{"keccak256":"0x630ca7522d58e5d4c6777c524d32eaf805cc9af84428c51f693315984de61c70","urls":["bzz-raw://40470293be2b52718e9b9b858030ec27a8c55bfcb626c53db0c5d45a3445d2a5","dweb:/ipfs/QmeJ6Rr7VL74FZsyrLgQWyPFagy1r5C8LkzqMaSrrj9zZ3"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol":{"keccak256":"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c","urls":["bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566","dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol":{"keccak256":"0xe68fbe2bef8c4fda8cf43d186d0e5518f9d76e57ac1c2f8082a1d0bcf444ace7","urls":["bzz-raw://614fb11ff5f7ea15cab882dfe4c7f69656eb5ad0e7cb217338664d8f1d0403c7","dweb:/ipfs/QmUPZRXKFLsGEiPM38uDz14EVvJV81NCNBoWajmAbEmDka"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol":{"keccak256":"0x3bf1cfa4716401af08fd265db6ebbaad011d94d4531be5a6289aafbe4dc02f0f","urls":["bzz-raw://7969b076f81af1fec02a0cc572ea56be691315bbcc761bb47e38aecb86ae15fc","dweb:/ipfs/QmPkYWjEEj9Kzrbhcc6i8mmB1WAopcf13Ue2ZhayTXtnBm"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol":{"keccak256":"0xfa87a090e0b1fc87e34b6a891b7abd4697e75997e37d073020b91c7c408bffe3","urls":["bzz-raw://2b33f211008d57462d8b4598b78e477ce6ee53f0c1172682b94e896954752fe9","dweb:/ipfs/QmVzjPRey6qss4ucJx3Mb1gs5MAyLKcLUD5tLt9KNn2SNR"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol":{"keccak256":"0x2c6f4f4d714a0f1e7e648909753839da8182117f22018f4337f9632f9c40597b","urls":["bzz-raw://99fb94d7fcf9f972f4aec716d7d4be43e3d28f90f8f5923b9b8245be178e01aa","dweb:/ipfs/QmeLSFfcvYwmPpQ58yESVjYXPY13NzGU28WjxkWUj8sgqx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol":{"keccak256":"0x976def53871db0ad0db3504086a783508b0c293b86364c8985d6700283986799","urls":["bzz-raw://e9a2904288327a95373e32d99b2244a7afcf9f741b970ff34af6a933076076e6","dweb:/ipfs/QmaS4adLMjzagUsqYhtxo7KJW2kZogx5orQgvfVzLR3dzW"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol":{"keccak256":"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3","urls":["bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3","dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/FixedPoint.sol":{"keccak256":"0xfcc6c79162990c47e5e417050b0c5c2dd6c09d2d5f0fb87ec8fe0b04fcb31cf3","urls":["bzz-raw://ddbda64395d4453492e960044e6d144484f101480ce0dfe5483773f0882165eb","dweb:/ipfs/QmazqRJiTWe86mq4DntV69UDEABFe76jLsHcjtQGxfvhps"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/LogExpMath.sol":{"keccak256":"0x70449e2b423b9850e39adddd7301205aa8b6e9e4ae788fd44d0968cac018eb2a","urls":["bzz-raw://ce2174a3629b45dca032f9cf53df35dea240626913b8882a9e2da21610b02796","dweb:/ipfs/Qmf8E4DePnZXjqb3V4A38gSobjgRK6VqavqPByuXvJxtBG"],"license":"MIT"},"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/EnumerableMap.sol":{"keccak256":"0xfd3f84a9423832247972ff876aee385022c646369d522606d89c778648d17500","urls":["bzz-raw://994020da323c02400f357fd998db15c4db6b644735e4e84d052c5b20fa186c0f","dweb:/ipfs/QmPfheadwjpmxVHYmsyFr2W8QwZv2Gd4PxTcQpDoACF8t5"],"license":"MIT"},"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol":{"keccak256":"0xe987f0806641ac62fc66a6f3b0c6b58a44832c01a1c95f349eb880b00529756a","urls":["bzz-raw://f8fc15c0fc44dd7032aa5ece3f281d1d83076719ef9b6f6442be79a62e2c1848","dweb:/ipfs/QmVAZSVhzg6fb3ChkCeAPtLLwqnwmxdkxrenvJaf83trNC"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol":{"keccak256":"0x0989167a7367161261e117a00cacb0ab4b66a9c442556841faa7b7cb5a4eb846","urls":["bzz-raw://9cc23603607cae657ebb11bdee1d3f40bc5dbf2140474b5212a0f743d524cdba","dweb:/ipfs/QmVqUsVmXKQvmxqLY6oxK8JjuMGrCLaV8VihstXR5AoejG"],"license":"GPL-3.0-or-later"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol":{"keccak256":"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253","urls":["bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73","dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol":{"keccak256":"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c","urls":["bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba","dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06","urls":["bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf","dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28","urls":["bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323","dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x18436638da96539b6a9f971f8ce332c6fcad32d15c988af689b174f753d9936b","urls":["bzz-raw://0351b5b167c9f0f6eb670bc6db5e9579aadb9a42edc62256c182695c3e9bf47e","dweb:/ipfs/QmSQPNXU4NYhYojvyqHRzQx2duRx5njv6AHssoJMQb8Tq1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xe484b91c24d898c84aebae9c06263523a27582e6c97909d9ea71a4e15dc44fa2","urls":["bzz-raw://0ca1ffd7dbe0cf24fae85132e0b33bb26f6ff7935effd0d73f1f67e13bff4032","dweb:/ipfs/QmetqL3cbjn5pR4vVtnkWZBYH5LPvEsPoVrd6bDwGe2ZfJ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Errors.sol":{"keccak256":"0x3f6500df17ff64f838b357a58be5a2d8e8cc937db0cf10504c7049f13608ab66","urls":["bzz-raw://0a0285cedb657d751d809a543e7a3b8a3d541701046808b9d6b0fa2572bac256","dweb:/ipfs/QmTaxGdRkw56LhPRc9F9SLTufmQ37XMgsihdESHREWpwRd"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"],"license":"MIT"},"lib/permit2/src/interfaces/IAllowanceTransfer.sol":{"keccak256":"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29","urls":["bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0","dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN"],"license":"MIT"},"lib/permit2/src/interfaces/IEIP712.sol":{"keccak256":"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138","urls":["bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72","dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/hooks/LotteryHookExample.sol","id":959,"exportedSymbols":{"AfterSwapParams":[6626],"BaseHooks":[12152],"EnumerableMap":[11340],"FixedPoint":[8820],"HookFlags":[6452],"IERC20":[52306],"IHooks":[4087],"IRouterCommon":[4959],"IVault":[5028],"LiquidityManagement":[6405],"LotteryHookExample":[958],"Ownable":[48503],"SafeERC20":[52779],"SwapKind":[6560],"TokenConfig":[6519],"VaultGuard":[12307]},"nodeType":"SourceUnit","src":"46:12016:3","nodes":[{"id":496,"nodeType":"PragmaDirective","src":"46:24:3","nodes":[],"literals":["solidity","^","0.8",".24"]},{"id":498,"nodeType":"ImportDirective","src":"72:72:3","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":52307,"symbolAliases":[{"foreign":{"id":497,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52306,"src":"81:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":500,"nodeType":"ImportDirective","src":"145:69:3","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":48504,"symbolAliases":[{"foreign":{"id":499,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48503,"src":"154:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":502,"nodeType":"ImportDirective","src":"215:84:3","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":52780,"symbolAliases":[{"foreign":{"id":501,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52779,"src":"224:9:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":504,"nodeType":"ImportDirective","src":"301:81:3","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/IHooks.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":4088,"symbolAliases":[{"foreign":{"id":503,"name":"IHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"310:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":506,"nodeType":"ImportDirective","src":"383:95:3","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/IRouterCommon.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":4960,"symbolAliases":[{"foreign":{"id":505,"name":"IRouterCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"392:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":508,"nodeType":"ImportDirective","src":"479:81:3","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/IVault.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":5029,"symbolAliases":[{"foreign":{"id":507,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"488:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":514,"nodeType":"ImportDirective","src":"561:169:3","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/VaultTypes.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":6697,"symbolAliases":[{"foreign":{"id":509,"name":"AfterSwapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"574:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":510,"name":"LiquidityManagement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"595:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":511,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"620:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":512,"name":"TokenConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"634:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":513,"name":"HookFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"651:9:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":516,"nodeType":"ImportDirective","src":"732:106:3","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/openzeppelin/EnumerableMap.sol","file":"@balancer-labs/v3-solidity-utils/contracts/openzeppelin/EnumerableMap.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":11341,"symbolAliases":[{"foreign":{"id":515,"name":"EnumerableMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11340,"src":"741:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":518,"nodeType":"ImportDirective","src":"839:92:3","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/solidity-utils/contracts/math/FixedPoint.sol","file":"@balancer-labs/v3-solidity-utils/contracts/math/FixedPoint.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":8821,"symbolAliases":[{"foreign":{"id":517,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"848:10:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":520,"nodeType":"ImportDirective","src":"932:78:3","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol","file":"@balancer-labs/v3-vault/contracts/VaultGuard.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":12308,"symbolAliases":[{"foreign":{"id":519,"name":"VaultGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12307,"src":"941:10:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":522,"nodeType":"ImportDirective","src":"1011:76:3","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol","file":"@balancer-labs/v3-vault/contracts/BaseHooks.sol","nameLocation":"-1:-1:-1","scope":959,"sourceUnit":12153,"symbolAliases":[{"foreign":{"id":521,"name":"BaseHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12152,"src":"1020:9:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":958,"nodeType":"ContractDefinition","src":"1533:10528:3","nodes":[{"id":532,"nodeType":"UsingForDirective","src":"1601:29:3","nodes":[],"global":false,"libraryName":{"id":530,"name":"FixedPoint","nameLocations":["1607:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":8820,"src":"1607:10:3"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":536,"nodeType":"UsingForDirective","src":"1635:57:3","nodes":[],"global":false,"libraryName":{"id":533,"name":"EnumerableMap","nameLocations":["1641:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":11340,"src":"1641:13:3"},"typeName":{"id":535,"nodeType":"UserDefinedTypeName","pathNode":{"id":534,"name":"EnumerableMap.IERC20ToUint256Map","nameLocations":["1659:13:3","1673:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":10946,"src":"1659:32:3"},"referencedDeclaration":10946,"src":"1659:32:3","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$10946_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}}},{"id":540,"nodeType":"UsingForDirective","src":"1697:27:3","nodes":[],"global":false,"libraryName":{"id":537,"name":"SafeERC20","nameLocations":["1703:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":52779,"src":"1703:9:3"},"typeName":{"id":539,"nodeType":"UserDefinedTypeName","pathNode":{"id":538,"name":"IERC20","nameLocations":["1717:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"1717:6:3"},"referencedDeclaration":52306,"src":"1717:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}}},{"id":542,"nodeType":"VariableDeclaration","src":"1836:40:3","nodes":[],"constant":false,"mutability":"immutable","name":"_trustedRouter","nameLocation":"1862:14:3","scope":958,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"1836:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":544,"nodeType":"VariableDeclaration","src":"1882:41:3","nodes":[],"constant":false,"mutability":"immutable","name":"_allowedFactory","nameLocation":"1908:15:3","scope":958,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"1882:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":547,"nodeType":"VariableDeclaration","src":"2149:39:3","nodes":[],"constant":true,"functionSelector":"f883fcaa","mutability":"constant","name":"LUCKY_NUMBER","nameLocation":"2171:12:3","scope":958,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":545,"name":"uint8","nodeType":"ElementaryTypeName","src":"2149:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3130","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"id":550,"nodeType":"VariableDeclaration","src":"2250:37:3","nodes":[],"constant":true,"functionSelector":"fea9b572","mutability":"constant","name":"MAX_NUMBER","nameLocation":"2272:10:3","scope":958,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":548,"name":"uint8","nodeType":"ElementaryTypeName","src":"2250:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"id":552,"nodeType":"VariableDeclaration","src":"2442:35:3","nodes":[],"constant":false,"functionSelector":"4392312a","mutability":"mutable","name":"hookSwapFeePercentage","nameLocation":"2456:21:3","scope":958,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":551,"name":"uint64","nodeType":"ElementaryTypeName","src":"2442:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"id":555,"nodeType":"VariableDeclaration","src":"2524:63:3","nodes":[],"constant":false,"mutability":"mutable","name":"_tokensWithAccruedFees","nameLocation":"2565:22:3","scope":958,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$10946_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":554,"nodeType":"UserDefinedTypeName","pathNode":{"id":553,"name":"EnumerableMap.IERC20ToUint256Map","nameLocations":["2524:13:3","2538:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":10946,"src":"2524:32:3"},"referencedDeclaration":10946,"src":"2524:32:3","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$10946_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"private"},{"id":558,"nodeType":"VariableDeclaration","src":"2594:28:3","nodes":[],"constant":false,"mutability":"mutable","name":"_counter","nameLocation":"2610:8:3","scope":958,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"2594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2621:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"id":565,"nodeType":"EventDefinition","src":"2949:88:3","nodes":[],"anonymous":false,"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"2629:315:3","text":" @notice A new `LotteryHookExample` contract has been registered successfully for a given factory and pool.\n @dev If the registration fails the call will revert, so there will be no event.\n @param hooksContract This contract\n @param pool The pool on which the hook was registered"},"eventSelector":"8b640b5b54a040cdfb1149b7446b0c7c18c820e860ed3d8b584acea1888b7ecd","name":"LotteryHookExampleRegistered","nameLocation":"2955:28:3","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"indexed":true,"mutability":"mutable","name":"hooksContract","nameLocation":"3000:13:3","nodeType":"VariableDeclaration","scope":565,"src":"2984:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"2984:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":563,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"3031:4:3","nodeType":"VariableDeclaration","scope":565,"src":"3015:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2983:53:3"}},{"id":572,"nodeType":"EventDefinition","src":"3341:93:3","nodes":[],"anonymous":false,"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"3043:293:3","text":" @notice The swap hook fee percentage has been changed.\n @dev Note that the initial fee will be zero, and no event is emitted on deployment.\n @param hooksContract The hooks contract charging the fee\n @param hookFeePercentage The new hook swap fee percentage"},"eventSelector":"b25b38640ad709be28a74117ede8cc6094d9e8b3aa27330e26b10898c92ba522","name":"HookSwapFeePercentageChanged","nameLocation":"3347:28:3","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"indexed":true,"mutability":"mutable","name":"hooksContract","nameLocation":"3392:13:3","nodeType":"VariableDeclaration","scope":572,"src":"3376:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"3376:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"indexed":false,"mutability":"mutable","name":"hookFeePercentage","nameLocation":"3415:17:3","nodeType":"VariableDeclaration","scope":572,"src":"3407:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3407:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:58:3"}},{"id":582,"nodeType":"EventDefinition","src":"3728:98:3","nodes":[],"anonymous":false,"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"3440:283:3","text":" @notice Fee collected and added to the lottery pot.\n @dev The current user did not win the lottery.\n @param hooksContract This contract\n @param token The token in which the fee was collected\n @param feeAmount The amount of the fee collected"},"eventSelector":"9614d1bfde1842c37d557aba9f2b69fa1ad92fef808d832d9f4b3ab5cdd06a7b","name":"LotteryFeeCollected","nameLocation":"3734:19:3","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"indexed":true,"mutability":"mutable","name":"hooksContract","nameLocation":"3770:13:3","nodeType":"VariableDeclaration","scope":582,"src":"3754:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"3754:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"3800:5:3","nodeType":"VariableDeclaration","scope":582,"src":"3785:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},"typeName":{"id":577,"nodeType":"UserDefinedTypeName","pathNode":{"id":576,"name":"IERC20","nameLocations":["3785:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"3785:6:3"},"referencedDeclaration":52306,"src":"3785:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":580,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"3815:9:3","nodeType":"VariableDeclaration","scope":582,"src":"3807:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3807:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3753:72:3"}},{"id":594,"nodeType":"EventDefinition","src":"4111:160:3","nodes":[],"anonymous":false,"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"3832:274:3","text":" @notice Lottery proceeds were paid to a lottery winner.\n @param hooksContract This contract\n @param winner Address of the lottery winner\n @param token The token in which winnings were paid\n @param amountWon The amount of tokens won"},"eventSelector":"ad248945aa9c6e54a3aae4c347a04143e677a981dbefd64b871fd587ad6077c6","name":"LotteryWinningsPaid","nameLocation":"4117:19:3","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"indexed":true,"mutability":"mutable","name":"hooksContract","nameLocation":"4162:13:3","nodeType":"VariableDeclaration","scope":594,"src":"4146:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"4146:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":587,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"4201:6:3","nodeType":"VariableDeclaration","scope":594,"src":"4185:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"4185:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":590,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"4232:5:3","nodeType":"VariableDeclaration","scope":594,"src":"4217:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},"typeName":{"id":589,"nodeType":"UserDefinedTypeName","pathNode":{"id":588,"name":"IERC20","nameLocations":["4217:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"4217:6:3"},"referencedDeclaration":52306,"src":"4217:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":592,"indexed":false,"mutability":"mutable","name":"amountWon","nameLocation":"4255:9:3","nodeType":"VariableDeclaration","scope":594,"src":"4247:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"4247:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4136:134:3"}},{"id":614,"nodeType":"FunctionDefinition","src":"4277:120:3","nodes":[],"body":{"id":613,"nodeType":"Block","src":"4357:40:3","nodes":[],"statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_trustedRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4367:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":610,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4384:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4367:23:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":612,"nodeType":"ExpressionStatement","src":"4367:23:3"}]},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":602,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4330:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5028","typeString":"contract IVault"}}],"id":603,"kind":"baseConstructorSpecifier","modifierName":{"id":601,"name":"VaultGuard","nameLocations":["4319:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":12307,"src":"4319:10:3"},"nodeType":"ModifierInvocation","src":"4319:17:3"},{"arguments":[{"expression":{"id":605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4345:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4349:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4345:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":607,"kind":"baseConstructorSpecifier","modifierName":{"id":604,"name":"Ownable","nameLocations":["4337:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":48503,"src":"4337:7:3"},"nodeType":"ModifierInvocation","src":"4337:19:3"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"vault","nameLocation":"4296:5:3","nodeType":"VariableDeclaration","scope":614,"src":"4289:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5028","typeString":"contract IVault"},"typeName":{"id":596,"nodeType":"UserDefinedTypeName","pathNode":{"id":595,"name":"IVault","nameLocations":["4289:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":5028,"src":"4289:6:3"},"referencedDeclaration":5028,"src":"4289:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5028","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"router","nameLocation":"4311:6:3","nodeType":"VariableDeclaration","scope":614,"src":"4303:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"4303:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4288:30:3"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"4357:0:3"},"scope":958,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":645,"nodeType":"FunctionDefinition","src":"4430:539:3","nodes":[],"body":{"id":644,"nodeType":"Block","src":"4604:365:3","nodes":[],"statements":[{"eventCall":{"arguments":[{"arguments":[{"id":637,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4928:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4920:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"4920:7:3","typeDescriptions":{}}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4920:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4935:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":634,"name":"LotteryHookExampleRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"4891:28:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4891:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"EmitStatement","src":"4886:54:3"},{"expression":{"hexValue":"74727565","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4958:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":633,"id":643,"nodeType":"Return","src":"4951:11:3"}]},"baseFunctions":[11944],"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"4403:22:3","text":"@inheritdoc IHooks"},"functionSelector":"0b89f182","implemented":true,"kind":"function","modifiers":[{"id":630,"kind":"modifierInvocation","modifierName":{"id":629,"name":"onlyVault","nameLocations":["4579:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":12286,"src":"4579:9:3"},"nodeType":"ModifierInvocation","src":"4579:9:3"}],"name":"onRegister","nameLocation":"4439:10:3","overrides":{"id":628,"nodeType":"OverrideSpecifier","overrides":[],"src":"4570:8:3"},"parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"4459:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"pool","nameLocation":"4484:4:3","nodeType":"VariableDeclaration","scope":645,"src":"4476:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"4476:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"4498:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$6519_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenConfig[]"},"typeName":{"baseType":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"TokenConfig","nameLocations":["4498:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":6519,"src":"4498:11:3"},"referencedDeclaration":6519,"src":"4498:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfig_$6519_storage_ptr","typeString":"struct TokenConfig"}},"id":622,"nodeType":"ArrayTypeName","src":"4498:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$6519_storage_$dyn_storage_ptr","typeString":"struct TokenConfig[]"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"4528:28:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$6405_calldata_ptr","typeString":"struct LiquidityManagement"},"typeName":{"id":625,"nodeType":"UserDefinedTypeName","pathNode":{"id":624,"name":"LiquidityManagement","nameLocations":["4528:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":6405,"src":"4528:19:3"},"referencedDeclaration":6405,"src":"4528:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$6405_storage_ptr","typeString":"struct LiquidityManagement"}},"visibility":"internal"}],"src":"4449:113:3"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"4598:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":631,"name":"bool","nodeType":"ElementaryTypeName","src":"4598:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4597:6:3"},"scope":958,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":672,"nodeType":"FunctionDefinition","src":"5002:540:3","nodes":[],"body":{"id":671,"nodeType":"Block","src":"5074:468:3","nodes":[],"statements":[{"assignments":[655],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"hookFlags","nameLocation":"5101:9:3","nodeType":"VariableDeclaration","scope":671,"src":"5084:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_memory_ptr","typeString":"struct HookFlags"},"typeName":{"id":654,"nodeType":"UserDefinedTypeName","pathNode":{"id":653,"name":"HookFlags","nameLocations":["5084:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":6452,"src":"5084:9:3"},"referencedDeclaration":6452,"src":"5084:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_storage_ptr","typeString":"struct HookFlags"}},"visibility":"internal"}],"id":656,"nodeType":"VariableDeclarationStatement","src":"5084:26:3"},{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":657,"name":"hookFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5421:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_memory_ptr","typeString":"struct HookFlags memory"}},"id":659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5431:25:3","memberName":"enableHookAdjustedAmounts","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"5421:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5459:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5421:42:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":662,"nodeType":"ExpressionStatement","src":"5421:42:3"},{"expression":{"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":663,"name":"hookFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5473:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_memory_ptr","typeString":"struct HookFlags memory"}},"id":665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5483:19:3","memberName":"shouldCallAfterSwap","nodeType":"MemberAccess","referencedDeclaration":6443,"src":"5473:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5505:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5473:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":668,"nodeType":"ExpressionStatement","src":"5473:36:3"},{"expression":{"id":669,"name":"hookFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5526:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_memory_ptr","typeString":"struct HookFlags memory"}},"functionReturnParameters":652,"id":670,"nodeType":"Return","src":"5519:16:3"}]},"baseFunctions":[11951],"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"4975:22:3","text":"@inheritdoc IHooks"},"functionSelector":"d77153a7","implemented":true,"kind":"function","modifiers":[],"name":"getHookFlags","nameLocation":"5011:12:3","overrides":{"id":648,"nodeType":"OverrideSpecifier","overrides":[],"src":"5038:8:3"},"parameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"5023:2:3"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"5056:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_memory_ptr","typeString":"struct HookFlags"},"typeName":{"id":650,"nodeType":"UserDefinedTypeName","pathNode":{"id":649,"name":"HookFlags","nameLocations":["5056:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":6452,"src":"5056:9:3"},"referencedDeclaration":6452,"src":"5056:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_storage_ptr","typeString":"struct HookFlags"}},"visibility":"internal"}],"src":"5055:18:3"},"scope":958,"stateMutability":"pure","virtual":false,"visibility":"public"},{"id":774,"nodeType":"FunctionDefinition","src":"5575:2912:3","nodes":[],"body":{"id":773,"nodeType":"Block","src":"5733:2754:3","nodes":[],"statements":[{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"drawnNumber","nameLocation":"5749:11:3","nodeType":"VariableDeclaration","scope":773,"src":"5743:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":686,"name":"uint8","nodeType":"ElementaryTypeName","src":"5743:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":688,"nodeType":"VariableDeclarationStatement","src":"5743:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":689,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5774:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams calldata"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5781:6:3","memberName":"router","nodeType":"MemberAccess","referencedDeclaration":6621,"src":"5774:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":691,"name":"_trustedRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"5791:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":699,"nodeType":"IfStatement","src":"5770:294:3","trueBody":{"id":698,"nodeType":"Block","src":"5807:257:3","statements":[{"expression":{"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":693,"name":"drawnNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"6021:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":694,"name":"_getRandomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"6035:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6035:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6021:32:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":697,"nodeType":"ExpressionStatement","src":"6021:32:3"}]}},{"expression":{"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6160:10:3","subExpression":{"id":700,"name":"_counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6160:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"nodeType":"ExpressionStatement","src":"6160:10:3"},{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":703,"name":"hookAdjustedAmountCalculatedRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"6181:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":704,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6215:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams calldata"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6222:19:3","memberName":"amountCalculatedRaw","nodeType":"MemberAccess","referencedDeclaration":6619,"src":"6215:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6181:60:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"6181:60:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"hookSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6255:21:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6279:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6255:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":768,"nodeType":"IfStatement","src":"6251:2174:3","trueBody":{"id":767,"nodeType":"Block","src":"6282:2143:3","statements":[{"assignments":[712],"declarations":[{"constant":false,"id":712,"mutability":"mutable","name":"hookFee","nameLocation":"6304:7:3","nodeType":"VariableDeclaration","scope":767,"src":"6296:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"6296:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":718,"initialValue":{"arguments":[{"id":716,"name":"hookSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6349:21:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"expression":{"id":713,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6314:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams calldata"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6321:19:3","memberName":"amountCalculatedRaw","nodeType":"MemberAccess","referencedDeclaration":6619,"src":"6314:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6341:7:3","memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":8565,"src":"6314:34:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6314:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6296:75:3"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_SwapKind_$6560","typeString":"enum SwapKind"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":719,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6389:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams calldata"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6396:4:3","memberName":"kind","nodeType":"MemberAccess","referencedDeclaration":6601,"src":"6389:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$6560","typeString":"enum SwapKind"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":721,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"6404:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$6560_$","typeString":"type(enum SwapKind)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6413:8:3","memberName":"EXACT_IN","nodeType":"MemberAccess","referencedDeclaration":6558,"src":"6404:17:3","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$6560","typeString":"enum SwapKind"}},"src":"6389:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":765,"nodeType":"Block","src":"7419:996:3","statements":[{"assignments":[746],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"feeToPay","nameLocation":"8196:8:3","nodeType":"VariableDeclaration","scope":765,"src":"8188:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8188:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":755,"initialValue":{"arguments":[{"expression":{"id":748,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8229:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams calldata"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8236:6:3","memberName":"router","nodeType":"MemberAccess","referencedDeclaration":6621,"src":"8229:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"drawnNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8244:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":751,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8257:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams calldata"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8264:7:3","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"8257:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},{"id":753,"name":"hookFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8273:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":747,"name":"_chargeFeeOrPayWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8207:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint8_$_t_contract$_IERC20_$52306_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint8,contract IERC20,uint256) returns (uint256)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8207:74:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8188:93:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"feeToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8303:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8314:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8303:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"8299:102:3","trueBody":{"id":763,"nodeType":"Block","src":"8317:84:3","statements":[{"expression":{"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":759,"name":"hookAdjustedAmountCalculatedRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"8339:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":760,"name":"feeToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8374:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8339:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":762,"nodeType":"ExpressionStatement","src":"8339:43:3"}]}}]},"id":766,"nodeType":"IfStatement","src":"6385:2030:3","trueBody":{"id":744,"nodeType":"Block","src":"6423:990:3","statements":[{"assignments":[725],"declarations":[{"constant":false,"id":725,"mutability":"mutable","name":"feeToPay","nameLocation":"7193:8:3","nodeType":"VariableDeclaration","scope":744,"src":"7185:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint256","nodeType":"ElementaryTypeName","src":"7185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":734,"initialValue":{"arguments":[{"expression":{"id":727,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"7226:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams calldata"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7233:6:3","memberName":"router","nodeType":"MemberAccess","referencedDeclaration":6621,"src":"7226:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":729,"name":"drawnNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7241:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":730,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"7254:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams calldata"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7261:8:3","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6607,"src":"7254:15:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},{"id":732,"name":"hookFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"7271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":726,"name":"_chargeFeeOrPayWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"7204:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint8_$_t_contract$_IERC20_$52306_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint8,contract IERC20,uint256) returns (uint256)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7204:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7185:94:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"feeToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"7301:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7312:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7301:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"nodeType":"IfStatement","src":"7297:102:3","trueBody":{"id":742,"nodeType":"Block","src":"7315:84:3","statements":[{"expression":{"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":738,"name":"hookAdjustedAmountCalculatedRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"7337:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":739,"name":"feeToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"7372:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7337:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":741,"nodeType":"ExpressionStatement","src":"7337:43:3"}]}}]}}]}},{"expression":{"components":[{"hexValue":"74727565","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8442:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":770,"name":"hookAdjustedAmountCalculatedRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"8448:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8441:39:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":685,"id":772,"nodeType":"Return","src":"8434:46:3"}]},"baseFunctions":[12131],"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"5548:22:3","text":"@inheritdoc IHooks"},"functionSelector":"18b6eb55","implemented":true,"kind":"function","modifiers":[{"id":680,"kind":"modifierInvocation","modifierName":{"id":679,"name":"onlyVault","nameLocations":["5659:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":12286,"src":"5659:9:3"},"nodeType":"ModifierInvocation","src":"5659:9:3"}],"name":"onAfterSwap","nameLocation":"5584:11:3","overrides":{"id":678,"nodeType":"OverrideSpecifier","overrides":[],"src":"5650:8:3"},"parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"params","nameLocation":"5630:6:3","nodeType":"VariableDeclaration","scope":774,"src":"5605:31:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_calldata_ptr","typeString":"struct AfterSwapParams"},"typeName":{"id":675,"nodeType":"UserDefinedTypeName","pathNode":{"id":674,"name":"AfterSwapParams","nameLocations":["5605:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":6626,"src":"5605:15:3"},"referencedDeclaration":6626,"src":"5605:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$6626_storage_ptr","typeString":"struct AfterSwapParams"}},"visibility":"internal"}],"src":"5595:47:3"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"success","nameLocation":"5683:7:3","nodeType":"VariableDeclaration","scope":774,"src":"5678:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":681,"name":"bool","nodeType":"ElementaryTypeName","src":"5678:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"hookAdjustedAmountCalculatedRaw","nameLocation":"5700:31:3","nodeType":"VariableDeclaration","scope":774,"src":"5692:39:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5677:55:3"},"scope":958,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":795,"nodeType":"FunctionDefinition","src":"8715:215:3","nodes":[],"body":{"id":794,"nodeType":"Block","src":"8794:136:3","nodes":[],"statements":[{"expression":{"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":782,"name":"hookSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"8804:21:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":783,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8828:17:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8804:41:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":785,"nodeType":"ExpressionStatement","src":"8804:41:3"},{"eventCall":{"arguments":[{"arguments":[{"id":789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8898:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}],"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8890:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"8890:7:3","typeDescriptions":{}}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8890:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8905:17:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":786,"name":"HookSwapFeePercentageChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"8861:28:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8861:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"EmitStatement","src":"8856:67:3"}]},"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"8493:217:3","text":" @dev Sets the hook swap fee percentage, which will be accrued after a swap was executed.\n This function must be permissioned.\n @param swapFeePercentage The new swap fee percentage"},"functionSelector":"f9e5c197","implemented":true,"kind":"function","modifiers":[{"id":780,"kind":"modifierInvocation","modifierName":{"id":779,"name":"onlyOwner","nameLocations":["8784:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":48414,"src":"8784:9:3"},"nodeType":"ModifierInvocation","src":"8784:9:3"}],"name":"setHookSwapFeePercentage","nameLocation":"8724:24:3","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"8756:17:3","nodeType":"VariableDeclaration","scope":795,"src":"8749:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":776,"name":"uint64","nodeType":"ElementaryTypeName","src":"8749:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8748:26:3"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"8794:0:3"},"scope":958,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":805,"nodeType":"FunctionDefinition","src":"9414:99:3","nodes":[],"body":{"id":804,"nodeType":"Block","src":"9471:42:3","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":801,"name":"_getRandomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"9488:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9488:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":800,"id":803,"nodeType":"Return","src":"9481:25:3"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"8936:473:3","text":" @notice Generate a pseudo-random number.\n @dev This external function was created to allow the test to access the same random number that will be used by\n the `onAfterSwap` hook, so we can predict whether the current call is a winner. In real applications, this\n function should not exist, or should return a different number every time, even if called in the same\n transaction.\n @return number A pseudo-random number"},"functionSelector":"dbdff2c1","implemented":true,"kind":"function","modifiers":[],"name":"getRandomNumber","nameLocation":"9423:15:3","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"9438:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":805,"src":"9464:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":798,"name":"uint8","nodeType":"ElementaryTypeName","src":"9464:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"9463:7:3"},"scope":958,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":931,"nodeType":"FunctionDefinition","src":"9635:1997:3","nodes":[],"body":{"id":930,"nodeType":"Block","src":"9796:1836:3","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":819,"name":"drawnNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9810:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":820,"name":"LUCKY_NUMBER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9825:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9810:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":928,"nodeType":"Block","src":"11184:442:3","statements":[{"expression":{"arguments":[{"id":897,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"11290:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},{"hexValue":"31","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11297:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":894,"name":"_tokensWithAccruedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"11263:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$10946_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11286:3:3","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":11024,"src":"11263:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_IERC20ToUint256Map_$10946_storage_ptr_$_t_contract$_IERC20_$52306_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_IERC20ToUint256Map_$10946_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20,uint256) returns (bool)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11263:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"ExpressionStatement","src":"11263:36:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":901,"name":"hookFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"11318:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11328:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11318:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":925,"nodeType":"IfStatement","src":"11314:273:3","trueBody":{"id":924,"nodeType":"Block","src":"11331:256:3","statements":[{"expression":{"arguments":[{"id":907,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"11468:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},{"arguments":[{"id":910,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11483:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}],"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11475:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"11475:7:3","typeDescriptions":{}}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11475:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":912,"name":"hookFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"11490:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":904,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12268,"src":"11454:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5028","typeString":"contract IVault"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11461:6:3","memberName":"sendTo","nodeType":"MemberAccess","referencedDeclaration":6306,"src":"11454:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$52306_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256) external"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11454:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"11454:44:3"},{"eventCall":{"arguments":[{"arguments":[{"id":918,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11550:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}],"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11542:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"11542:7:3","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11542:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":920,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"11557:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},{"id":921,"name":"hookFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"11564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":915,"name":"LotteryFeeCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"11522:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$52306_$_t_uint256_$returns$__$","typeString":"function (address,contract IERC20,uint256)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"EmitStatement","src":"11517:55:3"}]}},{"expression":{"id":926,"name":"hookFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"11608:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":818,"id":927,"nodeType":"Return","src":"11601:14:3"}]},"id":929,"nodeType":"IfStatement","src":"9806:1820:3","trueBody":{"id":893,"nodeType":"Block","src":"9839:1339:3","statements":[{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"user","nameLocation":"9861:4:3","nodeType":"VariableDeclaration","scope":893,"src":"9853:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"9853:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":829,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":825,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"9882:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":824,"name":"IRouterCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"9868:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRouterCommon_$4959_$","typeString":"type(contract IRouterCommon)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9868:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRouterCommon_$4959","typeString":"contract IRouterCommon"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9890:9:3","memberName":"getSender","nodeType":"MemberAccess","referencedDeclaration":4913,"src":"9868:31:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9868:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9853:48:3"},{"body":{"id":889,"nodeType":"Block","src":"10094:1016:3","statements":[{"assignments":[843,null],"declarations":[{"constant":false,"id":843,"mutability":"mutable","name":"feeToken","nameLocation":"10120:8:3","nodeType":"VariableDeclaration","scope":889,"src":"10113:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},"typeName":{"id":842,"nodeType":"UserDefinedTypeName","pathNode":{"id":841,"name":"IERC20","nameLocations":["10113:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"10113:6:3"},"referencedDeclaration":52306,"src":"10113:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"visibility":"internal"},null],"id":850,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"10160:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10164:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10160:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":844,"name":"_tokensWithAccruedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"10134:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$10946_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10157:2:3","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":11205,"src":"10134:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$10946_storage_ptr_$_t_uint256_$returns$_t_contract$_IERC20_$52306_$_t_uint256_$attached_to$_t_struct$_IERC20ToUint256Map_$10946_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,uint256) view returns (contract IERC20,uint256)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10134:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$52306_$_t_uint256_$","typeString":"tuple(contract IERC20,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10112:54:3"},{"expression":{"arguments":[{"id":854,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10214:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}],"expression":{"id":851,"name":"_tokensWithAccruedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"10184:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$10946_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10207:6:3","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":11143,"src":"10184:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_IERC20ToUint256Map_$10946_storage_ptr_$_t_contract$_IERC20_$52306_$returns$_t_bool_$attached_to$_t_struct$_IERC20ToUint256Map_$10946_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20) returns (bool)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10184:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":856,"nodeType":"ExpressionStatement","src":"10184:39:3"},{"assignments":[858],"declarations":[{"constant":false,"id":858,"mutability":"mutable","name":"amountWon","nameLocation":"10250:9:3","nodeType":"VariableDeclaration","scope":889,"src":"10242:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"10242:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":866,"initialValue":{"arguments":[{"arguments":[{"id":863,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10289:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}],"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10281:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"10281:7:3","typeDescriptions":{}}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10281:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":859,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10262:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10271:9:3","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":52263,"src":"10262:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10262:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10242:53:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"amountWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"10318:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10318:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":888,"nodeType":"IfStatement","src":"10314:782:3","trueBody":{"id":887,"nodeType":"Block","src":"10333:763:3","statements":[{"expression":{"arguments":[{"id":873,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"10972:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"amountWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"10978:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":870,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10950:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10959:12:3","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":52415,"src":"10950:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$52306_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$52306_$","typeString":"function (contract IERC20,address,uint256)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10950:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"ExpressionStatement","src":"10950:38:3"},{"eventCall":{"arguments":[{"arguments":[{"id":880,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11044:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LotteryHookExample_$958","typeString":"contract LotteryHookExample"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11036:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"11036:7:3","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11036:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":882,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"11051:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"11057:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},{"id":884,"name":"amountWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"11067:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":877,"name":"LotteryWinningsPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11016:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_contract$_IERC20_$52306_$_t_uint256_$returns$__$","typeString":"function (address,address,contract IERC20,uint256)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11016:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":886,"nodeType":"EmitStatement","src":"11011:66:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"10082:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10086:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10082:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":890,"initializationExpression":{"assignments":[831],"declarations":[{"constant":false,"id":831,"mutability":"mutable","name":"i","nameLocation":"10049:1:3","nodeType":"VariableDeclaration","scope":890,"src":"10041:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":834,"initialValue":{"expression":{"id":832,"name":"_tokensWithAccruedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"10053:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$10946_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10076:4:3","memberName":"size","nodeType":"MemberAccess","referencedDeclaration":10935,"src":"10053:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:39:3"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"10089:3:3","subExpression":{"id":838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"10089:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":840,"nodeType":"ExpressionStatement","src":"10089:3:3"},"nodeType":"ForStatement","src":"10036:1074:3"},{"expression":{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11166:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":818,"id":892,"nodeType":"Return","src":"11159:8:3"}]}}]},"implemented":true,"kind":"function","modifiers":[],"name":"_chargeFeeOrPayWinner","nameLocation":"9644:21:3","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"router","nameLocation":"9683:6:3","nodeType":"VariableDeclaration","scope":931,"src":"9675:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"9675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"drawnNumber","nameLocation":"9705:11:3","nodeType":"VariableDeclaration","scope":931,"src":"9699:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":808,"name":"uint8","nodeType":"ElementaryTypeName","src":"9699:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"token","nameLocation":"9733:5:3","nodeType":"VariableDeclaration","scope":931,"src":"9726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},"typeName":{"id":811,"nodeType":"UserDefinedTypeName","pathNode":{"id":810,"name":"IERC20","nameLocations":["9726:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"9726:6:3"},"referencedDeclaration":52306,"src":"9726:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"hookFee","nameLocation":"9756:7:3","nodeType":"VariableDeclaration","scope":931,"src":"9748:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"9748:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9665:104:3"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"9787:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:9:3"},"scope":958,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":957,"nodeType":"FunctionDefinition","src":"11891:168:3","nodes":[],"body":{"id":956,"nodeType":"Block","src":"11948:111:3","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":943,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12004:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12010:10:3","memberName":"prevrandao","nodeType":"MemberAccess","src":"12004:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"_counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"12022:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":941,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11987:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11991:12:3","memberName":"encodePacked","nodeType":"MemberAccess","src":"11987:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11987:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":940,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11977:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11977:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11972:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":938,"name":"uint","nodeType":"ElementaryTypeName","src":"11972:4:3","typeDescriptions":{}}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11972:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":949,"name":"MAX_NUMBER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"12036:10:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11972:74:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11971:76:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12050:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11971:80:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11965:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":936,"name":"uint8","nodeType":"ElementaryTypeName","src":"11965:5:3","typeDescriptions":{}}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11965:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":935,"id":955,"nodeType":"Return","src":"11958:94:3"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_getRandomNumber","nameLocation":"11900:16:3","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"11916:2:3"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":957,"src":"11941:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":933,"name":"uint8","nodeType":"ElementaryTypeName","src":"11941:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11940:7:3"},"scope":958,"stateMutability":"view","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[{"baseName":{"id":524,"name":"BaseHooks","nameLocations":["1564:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":12152,"src":"1564:9:3"},"id":525,"nodeType":"InheritanceSpecifier","src":"1564:9:3"},{"baseName":{"id":526,"name":"VaultGuard","nameLocations":["1575:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":12307,"src":"1575:10:3"},"id":527,"nodeType":"InheritanceSpecifier","src":"1575:10:3"},{"baseName":{"id":528,"name":"Ownable","nameLocations":["1587:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":48503,"src":"1587:7:3"},"id":529,"nodeType":"InheritanceSpecifier","src":"1587:7:3"}],"canonicalName":"LotteryHookExample","contractDependencies":[],"contractKind":"contract","documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"1089:443:3","text":" @notice Hook that randomly rewards accumulated fees to a user performing a swap.\n @dev In this example, every time a swap is executed in a pool registered with this hook, a \"random\" number is drawn.\n If the drawn number is not equal to the LUCKY_NUMBER, the user will pay fees to the hook contract. But, if the\n drawn number is equal to LUCKY_NUMBER, the user won't pay hook fees and will receive all fees accrued by the hook."},"fullyImplemented":true,"linearizedBaseContracts":[958,48503,54360,12307,12152,4087],"name":"LotteryHookExample","nameLocation":"1542:18:3","scope":959,"usedErrors":[5533,10512,48369,48374,52382],"usedEvents":[565,572,582,594,48380]}],"license":"GPL-3.0-or-later"},"id":3}