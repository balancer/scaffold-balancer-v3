{"abi":[{"type":"constructor","inputs":[{"name":"vault","type":"address","internalType":"contract IVault"},{"name":"allowedFactory","type":"address","internalType":"address"},{"name":"veBAL","type":"address","internalType":"address"},{"name":"trustedRouter","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getHookFlags","inputs":[],"outputs":[{"name":"hookFlags","type":"tuple","internalType":"struct HookFlags","components":[{"name":"enableHookAdjustedAmounts","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallAfterInitialize","type":"bool","internalType":"bool"},{"name":"shouldCallComputeDynamicSwapFee","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeSwap","type":"bool","internalType":"bool"},{"name":"shouldCallAfterSwap","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterAddLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallBeforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"shouldCallAfterRemoveLiquidity","type":"bool","internalType":"bool"}]}],"stateMutability":"pure"},{"type":"function","name":"onAfterAddLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsInRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterInitialize","inputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterRemoveLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsOutRaw","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"onAfterSwap","inputs":[{"name":"","type":"tuple","internalType":"struct AfterSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"tokenIn","type":"address","internalType":"contract IERC20"},{"name":"tokenOut","type":"address","internalType":"contract IERC20"},{"name":"amountInScaled18","type":"uint256","internalType":"uint256"},{"name":"amountOutScaled18","type":"uint256","internalType":"uint256"},{"name":"tokenInBalanceScaled18","type":"uint256","internalType":"uint256"},{"name":"tokenOutBalanceScaled18","type":"uint256","internalType":"uint256"},{"name":"amountCalculatedScaled18","type":"uint256","internalType":"uint256"},{"name":"amountCalculatedRaw","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeAddLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum AddLiquidityKind"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeInitialize","inputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeRemoveLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum RemoveLiquidityKind"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onBeforeSwap","inputs":[{"name":"","type":"tuple","internalType":"struct PoolSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"onComputeDynamicSwapFeePercentage","inputs":[{"name":"params","type":"tuple","internalType":"struct PoolSwapParams","components":[{"name":"kind","type":"uint8","internalType":"enum SwapKind"},{"name":"amountGivenScaled18","type":"uint256","internalType":"uint256"},{"name":"balancesScaled18","type":"uint256[]","internalType":"uint256[]"},{"name":"indexIn","type":"uint256","internalType":"uint256"},{"name":"indexOut","type":"uint256","internalType":"uint256"},{"name":"router","type":"address","internalType":"address"},{"name":"userData","type":"bytes","internalType":"bytes"}]},{"name":"","type":"address","internalType":"address"},{"name":"staticSwapFeePercentage","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"onRegister","inputs":[{"name":"factory","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"},{"name":"","type":"tuple[]","internalType":"struct TokenConfig[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"},{"name":"rateProvider","type":"address","internalType":"contract IRateProvider"},{"name":"paysYieldFees","type":"bool","internalType":"bool"}]},{"name":"","type":"tuple","internalType":"struct LiquidityManagement","components":[{"name":"disableUnbalancedLiquidity","type":"bool","internalType":"bool"},{"name":"enableAddLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableRemoveLiquidityCustom","type":"bool","internalType":"bool"},{"name":"enableDonation","type":"bool","internalType":"bool"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"VeBALFeeDiscountHookExampleRegistered","inputs":[{"name":"hooksContract","type":"address","indexed":true,"internalType":"address"},{"name":"factory","type":"address","indexed":true,"internalType":"address"},{"name":"pool","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"SenderIsNotVault","inputs":[{"name":"sender","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x610100604052348015610010575f80fd5b50604051610f75380380610f7583398101604081905261002f91610069565b6001600160a01b0393841660805291831660a05290821660c0521660e0526100c5565b6001600160a01b0381168114610066575f80fd5b50565b5f805f806080858703121561007c575f80fd5b845161008781610052565b602086015190945061009881610052565b60408601519093506100a981610052565b60608601519092506100ba81610052565b939692955090935050565b60805160a05160c05160e051610e7d6100f85f395f61044401525f61034e01525f61027601525f6104e60152610e7d5ff3fe608060405234801561000f575f80fd5b50600436106100c4575f3560e01c806345421ec71161007d578063a0e8f5ac11610058578063a0e8f5ac146101b7578063ba5f9f40146101ca578063d77153a7146101d8575f80fd5b806345421ec7146101725780635211fa771461018c578063976907cc1461019a575f80fd5b80631c149e28116100ad5780631c149e281461011c5780632754888d1461013157806338be241d1461015c575f80fd5b80630b89f182146100c857806318b6eb55146100f0575b5f80fd5b6100db6100d6366004610620565b610231565b60405190151581526020015b60405180910390f35b6101056100fe366004610748565b505f908190565b6040805192151583526020830191909152016100e7565b6100db61012a36600461085a565b5f92915050565b61014e61013f3660046108c8565b5f839850989650505050505050565b6040516100e79291906109a8565b6100db61016a3660046109f8565b5f9392505050565b6100db610180366004610a6e565b5f979650505050505050565b6100db61012a366004610b3e565b61014e6101a8366004610b8d565b5f849850989650505050505050565b6101056101c5366004610c2f565b61033a565b6100db610180366004610c85565b60408051610140810182525f808252602082018190528183018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201526001606082015290516100e79190610d08565b5f61023a6104db565b6040516001600160a01b03808616919087169030907fa8ab37b72b2944e381076dcbdf6f9b0d340c59a4f1492552e7361ef53dc873dc905f90a47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614801561033157506040517f6634b7530000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152861690636634b75390602401602060405180830381865afa15801561030d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103319190610dc0565b95945050505050565b5f806103446104db565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661037e60c0870160a08801610ddb565b6001600160a01b031614610397575060019050816104d3565b5f6103a860c0870160a08801610ddb565b6001600160a01b0316635e01eb5a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104079190610df6565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0380831660048301529192505f917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610489573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ad9190610e11565b11156104ca5760016104c0600286610e28565b92509250506104d3565b60018492509250505b935093915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610543576040517f089676d500000000000000000000000000000000000000000000000000000000815233600482015260240160405180910390fd5b565b6001600160a01b0381168114610559575f80fd5b50565b803561056781610545565b919050565b634e487b7160e01b5f52604160045260245ffd5b6040516080810167ffffffffffffffff811182821017156105a3576105a361056c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105d2576105d261056c565b604052919050565b5f67ffffffffffffffff8211156105f3576105f361056c565b5060051b60200190565b8015158114610559575f80fd5b5f6080828403121561061a575f80fd5b50919050565b5f805f8060e08587031215610633575f80fd5b843561063e81610545565b935060208581013561064f81610545565b935060408681013567ffffffffffffffff81111561066b575f80fd5b8701601f8101891361067b575f80fd5b803561068e610689826105da565b6105a9565b81815260079190911b8201840190848101908b8311156106ac575f80fd5b928501925b82841015610727576080848d0312156106c8575f80fd5b6106d0610580565b84356106db81610545565b815284870135600281106106ed575f80fd5b81880152848601356106fe81610545565b81870152606085810135610711816105fd565b90820152825260809390930192908501906106b1565b80975050505050505061073d866060870161060a565b905092959194509250565b5f60208284031215610758575f80fd5b813567ffffffffffffffff81111561076e575f80fd5b82016101808185031215610780575f80fd5b9392505050565b5f82601f830112610796575f80fd5b813560206107a6610689836105da565b8083825260208201915060208460051b8701019350868411156107c7575f80fd5b602086015b848110156107e357803583529183019183016107cc565b509695505050505050565b5f82601f8301126107fd575f80fd5b813567ffffffffffffffff8111156108175761081761056c565b61082a601f8201601f19166020016105a9565b81815284602083860101111561083e575f80fd5b816020850160208301375f918101602001919091529392505050565b5f806040838503121561086b575f80fd5b823567ffffffffffffffff80821115610882575f80fd5b61088e86838701610787565b935060208501359150808211156108a3575f80fd5b506108b0858286016107ee565b9150509250929050565b803560048110610567575f80fd5b5f805f805f805f80610100898b0312156108e0575f80fd5b6108e98961055c565b97506108f760208a0161055c565b965061090560408a016108ba565b955060608901359450608089013567ffffffffffffffff80821115610928575f80fd5b6109348c838d01610787565b955060a08b0135915080821115610949575f80fd5b6109558c838d01610787565b945060c08b013591508082111561096a575f80fd5b6109768c838d01610787565b935060e08b013591508082111561098b575f80fd5b506109988b828c016107ee565b9150509295985092959890939650565b5f6040820184151583526020604060208501528185518084526060860191506020870193505f5b818110156109eb578451835293830193918301916001016109cf565b5090979650505050505050565b5f805f60608486031215610a0a575f80fd5b833567ffffffffffffffff80821115610a21575f80fd5b610a2d87838801610787565b9450602086013593506040860135915080821115610a49575f80fd5b50610a56868287016107ee565b9150509250925092565b803560058110610567575f80fd5b5f805f805f805f60e0888a031215610a84575f80fd5b8735610a8f81610545565b96506020880135610a9f81610545565b9550610aad60408901610a60565b9450606088013567ffffffffffffffff80821115610ac9575f80fd5b610ad58b838c01610787565b955060808a0135945060a08a0135915080821115610af1575f80fd5b610afd8b838c01610787565b935060c08a0135915080821115610b12575f80fd5b50610b1f8a828b016107ee565b91505092959891949750929550565b5f60e0828403121561061a575f80fd5b5f8060408385031215610b4f575f80fd5b823567ffffffffffffffff811115610b65575f80fd5b610b7185828601610b2e565b9250506020830135610b8281610545565b809150509250929050565b5f805f805f805f80610100898b031215610ba5575f80fd5b610bae8961055c565b9750610bbc60208a0161055c565b9650610bca60408a01610a60565b9550606089013567ffffffffffffffff80821115610be6575f80fd5b610bf28c838d01610787565b965060808b0135915080821115610c07575f80fd5b610c138c838d01610787565b955060a08b0135945060c08b013591508082111561096a575f80fd5b5f805f60608486031215610c41575f80fd5b833567ffffffffffffffff811115610c57575f80fd5b610c6386828701610b2e565b9350506020840135610c7481610545565b929592945050506040919091013590565b5f805f805f805f60e0888a031215610c9b575f80fd5b8735610ca681610545565b96506020880135610cb681610545565b9550610cc4604089016108ba565b945060608801359350608088013567ffffffffffffffff80821115610ce7575f80fd5b610cf38b838c01610787565b945060a08a0135915080821115610af1575f80fd5b81511515815261014081016020830151610d26602084018215159052565b506040830151610d3a604084018215159052565b506060830151610d4e606084018215159052565b506080830151610d62608084018215159052565b5060a0830151610d7660a084018215159052565b5060c0830151610d8a60c084018215159052565b5060e0830151610d9e60e084018215159052565b5061010083810151151590830152610120928301511515929091019190915290565b5f60208284031215610dd0575f80fd5b8151610780816105fd565b5f60208284031215610deb575f80fd5b813561078081610545565b5f60208284031215610e06575f80fd5b815161078081610545565b5f60208284031215610e21575f80fd5b5051919050565b5f82610e4257634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212208f97ba0bb5e9b574a9edbf70ba618196cf5d0ead0dd8044c4abf750caf2ec03864736f6c63430008180033","sourceMap":"970:3021:9:-:0;;;2031:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;409:14:56;;;;;2147:32:9;;::::1;;::::0;2189:30;;::::1;;::::0;2229:22:::1;;::::0;970:3021;;14:139:136;-1:-1:-1;;;;;97:31:136;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:701::-;270:6;278;286;294;347:3;335:9;326:7;322:23;318:33;315:53;;;364:1;361;354:12;315:53;396:9;390:16;415:39;448:5;415:39;:::i;:::-;523:2;508:18;;502:25;473:5;;-1:-1:-1;536:41:136;502:25;536:41;:::i;:::-;648:2;633:18;;627:25;596:7;;-1:-1:-1;661:41:136;627:25;661:41;:::i;:::-;773:2;758:18;;752:25;721:7;;-1:-1:-1;786:41:136;752:25;786:41;:::i;:::-;158:701;;;;-1:-1:-1;158:701:136;;-1:-1:-1;;158:701:136:o;:::-;970:3021:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b50600436106100c4575f3560e01c806345421ec71161007d578063a0e8f5ac11610058578063a0e8f5ac146101b7578063ba5f9f40146101ca578063d77153a7146101d8575f80fd5b806345421ec7146101725780635211fa771461018c578063976907cc1461019a575f80fd5b80631c149e28116100ad5780631c149e281461011c5780632754888d1461013157806338be241d1461015c575f80fd5b80630b89f182146100c857806318b6eb55146100f0575b5f80fd5b6100db6100d6366004610620565b610231565b60405190151581526020015b60405180910390f35b6101056100fe366004610748565b505f908190565b6040805192151583526020830191909152016100e7565b6100db61012a36600461085a565b5f92915050565b61014e61013f3660046108c8565b5f839850989650505050505050565b6040516100e79291906109a8565b6100db61016a3660046109f8565b5f9392505050565b6100db610180366004610a6e565b5f979650505050505050565b6100db61012a366004610b3e565b61014e6101a8366004610b8d565b5f849850989650505050505050565b6101056101c5366004610c2f565b61033a565b6100db610180366004610c85565b60408051610140810182525f808252602082018190528183018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201526001606082015290516100e79190610d08565b5f61023a6104db565b6040516001600160a01b03808616919087169030907fa8ab37b72b2944e381076dcbdf6f9b0d340c59a4f1492552e7361ef53dc873dc905f90a47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614801561033157506040517f6634b7530000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152861690636634b75390602401602060405180830381865afa15801561030d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103319190610dc0565b95945050505050565b5f806103446104db565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661037e60c0870160a08801610ddb565b6001600160a01b031614610397575060019050816104d3565b5f6103a860c0870160a08801610ddb565b6001600160a01b0316635e01eb5a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104079190610df6565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0380831660048301529192505f917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610489573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ad9190610e11565b11156104ca5760016104c0600286610e28565b92509250506104d3565b60018492509250505b935093915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610543576040517f089676d500000000000000000000000000000000000000000000000000000000815233600482015260240160405180910390fd5b565b6001600160a01b0381168114610559575f80fd5b50565b803561056781610545565b919050565b634e487b7160e01b5f52604160045260245ffd5b6040516080810167ffffffffffffffff811182821017156105a3576105a361056c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105d2576105d261056c565b604052919050565b5f67ffffffffffffffff8211156105f3576105f361056c565b5060051b60200190565b8015158114610559575f80fd5b5f6080828403121561061a575f80fd5b50919050565b5f805f8060e08587031215610633575f80fd5b843561063e81610545565b935060208581013561064f81610545565b935060408681013567ffffffffffffffff81111561066b575f80fd5b8701601f8101891361067b575f80fd5b803561068e610689826105da565b6105a9565b81815260079190911b8201840190848101908b8311156106ac575f80fd5b928501925b82841015610727576080848d0312156106c8575f80fd5b6106d0610580565b84356106db81610545565b815284870135600281106106ed575f80fd5b81880152848601356106fe81610545565b81870152606085810135610711816105fd565b90820152825260809390930192908501906106b1565b80975050505050505061073d866060870161060a565b905092959194509250565b5f60208284031215610758575f80fd5b813567ffffffffffffffff81111561076e575f80fd5b82016101808185031215610780575f80fd5b9392505050565b5f82601f830112610796575f80fd5b813560206107a6610689836105da565b8083825260208201915060208460051b8701019350868411156107c7575f80fd5b602086015b848110156107e357803583529183019183016107cc565b509695505050505050565b5f82601f8301126107fd575f80fd5b813567ffffffffffffffff8111156108175761081761056c565b61082a601f8201601f19166020016105a9565b81815284602083860101111561083e575f80fd5b816020850160208301375f918101602001919091529392505050565b5f806040838503121561086b575f80fd5b823567ffffffffffffffff80821115610882575f80fd5b61088e86838701610787565b935060208501359150808211156108a3575f80fd5b506108b0858286016107ee565b9150509250929050565b803560048110610567575f80fd5b5f805f805f805f80610100898b0312156108e0575f80fd5b6108e98961055c565b97506108f760208a0161055c565b965061090560408a016108ba565b955060608901359450608089013567ffffffffffffffff80821115610928575f80fd5b6109348c838d01610787565b955060a08b0135915080821115610949575f80fd5b6109558c838d01610787565b945060c08b013591508082111561096a575f80fd5b6109768c838d01610787565b935060e08b013591508082111561098b575f80fd5b506109988b828c016107ee565b9150509295985092959890939650565b5f6040820184151583526020604060208501528185518084526060860191506020870193505f5b818110156109eb578451835293830193918301916001016109cf565b5090979650505050505050565b5f805f60608486031215610a0a575f80fd5b833567ffffffffffffffff80821115610a21575f80fd5b610a2d87838801610787565b9450602086013593506040860135915080821115610a49575f80fd5b50610a56868287016107ee565b9150509250925092565b803560058110610567575f80fd5b5f805f805f805f60e0888a031215610a84575f80fd5b8735610a8f81610545565b96506020880135610a9f81610545565b9550610aad60408901610a60565b9450606088013567ffffffffffffffff80821115610ac9575f80fd5b610ad58b838c01610787565b955060808a0135945060a08a0135915080821115610af1575f80fd5b610afd8b838c01610787565b935060c08a0135915080821115610b12575f80fd5b50610b1f8a828b016107ee565b91505092959891949750929550565b5f60e0828403121561061a575f80fd5b5f8060408385031215610b4f575f80fd5b823567ffffffffffffffff811115610b65575f80fd5b610b7185828601610b2e565b9250506020830135610b8281610545565b809150509250929050565b5f805f805f805f80610100898b031215610ba5575f80fd5b610bae8961055c565b9750610bbc60208a0161055c565b9650610bca60408a01610a60565b9550606089013567ffffffffffffffff80821115610be6575f80fd5b610bf28c838d01610787565b965060808b0135915080821115610c07575f80fd5b610c138c838d01610787565b955060a08b0135945060c08b013591508082111561096a575f80fd5b5f805f60608486031215610c41575f80fd5b833567ffffffffffffffff811115610c57575f80fd5b610c6386828701610b2e565b9350506020840135610c7481610545565b929592945050506040919091013590565b5f805f805f805f60e0888a031215610c9b575f80fd5b8735610ca681610545565b96506020880135610cb681610545565b9550610cc4604089016108ba565b945060608801359350608088013567ffffffffffffffff80821115610ce7575f80fd5b610cf38b838c01610787565b945060a08a0135915080821115610af1575f80fd5b81511515815261014081016020830151610d26602084018215159052565b506040830151610d3a604084018215159052565b506060830151610d4e606084018215159052565b506080830151610d62608084018215159052565b5060a0830151610d7660a084018215159052565b5060c0830151610d8a60c084018215159052565b5060e0830151610d9e60e084018215159052565b5061010083810151151590830152610120928301511515929091019190915290565b5f60208284031215610dd0575f80fd5b8151610780816105fd565b5f60208284031215610deb575f80fd5b813561078081610545565b5f60208284031215610e06575f80fd5b815161078081610545565b5f60208284031215610e21575f80fd5b5051919050565b5f82610e4257634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212208f97ba0bb5e9b574a9edbf70ba618196cf5d0ead0dd8044c4abf750caf2ec03864736f6c63430008180033","sourceMap":"970:3021:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:733;;;;;;:::i;:::-;;:::i;:::-;;;3879:14:136;;3872:22;3854:41;;3842:2;3827:18;2471:733:9;;;;;;;;3061:276:54;;;;;;:::i;:::-;-1:-1:-1;3132:4:54;;;;3061:276;;;;;4499:14:136;;4492:22;4474:41;;4546:2;4531:18;;4524:34;;;;4447:18;3061:276:54;4306:258:136;1214:119:54;;;;;;:::i;:::-;1298:4;1214:119;;;;;2441:326;;;;;;:::i;:::-;2697:4;2746:13;2441:326;;;;;;;;;;;;;;;;;;;;:::i;1366:127::-;;;;;;:::i;:::-;1458:4;1366:127;;;;;;1526:246;;;;;;:::i;:::-;1737:4;1526:246;;;;;;;;;;2800:228;;;;;;:::i;1805:318::-;;;;;;:::i;:::-;2054:4;2103:12;1805:318;;;;;;;;;;;;3237:752:9;;;;;;:::i;:::-;;:::i;2156:252:54:-;;;;;;:::i;2291:147:9:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2427:4:9;-1:-1:-1;;;2383:48:9;2291:147;;;;-1:-1:-1;2291:147:9;:::i;2471:733::-;2647:4;467:18:56;:16;:18::i;:::-;3033:67:9::1;::::0;-1:-1:-1;;;;;3033:67:9;;::::1;::::0;;;::::1;::::0;3079:4:::1;::::0;3033:67:::1;::::0;;;::::1;3129:15;-1:-1:-1::0;;;;;3118:26:9::1;:7;-1:-1:-1::0;;;;;3118:26:9::1;;:79;;;;-1:-1:-1::0;3148:49:9::1;::::0;;;;-1:-1:-1;;;;;16039:55:136;;;3148:49:9::1;::::0;::::1;16021:74:136::0;3148:43:9;::::1;::::0;::::1;::::0;15994:18:136;;3148:49:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3111:86:::0;2471:733;-1:-1:-1;;;;;2471:733:9:o;3237:752::-;3424:4;3430:7;467:18:56;:16;:18::i;:::-;-1:-1:-1;;;;;3609:14:9::1;3592:31;:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;3592:31:9::1;;3588:100;;-1:-1:-1::0;3647:4:9::1;::::0;-1:-1:-1;3653:23:9;3639:38:::1;;3588:100;3698:12;3727:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;3713:38:9::1;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3839:22;::::0;;;;-1:-1:-1;;;;;16039:55:136;;;3839:22:9::1;::::0;::::1;16021:74:136::0;3698:55:9;;-1:-1:-1;3864:1:9::1;::::0;3839:6:::1;:16;::::0;::::1;::::0;15994:18:136;;3839:22:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;3835:99;;;3889:4;3895:27;3921:1;3895:23:::0;:27:::1;:::i;:::-;3881:42;;;;;;;3835:99;3952:4;3958:23;3944:38;;;;;495:1:56;3237:752:9::0;;;;;;:::o;509:165:56:-;564:10;-1:-1:-1;;;;;586:6:56;564:29;;560:108;;616:41;;;;;646:10;616:41;;;16021:74:136;15994:18;;616:41:56;;;;;;;560:108;509:165::o;14:154:136:-;-1:-1:-1;;;;;93:5:136;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:134::-;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:184::-;-1:-1:-1;;;361:1:136;354:88;461:4;458:1;451:15;485:4;482:1;475:15;501:253;573:2;567:9;615:4;603:17;;650:18;635:34;;671:22;;;632:62;629:88;;;697:18;;:::i;:::-;733:2;726:22;501:253;:::o;759:275::-;830:2;824:9;895:2;876:13;;-1:-1:-1;;872:27:136;860:40;;930:18;915:34;;951:22;;;912:62;909:88;;;977:18;;:::i;:::-;1013:2;1006:22;759:275;;-1:-1:-1;759:275:136:o;1039:194::-;1110:4;1143:18;1135:6;1132:30;1129:56;;;1165:18;;:::i;:::-;-1:-1:-1;1210:1:136;1206:14;1222:4;1202:25;;1039:194::o;1238:118::-;1324:5;1317:13;1310:21;1303:5;1300:32;1290:60;;1346:1;1343;1336:12;1361:168;1433:5;1478:3;1469:6;1464:3;1460:16;1456:26;1453:46;;;1495:1;1492;1485:12;1453:46;-1:-1:-1;1517:6:136;1361:168;-1:-1:-1;1361:168:136:o;1534:2079::-;1713:6;1721;1729;1737;1790:3;1778:9;1769:7;1765:23;1761:33;1758:53;;;1807:1;1804;1797:12;1758:53;1846:9;1833:23;1865:31;1890:5;1865:31;:::i;:::-;1915:5;-1:-1:-1;1939:2:136;1978:18;;;1965:32;2006:33;1965:32;2006:33;:::i;:::-;2058:7;-1:-1:-1;2084:2:136;2122:18;;;2109:32;2164:18;2153:30;;2150:50;;;2196:1;2193;2186:12;2150:50;2219:22;;2272:4;2264:13;;2260:27;-1:-1:-1;2250:55:136;;2301:1;2298;2291:12;2250:55;2337:2;2324:16;2360:71;2376:54;2427:2;2376:54;:::i;:::-;2360:71;:::i;:::-;2465:15;;;2547:1;2543:10;;;;2535:19;;2531:28;;;2496:12;;;;2571:19;;;2568:39;;;2603:1;2600;2593:12;2568:39;2627:11;;;;2647:842;2663:6;2658:3;2655:15;2647:842;;;2745:4;2739:3;2730:7;2726:17;2722:28;2719:48;;;2763:1;2760;2753:12;2719:48;2795:22;;:::i;:::-;2858:3;2845:17;2875:33;2900:7;2875:33;:::i;:::-;2921:24;;2986:12;;;2973:26;3034:1;3022:14;;3012:42;;3050:1;3047;3040:12;3012:42;3074:16;;;3067:33;3141:12;;;3128:26;3167:33;3128:26;3167:33;:::i;:::-;3220:16;;;3213:33;3269:2;3312:12;;;3299:26;3338:30;3299:26;3338:30;:::i;:::-;3388:16;;;3381:33;3427:20;;2689:4;2680:14;;;;;3467:12;;;;2647:842;;;3508:5;3498:15;;;;;;;;3532:75;3599:7;3594:2;3583:9;3579:18;3532:75;:::i;:::-;3522:85;;1534:2079;;;;;;;:::o;3906:395::-;4000:6;4053:2;4041:9;4032:7;4028:23;4024:32;4021:52;;;4069:1;4066;4059:12;4021:52;4109:9;4096:23;4142:18;4134:6;4131:30;4128:50;;;4174:1;4171;4164:12;4128:50;4197:22;;4253:3;4235:16;;;4231:26;4228:46;;;4270:1;4267;4260:12;4228:46;4293:2;3906:395;-1:-1:-1;;;3906:395:136:o;4569:679::-;4623:5;4676:3;4669:4;4661:6;4657:17;4653:27;4643:55;;4694:1;4691;4684:12;4643:55;4730:6;4717:20;4756:4;4780:71;4796:54;4847:2;4796:54;:::i;4780:71::-;4873:3;4897:2;4892:3;4885:15;4925:4;4920:3;4916:14;4909:21;;4982:4;4976:2;4973:1;4969:10;4961:6;4957:23;4953:34;4939:48;;5010:3;5002:6;4999:15;4996:35;;;5027:1;5024;5017:12;4996:35;5063:4;5055:6;5051:17;5077:142;5093:6;5088:3;5085:15;5077:142;;;5159:17;;5147:30;;5197:12;;;;5110;;5077:142;;;-1:-1:-1;5237:5:136;4569:679;-1:-1:-1;;;;;;4569:679:136:o;5253:530::-;5295:5;5348:3;5341:4;5333:6;5329:17;5325:27;5315:55;;5366:1;5363;5356:12;5315:55;5402:6;5389:20;5428:18;5424:2;5421:26;5418:52;;;5450:18;;:::i;:::-;5494:55;5537:2;5518:13;;-1:-1:-1;;5514:27:136;5543:4;5510:38;5494:55;:::i;:::-;5574:2;5565:7;5558:19;5620:3;5613:4;5608:2;5600:6;5596:15;5592:26;5589:35;5586:55;;;5637:1;5634;5627:12;5586:55;5702:2;5695:4;5687:6;5683:17;5676:4;5667:7;5663:18;5650:55;5750:1;5725:16;;;5743:4;5721:27;5714:38;;;;5729:7;5253:530;-1:-1:-1;;;5253:530:136:o;5788:567::-;5890:6;5898;5951:2;5939:9;5930:7;5926:23;5922:32;5919:52;;;5967:1;5964;5957:12;5919:52;6007:9;5994:23;6036:18;6077:2;6069:6;6066:14;6063:34;;;6093:1;6090;6083:12;6063:34;6116:61;6169:7;6160:6;6149:9;6145:22;6116:61;:::i;:::-;6106:71;;6230:2;6219:9;6215:18;6202:32;6186:48;;6259:2;6249:8;6246:16;6243:36;;;6275:1;6272;6265:12;6243:36;;6298:51;6341:7;6330:8;6319:9;6315:24;6298:51;:::i;:::-;6288:61;;;5788:567;;;;;:::o;6360:160::-;6445:20;;6494:1;6484:12;;6474:40;;6510:1;6507;6500:12;6525:1355;6755:6;6763;6771;6779;6787;6795;6803;6811;6864:3;6852:9;6843:7;6839:23;6835:33;6832:53;;;6881:1;6878;6871:12;6832:53;6904:29;6923:9;6904:29;:::i;:::-;6894:39;;6952:38;6986:2;6975:9;6971:18;6952:38;:::i;:::-;6942:48;;7009:55;7060:2;7049:9;7045:18;7009:55;:::i;:::-;6999:65;;7111:2;7100:9;7096:18;7083:32;7073:42;;7166:3;7155:9;7151:19;7138:33;7190:18;7231:2;7223:6;7220:14;7217:34;;;7247:1;7244;7237:12;7217:34;7270:61;7323:7;7314:6;7303:9;7299:22;7270:61;:::i;:::-;7260:71;;7384:3;7373:9;7369:19;7356:33;7340:49;;7414:2;7404:8;7401:16;7398:36;;;7430:1;7427;7420:12;7398:36;7453:63;7508:7;7497:8;7486:9;7482:24;7453:63;:::i;:::-;7443:73;;7569:3;7558:9;7554:19;7541:33;7525:49;;7599:2;7589:8;7586:16;7583:36;;;7615:1;7612;7605:12;7583:36;7638:63;7693:7;7682:8;7671:9;7667:24;7638:63;:::i;:::-;7628:73;;7754:3;7743:9;7739:19;7726:33;7710:49;;7784:2;7774:8;7771:16;7768:36;;;7800:1;7797;7790:12;7768:36;;7823:51;7866:7;7855:8;7844:9;7840:24;7823:51;:::i;:::-;7813:61;;;6525:1355;;;;;;;;;;;:::o;7885:713::-;8049:4;8097:2;8086:9;8082:18;8141:6;8134:14;8127:22;8116:9;8109:41;8169:2;8207;8202;8191:9;8187:18;8180:30;8230:6;8265;8259:13;8296:6;8288;8281:22;8334:2;8323:9;8319:18;8312:25;;8372:2;8364:6;8360:15;8346:29;;8393:1;8403:169;8417:6;8414:1;8411:13;8403:169;;;8478:13;;8466:26;;8547:15;;;;8512:12;;;;8439:1;8432:9;8403:169;;;-1:-1:-1;8589:3:136;;7885:713;-1:-1:-1;;;;;;;7885:713:136:o;8603:635::-;8714:6;8722;8730;8783:2;8771:9;8762:7;8758:23;8754:32;8751:52;;;8799:1;8796;8789:12;8751:52;8839:9;8826:23;8868:18;8909:2;8901:6;8898:14;8895:34;;;8925:1;8922;8915:12;8895:34;8948:61;9001:7;8992:6;8981:9;8977:22;8948:61;:::i;:::-;8938:71;;9056:2;9045:9;9041:18;9028:32;9018:42;;9113:2;9102:9;9098:18;9085:32;9069:48;;9142:2;9132:8;9129:16;9126:36;;;9158:1;9155;9148:12;9126:36;;9181:51;9224:7;9213:8;9202:9;9198:24;9181:51;:::i;:::-;9171:61;;;8603:635;;;;;:::o;9243:157::-;9325:20;;9374:1;9364:12;;9354:40;;9390:1;9387;9380:12;9405:1250;9598:6;9606;9614;9622;9630;9638;9646;9699:3;9687:9;9678:7;9674:23;9670:33;9667:53;;;9716:1;9713;9706:12;9667:53;9755:9;9742:23;9774:31;9799:5;9774:31;:::i;:::-;9824:5;-1:-1:-1;9881:2:136;9866:18;;9853:32;9894:33;9853:32;9894:33;:::i;:::-;9946:7;-1:-1:-1;9972:52:136;10020:2;10005:18;;9972:52;:::i;:::-;9962:62;;10075:2;10064:9;10060:18;10047:32;10098:18;10139:2;10131:6;10128:14;10125:34;;;10155:1;10152;10145:12;10125:34;10178:61;10231:7;10222:6;10211:9;10207:22;10178:61;:::i;:::-;10168:71;;10286:3;10275:9;10271:19;10258:33;10248:43;;10344:3;10333:9;10329:19;10316:33;10300:49;;10374:2;10364:8;10361:16;10358:36;;;10390:1;10387;10380:12;10358:36;10413:63;10468:7;10457:8;10446:9;10442:24;10413:63;:::i;:::-;10403:73;;10529:3;10518:9;10514:19;10501:33;10485:49;;10559:2;10549:8;10546:16;10543:36;;;10575:1;10572;10565:12;10543:36;;10598:51;10641:7;10630:8;10619:9;10615:24;10598:51;:::i;:::-;10588:61;;;9405:1250;;;;;;;;;;:::o;10660:163::-;10727:5;10772:3;10763:6;10758:3;10754:16;10750:26;10747:46;;;10789:1;10786;10779:12;10828:505;10930:6;10938;10991:2;10979:9;10970:7;10966:23;10962:32;10959:52;;;11007:1;11004;10997:12;10959:52;11047:9;11034:23;11080:18;11072:6;11069:30;11066:50;;;11112:1;11109;11102:12;11066:50;11135:74;11201:7;11192:6;11181:9;11177:22;11135:74;:::i;:::-;11125:84;;;11259:2;11248:9;11244:18;11231:32;11272:31;11297:5;11272:31;:::i;:::-;11322:5;11312:15;;;10828:505;;;;;:::o;11338:1349::-;11565:6;11573;11581;11589;11597;11605;11613;11621;11674:3;11662:9;11653:7;11649:23;11645:33;11642:53;;;11691:1;11688;11681:12;11642:53;11714:29;11733:9;11714:29;:::i;:::-;11704:39;;11762:38;11796:2;11785:9;11781:18;11762:38;:::i;:::-;11752:48;;11819:52;11867:2;11856:9;11852:18;11819:52;:::i;:::-;11809:62;;11922:2;11911:9;11907:18;11894:32;11945:18;11986:2;11978:6;11975:14;11972:34;;;12002:1;11999;11992:12;11972:34;12025:61;12078:7;12069:6;12058:9;12054:22;12025:61;:::i;:::-;12015:71;;12139:3;12128:9;12124:19;12111:33;12095:49;;12169:2;12159:8;12156:16;12153:36;;;12185:1;12182;12175:12;12153:36;12208:63;12263:7;12252:8;12241:9;12237:24;12208:63;:::i;:::-;12198:73;;12318:3;12307:9;12303:19;12290:33;12280:43;;12376:3;12365:9;12361:19;12348:33;12332:49;;12406:2;12396:8;12393:16;12390:36;;;12422:1;12419;12412:12;12692:573;12803:6;12811;12819;12872:2;12860:9;12851:7;12847:23;12843:32;12840:52;;;12888:1;12885;12878:12;12840:52;12928:9;12915:23;12961:18;12953:6;12950:30;12947:50;;;12993:1;12990;12983:12;12947:50;13016:74;13082:7;13073:6;13062:9;13058:22;13016:74;:::i;:::-;13006:84;;;13140:2;13129:9;13125:18;13112:32;13153:31;13178:5;13153:31;:::i;:::-;12692:573;;13203:5;;-1:-1:-1;;;13255:2:136;13240:18;;;;13227:32;;12692:573::o;13270:1256::-;13466:6;13474;13482;13490;13498;13506;13514;13567:3;13555:9;13546:7;13542:23;13538:33;13535:53;;;13584:1;13581;13574:12;13535:53;13623:9;13610:23;13642:31;13667:5;13642:31;:::i;:::-;13692:5;-1:-1:-1;13749:2:136;13734:18;;13721:32;13762:33;13721:32;13762:33;:::i;:::-;13814:7;-1:-1:-1;13840:55:136;13891:2;13876:18;;13840:55;:::i;:::-;13830:65;;13942:2;13931:9;13927:18;13914:32;13904:42;;13997:3;13986:9;13982:19;13969:33;14021:18;14062:2;14054:6;14051:14;14048:34;;;14078:1;14075;14068:12;14048:34;14101:61;14154:7;14145:6;14134:9;14130:22;14101:61;:::i;:::-;14091:71;;14215:3;14204:9;14200:19;14187:33;14171:49;;14245:2;14235:8;14232:16;14229:36;;;14261:1;14258;14251:12;14531:1339;14748:13;;3688;3681:21;3669:34;;14719:3;14704:19;;14820:4;14812:6;14808:17;14802:24;14835:51;14880:4;14869:9;14865:20;14851:12;3688:13;3681:21;3669:34;;3618:91;14835:51;;14935:4;14927:6;14923:17;14917:24;14950:53;14997:4;14986:9;14982:20;14966:14;3688:13;3681:21;3669:34;;3618:91;14950:53;;15052:4;15044:6;15040:17;15034:24;15067:53;15114:4;15103:9;15099:20;15083:14;3688:13;3681:21;3669:34;;3618:91;15067:53;;15169:4;15161:6;15157:17;15151:24;15184:53;15231:4;15220:9;15216:20;15200:14;3688:13;3681:21;3669:34;;3618:91;15184:53;;15286:4;15278:6;15274:17;15268:24;15301:53;15348:4;15337:9;15333:20;15317:14;3688:13;3681:21;3669:34;;3618:91;15301:53;;15403:4;15395:6;15391:17;15385:24;15418:53;15465:4;15454:9;15450:20;15434:14;3688:13;3681:21;3669:34;;3618:91;15418:53;;15520:4;15512:6;15508:17;15502:24;15535:53;15582:4;15571:9;15567:20;15551:14;3688:13;3681:21;3669:34;;3618:91;15535:53;-1:-1:-1;15607:6:136;15650:15;;;15644:22;3688:13;3681:21;15707:18;;;3669:34;15745:6;15788:15;;;15782:22;3688:13;3681:21;15845:18;;;;3669:34;;;;14531:1339;:::o;16106:245::-;16173:6;16226:2;16214:9;16205:7;16201:23;16197:32;16194:52;;;16242:1;16239;16232:12;16194:52;16274:9;16268:16;16293:28;16315:5;16293:28;:::i;16356:247::-;16415:6;16468:2;16456:9;16447:7;16443:23;16439:32;16436:52;;;16484:1;16481;16474:12;16436:52;16523:9;16510:23;16542:31;16567:5;16542:31;:::i;16608:251::-;16678:6;16731:2;16719:9;16710:7;16706:23;16702:32;16699:52;;;16747:1;16744;16737:12;16699:52;16779:9;16773:16;16798:31;16823:5;16798:31;:::i;16864:184::-;16934:6;16987:2;16975:9;16966:7;16962:23;16958:32;16955:52;;;17003:1;17000;16993:12;16955:52;-1:-1:-1;17026:16:136;;16864:184;-1:-1:-1;16864:184:136:o;17053:274::-;17093:1;17119;17109:189;;-1:-1:-1;;;17151:1:136;17144:88;17255:4;17252:1;17245:15;17283:4;17280:1;17273:15;17109:189;-1:-1:-1;17312:9:136;;17053:274::o","linkReferences":{},"immutableReferences":{"12268":[{"start":1254,"length":32}],"2810":[{"start":630,"length":32}],"2812":[{"start":846,"length":32}],"2815":[{"start":1092,"length":32}]}},"methodIdentifiers":{"getHookFlags()":"d77153a7","onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":"976907cc","onAfterInitialize(uint256[],uint256,bytes)":"38be241d","onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":"2754888d","onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":"18b6eb55","onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":"45421ec7","onBeforeInitialize(uint256[],bytes)":"1c149e28","onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":"ba5f9f40","onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":"5211fa77","onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":"a0e8f5ac","onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":"0b89f182"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allowedFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"veBAL\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trustedRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"VeBALFeeDiscountHookExampleRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getHookFlags\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"}],\"internalType\":\"struct HookFlags\",\"name\":\"hookFlags\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onAfterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AfterSwapParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"onAfterSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onBeforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onBeforeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"staticSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"onComputeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"onRegister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Uses the dynamic fee mechanism to give a 50% discount on swap fees.\",\"errors\":{\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}]},\"events\":{\"VeBALFeeDiscountHookExampleRegistered(address,address,address)\":{\"details\":\"If the registration fails the call will revert, so there will be no event.\",\"params\":{\"factory\":\"The factory (must be the allowed factory, or the call will revert)\",\"hooksContract\":\"This contract\",\"pool\":\"The pool on which the hook was registered\"}}},\"kind\":\"dev\",\"methods\":{\"getHookFlags()\":{\"details\":\"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \\\"mandatory\\\" hook.\",\"returns\":{\"hookFlags\":\"Flags indicating which hooks the contract supports\"}},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsInRaw\":\"Actual amounts of tokens added, sorted in token registration order\",\"amountsInScaled18\":\"Actual amounts of tokens added, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountOut\":\"Amount of pool tokens minted\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsInRaw, potentially modified by the hook\"}},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"details\":\"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"bptAmountOut\":\"Amount of pool tokens minted during initialization\",\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool accepts the initialization results\"}},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsOutRaw\":\"Actual amount of tokens to receive, sorted in token registration order\",\"amountsOutScaled18\":\"Scaled amount of tokens to receive, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountIn\":\"Amount of pool tokens to burn\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amountsOutRaw, potentially modified by the hook\"}},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"details\":\"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see above for struct definition)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"New amount calculated, potentially modified by the hook\"}},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of add liquidity operation (e.g., proportional, custom)\",\"maxAmountsInScaled18\":\"Maximum amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeInitialize(uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"success True if the pool wishes to proceed with initialization\"}},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"maxBptAmountIn\":\"Maximum amount of input pool tokens\",\"minAmountsOutScaled18\":\"Minimum output amounts, sorted in token registration order\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"details\":\"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the Vault (poolData, token config, etc.)\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\"}},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"details\":\"Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the Vault (poolData, token config, etc.)\",\"staticSwapFeePercentage\":\"18-decimal FP value of the static swap fee percentage, for reference\"},\"returns\":{\"_0\":\"True if the pool wishes to proceed with settlement\",\"_1\":\"Value of the swap fee percentage, as an 18-decimal FP value\"}},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"details\":\"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.\",\"params\":{\"factory\":\"Address of the pool factory (contract deploying the pool)\",\"liquidityManagement\":\"Liquidity management flags indicating which functions are enabled\",\"pool\":\"Address of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"},\"returns\":{\"_0\":\"success True if the hook allowed the registration, false otherwise\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}]},\"events\":{\"VeBALFeeDiscountHookExampleRegistered(address,address,address)\":{\"notice\":\"A new `VeBALFeeDiscountHookExample` contract has been registered successfully.\"}},\"kind\":\"user\",\"methods\":{\"getHookFlags()\":{\"notice\":\"Return the set of hooks implemented by the contract.\"},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed after adding liquidity.\"},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"notice\":\"Hook to be executed after pool initialization.\"},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed after removing liquidity.\"},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"notice\":\"Called after a swap to perform further actions once the balances have been updated by the swap.\"},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed before adding liquidity.\"},\"onBeforeInitialize(uint256[],bytes)\":{\"notice\":\"Hook executed before pool initialization.\"},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed before removing liquidity.\"},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"notice\":\"Called before a swap to give the Pool an opportunity to perform actions.\"},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"notice\":\"Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees.\"},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"notice\":\"Hook executed when a pool is registered with a non-zero hooks contract.\"}},\"notice\":\"Hook that gives a swap fee discount to veBAL holders.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/hooks/VeBALFeeDiscountHookExample.sol\":\"VeBALFeeDiscountHookExample\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"contracts/hooks/VeBALFeeDiscountHookExample.sol\":{\"keccak256\":\"0x90276626fe6d431cfbf10c49c070311ad38e1661c33fbe9c7090cd719bc2bba5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://253316b425d1ff57792d6a78c0e24ecf21edb2c4f139d3ecfcc595a1962b618a\",\"dweb:/ipfs/QmfXHu6dPwdgj11aSAYmsC4Uz3WbmhvRLrxe5XE52gVeUv\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87\",\"dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol\":{\"keccak256\":\"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452\",\"dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c\",\"dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol\":{\"keccak256\":\"0x4c013d3d3f618620a7e1683919f0655ac9abc121274087212d6c3e1a3fd3a2a4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1250e0af94d1ffa96d82ae032592f0058898546b159ed2f00833a263e02f5a6b\",\"dweb:/ipfs/QmcS3nY3ojj8km2k9VrREYWX7vWQtBLDscpehAdQFWjhJ4\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol\":{\"keccak256\":\"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f\",\"dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol\":{\"keccak256\":\"0x265cba6f0225fae5867e47ead3b7d51ea124c6599d450b361bb86795ffb0a586\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9363b61e7b592c6d9476cfcdc9d468669f3e9d2d232ad426f6c5c6c00247258e\",\"dweb:/ipfs/QmT771Kpp4VswEcBCJCMxKKKiRNMcLJeziKCisjLrc2opx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol\":{\"keccak256\":\"0x630ca7522d58e5d4c6777c524d32eaf805cc9af84428c51f693315984de61c70\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://40470293be2b52718e9b9b858030ec27a8c55bfcb626c53db0c5d45a3445d2a5\",\"dweb:/ipfs/QmeJ6Rr7VL74FZsyrLgQWyPFagy1r5C8LkzqMaSrrj9zZ3\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566\",\"dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol\":{\"keccak256\":\"0xe68fbe2bef8c4fda8cf43d186d0e5518f9d76e57ac1c2f8082a1d0bcf444ace7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://614fb11ff5f7ea15cab882dfe4c7f69656eb5ad0e7cb217338664d8f1d0403c7\",\"dweb:/ipfs/QmUPZRXKFLsGEiPM38uDz14EVvJV81NCNBoWajmAbEmDka\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol\":{\"keccak256\":\"0x3bf1cfa4716401af08fd265db6ebbaad011d94d4531be5a6289aafbe4dc02f0f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7969b076f81af1fec02a0cc572ea56be691315bbcc761bb47e38aecb86ae15fc\",\"dweb:/ipfs/QmPkYWjEEj9Kzrbhcc6i8mmB1WAopcf13Ue2ZhayTXtnBm\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol\":{\"keccak256\":\"0xfa87a090e0b1fc87e34b6a891b7abd4697e75997e37d073020b91c7c408bffe3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b33f211008d57462d8b4598b78e477ce6ee53f0c1172682b94e896954752fe9\",\"dweb:/ipfs/QmVzjPRey6qss4ucJx3Mb1gs5MAyLKcLUD5tLt9KNn2SNR\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol\":{\"keccak256\":\"0x2c6f4f4d714a0f1e7e648909753839da8182117f22018f4337f9632f9c40597b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://99fb94d7fcf9f972f4aec716d7d4be43e3d28f90f8f5923b9b8245be178e01aa\",\"dweb:/ipfs/QmeLSFfcvYwmPpQ58yESVjYXPY13NzGU28WjxkWUj8sgqx\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol\":{\"keccak256\":\"0x976def53871db0ad0db3504086a783508b0c293b86364c8985d6700283986799\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9a2904288327a95373e32d99b2244a7afcf9f741b970ff34af6a933076076e6\",\"dweb:/ipfs/QmaS4adLMjzagUsqYhtxo7KJW2kZogx5orQgvfVzLR3dzW\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol\":{\"keccak256\":\"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3\",\"dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol\":{\"keccak256\":\"0xe987f0806641ac62fc66a6f3b0c6b58a44832c01a1c95f349eb880b00529756a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f8fc15c0fc44dd7032aa5ece3f281d1d83076719ef9b6f6442be79a62e2c1848\",\"dweb:/ipfs/QmVAZSVhzg6fb3ChkCeAPtLLwqnwmxdkxrenvJaf83trNC\"]},\"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol\":{\"keccak256\":\"0x0989167a7367161261e117a00cacb0ab4b66a9c442556841faa7b7cb5a4eb846\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9cc23603607cae657ebb11bdee1d3f40bc5dbf2140474b5212a0f743d524cdba\",\"dweb:/ipfs/QmVqUsVmXKQvmxqLY6oxK8JjuMGrCLaV8VihstXR5AoejG\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf\",\"dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"vault","type":"address"},{"internalType":"address","name":"allowedFactory","type":"address"},{"internalType":"address","name":"veBAL","type":"address"},{"internalType":"address","name":"trustedRouter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"SenderIsNotVault"},{"inputs":[{"internalType":"address","name":"hooksContract","type":"address","indexed":true},{"internalType":"address","name":"factory","type":"address","indexed":true},{"internalType":"address","name":"pool","type":"address","indexed":true}],"type":"event","name":"VeBALFeeDiscountHookExampleRegistered","anonymous":false},{"inputs":[],"stateMutability":"pure","type":"function","name":"getHookFlags","outputs":[{"internalType":"struct HookFlags","name":"hookFlags","type":"tuple","components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"}]}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum AddLiquidityKind","name":"","type":"uint8"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsInRaw","type":"uint256[]"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterAddLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterInitialize","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum RemoveLiquidityKind","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsOutRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onAfterRemoveLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"struct AfterSwapParams","name":"","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountInScaled18","type":"uint256"},{"internalType":"uint256","name":"amountOutScaled18","type":"uint256"},{"internalType":"uint256","name":"tokenInBalanceScaled18","type":"uint256"},{"internalType":"uint256","name":"tokenOutBalanceScaled18","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedScaled18","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"onAfterSwap","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum AddLiquidityKind","name":"","type":"uint8"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeAddLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeInitialize","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum RemoveLiquidityKind","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeRemoveLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct PoolSwapParams","name":"","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"onBeforeSwap","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct PoolSwapParams","name":"params","type":"tuple","components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}]},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"staticSwapFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function","name":"onComputeDynamicSwapFeePercentage","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"struct TokenConfig[]","name":"","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}]},{"internalType":"struct LiquidityManagement","name":"","type":"tuple","components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"onRegister","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"getHookFlags()":{"details":"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \"mandatory\" hook.","returns":{"hookFlags":"Flags indicating which hooks the contract supports"}},"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":{"details":"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"amountsInRaw":"Actual amounts of tokens added, sorted in token registration order","amountsInScaled18":"Actual amounts of tokens added, sorted in token registration order","balancesScaled18":"Current pool balances, sorted in token registration order","bptAmountOut":"Amount of pool tokens minted","kind":"The type of add liquidity operation (e.g., proportional, custom)","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated an add liquidity operation on the Vault","userData":"Additional (optional) data provided by the user"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"New amountsInRaw, potentially modified by the hook"}},"onAfterInitialize(uint256[],uint256,bytes)":{"details":"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"bptAmountOut":"Amount of pool tokens minted during initialization","exactAmountsIn":"Exact amounts of input tokens","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"success True if the pool accepts the initialization results"}},"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":{"details":"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"amountsOutRaw":"Actual amount of tokens to receive, sorted in token registration order","amountsOutScaled18":"Scaled amount of tokens to receive, sorted in token registration order","balancesScaled18":"Current pool balances, sorted in token registration order","bptAmountIn":"Amount of pool tokens to burn","kind":"The type of remove liquidity operation (e.g., proportional, custom)","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated a remove liquidity operation on the Vault","userData":"Additional (optional) data provided by the user"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"New amountsOutRaw, potentially modified by the hook"}},"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":{"details":"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see above for struct definition)"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"New amount calculated, potentially modified by the hook"}},"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":{"details":"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"balancesScaled18":"Current pool balances, sorted in token registration order","kind":"The type of add liquidity operation (e.g., proportional, custom)","maxAmountsInScaled18":"Maximum amounts of input tokens","minBptAmountOut":"Minimum amount of output pool tokens","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated an add liquidity operation on the Vault","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onBeforeInitialize(uint256[],bytes)":{"details":"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"exactAmountsIn":"Exact amounts of input tokens","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"success True if the pool wishes to proceed with initialization"}},"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":{"details":"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"balancesScaled18":"Current pool balances, sorted in token registration order","kind":"The type of remove liquidity operation (e.g., proportional, custom)","maxBptAmountIn":"Maximum amount of input pool tokens","minAmountsOutScaled18":"Minimum output amounts, sorted in token registration order","pool":"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)","router":"The address (usually a router contract) that initiated a remove liquidity operation on the Vault","userData":"Optional, arbitrary data sent with the encoded request"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":{"details":"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see PoolSwapParams for struct definition)","pool":"Pool address, used to get pool information from the Vault (poolData, token config, etc.)"},"returns":{"_0":"True if the pool wishes to proceed with settlement"}},"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":{"details":"Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.","params":{"params":"Swap parameters (see PoolSwapParams for struct definition)","pool":"Pool address, used to get pool information from the Vault (poolData, token config, etc.)","staticSwapFeePercentage":"18-decimal FP value of the static swap fee percentage, for reference"},"returns":{"_0":"True if the pool wishes to proceed with settlement","_1":"Value of the swap fee percentage, as an 18-decimal FP value"}},"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":{"details":"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.","params":{"factory":"Address of the pool factory (contract deploying the pool)","liquidityManagement":"Liquidity management flags indicating which functions are enabled","pool":"Address of the pool","tokenConfig":"An array of descriptors for the tokens the pool will manage"},"returns":{"_0":"success True if the hook allowed the registration, false otherwise"}}},"version":1},"userdoc":{"kind":"user","methods":{"getHookFlags()":{"notice":"Return the set of hooks implemented by the contract."},"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":{"notice":"Hook to be executed after adding liquidity."},"onAfterInitialize(uint256[],uint256,bytes)":{"notice":"Hook to be executed after pool initialization."},"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":{"notice":"Hook to be executed after removing liquidity."},"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":{"notice":"Called after a swap to perform further actions once the balances have been updated by the swap."},"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":{"notice":"Hook to be executed before adding liquidity."},"onBeforeInitialize(uint256[],bytes)":{"notice":"Hook executed before pool initialization."},"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":{"notice":"Hook to be executed before removing liquidity."},"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":{"notice":"Called before a swap to give the Pool an opportunity to perform actions."},"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":{"notice":"Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees."},"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":{"notice":"Hook executed when a pool is registered with a non-zero hooks contract."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/hooks/VeBALFeeDiscountHookExample.sol":"VeBALFeeDiscountHookExample"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/hooks/VeBALFeeDiscountHookExample.sol":{"keccak256":"0x90276626fe6d431cfbf10c49c070311ad38e1661c33fbe9c7090cd719bc2bba5","urls":["bzz-raw://253316b425d1ff57792d6a78c0e24ecf21edb2c4f139d3ecfcc595a1962b618a","dweb:/ipfs/QmfXHu6dPwdgj11aSAYmsC4Uz3WbmhvRLrxe5XE52gVeUv"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"keccak256":"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2","urls":["bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87","dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IRateProvider.sol":{"keccak256":"0x910edf810a7b1f0bc24e0e539ad0c0f6f6e82643ab41349861144e1a456c4906","urls":["bzz-raw://96c2d6bcc42cba5cb5885e66323c42b99feaabddc3978df2297e26b029c14452","dweb:/ipfs/QmVinjNKFH5GBVtjaNjdBtnepHSGJBMJ64GJ3dpivtnCmc"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IAuthorizer.sol":{"keccak256":"0x974e40f9ec0da0d2cce5d6e469407fb2d9c3a85f86dd2bb0b182a393ba661e0a","urls":["bzz-raw://d069400e563125436cb97dc09961b4fe355a1a3a9cabf6b111053a1a6ae0984c","dweb:/ipfs/QmVtH4vLfRpz5KpkSqGw4BSXpUhZv1Um2DSkJhb32xsUDy"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol":{"keccak256":"0x4c013d3d3f618620a7e1683919f0655ac9abc121274087212d6c3e1a3fd3a2a4","urls":["bzz-raw://1250e0af94d1ffa96d82ae032592f0058898546b159ed2f00833a263e02f5a6b","dweb:/ipfs/QmcS3nY3ojj8km2k9VrREYWX7vWQtBLDscpehAdQFWjhJ4"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol":{"keccak256":"0x90f77758dbdfdb952754aa3fbfbdf816afb9592b49a12932cf6636bb6dab6638","urls":["bzz-raw://bf3a76192ee4290f81c33dcc28889761087b0f3f5324bdf0c5487504a349df5f","dweb:/ipfs/QmX5tH5yox4riErpQ43BEmc7L11C65ob53gRQ5VUBdNM3Y"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IProtocolFeeController.sol":{"keccak256":"0x265cba6f0225fae5867e47ead3b7d51ea124c6599d450b361bb86795ffb0a586","urls":["bzz-raw://9363b61e7b592c6d9476cfcdc9d468669f3e9d2d232ad426f6c5c6c00247258e","dweb:/ipfs/QmT771Kpp4VswEcBCJCMxKKKiRNMcLJeziKCisjLrc2opx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol":{"keccak256":"0x630ca7522d58e5d4c6777c524d32eaf805cc9af84428c51f693315984de61c70","urls":["bzz-raw://40470293be2b52718e9b9b858030ec27a8c55bfcb626c53db0c5d45a3445d2a5","dweb:/ipfs/QmeJ6Rr7VL74FZsyrLgQWyPFagy1r5C8LkzqMaSrrj9zZ3"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol":{"keccak256":"0xdc75f953e7fcb8dee0f26935ce638cfb515f512719bfe5c57e117f366b2cbb7c","urls":["bzz-raw://4ec167998306d37a2c4e2ab76cee77d252e5f868019f3a038241227c7a06e566","dweb:/ipfs/QmQfB1yvkSrcZpTThv3TuuT7zvKfU1euVAf1av2hPuj9GH"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultAdmin.sol":{"keccak256":"0xe68fbe2bef8c4fda8cf43d186d0e5518f9d76e57ac1c2f8082a1d0bcf444ace7","urls":["bzz-raw://614fb11ff5f7ea15cab882dfe4c7f69656eb5ad0e7cb217338664d8f1d0403c7","dweb:/ipfs/QmUPZRXKFLsGEiPM38uDz14EVvJV81NCNBoWajmAbEmDka"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultErrors.sol":{"keccak256":"0x3bf1cfa4716401af08fd265db6ebbaad011d94d4531be5a6289aafbe4dc02f0f","urls":["bzz-raw://7969b076f81af1fec02a0cc572ea56be691315bbcc761bb47e38aecb86ae15fc","dweb:/ipfs/QmPkYWjEEj9Kzrbhcc6i8mmB1WAopcf13Ue2ZhayTXtnBm"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultEvents.sol":{"keccak256":"0xfa87a090e0b1fc87e34b6a891b7abd4697e75997e37d073020b91c7c408bffe3","urls":["bzz-raw://2b33f211008d57462d8b4598b78e477ce6ee53f0c1172682b94e896954752fe9","dweb:/ipfs/QmVzjPRey6qss4ucJx3Mb1gs5MAyLKcLUD5tLt9KNn2SNR"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultExtension.sol":{"keccak256":"0x2c6f4f4d714a0f1e7e648909753839da8182117f22018f4337f9632f9c40597b","urls":["bzz-raw://99fb94d7fcf9f972f4aec716d7d4be43e3d28f90f8f5923b9b8245be178e01aa","dweb:/ipfs/QmeLSFfcvYwmPpQ58yESVjYXPY13NzGU28WjxkWUj8sgqx"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVaultMain.sol":{"keccak256":"0x976def53871db0ad0db3504086a783508b0c293b86364c8985d6700283986799","urls":["bzz-raw://e9a2904288327a95373e32d99b2244a7afcf9f741b970ff34af6a933076076e6","dweb:/ipfs/QmaS4adLMjzagUsqYhtxo7KJW2kZogx5orQgvfVzLR3dzW"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol":{"keccak256":"0xa617c556d3cfea9f5dd00a938e866418fe86fd1ed82c7edf0af9e0ab49bfbdc3","urls":["bzz-raw://ac8ac4d0d045d3e3270da4252eeccb4de2bb4cd50713c71c1ddbc1d9f3bb86d3","dweb:/ipfs/QmTgVAPthGjZSbd6dCczcRGSBeZJs4xbvyjAgWYB4rc6gf"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol":{"keccak256":"0xe987f0806641ac62fc66a6f3b0c6b58a44832c01a1c95f349eb880b00529756a","urls":["bzz-raw://f8fc15c0fc44dd7032aa5ece3f281d1d83076719ef9b6f6442be79a62e2c1848","dweb:/ipfs/QmVAZSVhzg6fb3ChkCeAPtLLwqnwmxdkxrenvJaf83trNC"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol":{"keccak256":"0x0989167a7367161261e117a00cacb0ab4b66a9c442556841faa7b7cb5a4eb846","urls":["bzz-raw://9cc23603607cae657ebb11bdee1d3f40bc5dbf2140474b5212a0f743d524cdba","dweb:/ipfs/QmVqUsVmXKQvmxqLY6oxK8JjuMGrCLaV8VihstXR5AoejG"],"license":"GPL-3.0-or-later"},"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06","urls":["bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf","dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28","urls":["bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323","dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"],"license":"MIT"},"lib/permit2/src/interfaces/IAllowanceTransfer.sol":{"keccak256":"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29","urls":["bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0","dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN"],"license":"MIT"},"lib/permit2/src/interfaces/IEIP712.sol":{"keccak256":"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138","urls":["bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72","dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/hooks/VeBALFeeDiscountHookExample.sol","id":2968,"exportedSymbols":{"BaseHooks":[12152],"HookFlags":[6452],"IBasePoolFactory":[3733],"IERC20":[52306],"IHooks":[4087],"IRouterCommon":[4959],"IVault":[5028],"LiquidityManagement":[6405],"PoolSwapParams":[6597],"TokenConfig":[6519],"VaultGuard":[12307],"VeBALFeeDiscountHookExample":[2967]},"nodeType":"SourceUnit","src":"46:3946:9","nodes":[{"id":2784,"nodeType":"PragmaDirective","src":"46:24:9","nodes":[],"literals":["solidity","^","0.8",".24"]},{"id":2786,"nodeType":"ImportDirective","src":"72:72:9","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","nameLocation":"-1:-1:-1","scope":2968,"sourceUnit":52307,"symbolAliases":[{"foreign":{"id":2785,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52306,"src":"81:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2788,"nodeType":"ImportDirective","src":"146:101:9","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/IBasePoolFactory.sol","nameLocation":"-1:-1:-1","scope":2968,"sourceUnit":3734,"symbolAliases":[{"foreign":{"id":2787,"name":"IBasePoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"155:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2790,"nodeType":"ImportDirective","src":"248:81:9","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IHooks.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/IHooks.sol","nameLocation":"-1:-1:-1","scope":2968,"sourceUnit":4088,"symbolAliases":[{"foreign":{"id":2789,"name":"IHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"257:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2792,"nodeType":"ImportDirective","src":"330:95:9","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IRouterCommon.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/IRouterCommon.sol","nameLocation":"-1:-1:-1","scope":2968,"sourceUnit":4960,"symbolAliases":[{"foreign":{"id":2791,"name":"IRouterCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"339:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2794,"nodeType":"ImportDirective","src":"426:81:9","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/IVault.sol","nameLocation":"-1:-1:-1","scope":2968,"sourceUnit":5029,"symbolAliases":[{"foreign":{"id":2793,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"435:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2799,"nodeType":"ImportDirective","src":"508:154:9","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/VaultTypes.sol","file":"@balancer-labs/v3-interfaces/contracts/vault/VaultTypes.sol","nameLocation":"-1:-1:-1","scope":2968,"sourceUnit":6697,"symbolAliases":[{"foreign":{"id":2795,"name":"LiquidityManagement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"521:19:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2796,"name":"TokenConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"546:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2797,"name":"PoolSwapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"563:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2798,"name":"HookFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"583:9:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2801,"nodeType":"ImportDirective","src":"664:78:9","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/vault/contracts/VaultGuard.sol","file":"@balancer-labs/v3-vault/contracts/VaultGuard.sol","nameLocation":"-1:-1:-1","scope":2968,"sourceUnit":12308,"symbolAliases":[{"foreign":{"id":2800,"name":"VaultGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12307,"src":"673:10:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2803,"nodeType":"ImportDirective","src":"743:76:9","nodes":[],"absolutePath":"lib/balancer-v3-monorepo/pkg/vault/contracts/BaseHooks.sol","file":"@balancer-labs/v3-vault/contracts/BaseHooks.sol","nameLocation":"-1:-1:-1","scope":2968,"sourceUnit":12153,"symbolAliases":[{"foreign":{"id":2802,"name":"BaseHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12152,"src":"752:9:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2967,"nodeType":"ContractDefinition","src":"970:3021:9","nodes":[{"id":2810,"nodeType":"VariableDeclaration","src":"1120:41:9","nodes":[],"constant":false,"mutability":"immutable","name":"_allowedFactory","nameLocation":"1146:15:9","scope":2967,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2809,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":2812,"nodeType":"VariableDeclaration","src":"1324:40:9","nodes":[],"constant":false,"mutability":"immutable","name":"_trustedRouter","nameLocation":"1350:14:9","scope":2967,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":2815,"nodeType":"VariableDeclaration","src":"1446:31:9","nodes":[],"constant":false,"mutability":"immutable","name":"_veBAL","nameLocation":"1471:6:9","scope":2967,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"},"typeName":{"id":2814,"nodeType":"UserDefinedTypeName","pathNode":{"id":2813,"name":"IERC20","nameLocations":["1446:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":52306,"src":"1446:6:9"},"referencedDeclaration":52306,"src":"1446:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"visibility":"private"},{"id":2824,"nodeType":"EventDefinition","src":"1873:152:9","nodes":[],"anonymous":false,"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"1484:384:9","text":" @notice A new `VeBALFeeDiscountHookExample` contract has been registered successfully.\n @dev If the registration fails the call will revert, so there will be no event.\n @param hooksContract This contract\n @param factory The factory (must be the allowed factory, or the call will revert)\n @param pool The pool on which the hook was registered"},"eventSelector":"a8ab37b72b2944e381076dcbdf6f9b0d340c59a4f1492552e7361ef53dc873dc","name":"VeBALFeeDiscountHookExampleRegistered","nameLocation":"1879:37:9","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"indexed":true,"mutability":"mutable","name":"hooksContract","nameLocation":"1942:13:9","nodeType":"VariableDeclaration","scope":2824,"src":"1926:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2820,"indexed":true,"mutability":"mutable","name":"factory","nameLocation":"1981:7:9","nodeType":"VariableDeclaration","scope":2824,"src":"1965:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"1965:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2822,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2014:4:9","nodeType":"VariableDeclaration","scope":2824,"src":"1998:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"1998:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1916:108:9"}},{"id":2854,"nodeType":"FunctionDefinition","src":"2031:227:9","nodes":[],"body":{"id":2853,"nodeType":"Block","src":"2137:121:9","nodes":[],"statements":[{"expression":{"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2839,"name":"_allowedFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2147:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2840,"name":"allowedFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2165:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2147:32:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2842,"nodeType":"ExpressionStatement","src":"2147:32:9"},{"expression":{"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2843,"name":"_trustedRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"2189:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2844,"name":"trustedRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2206:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2189:30:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2846,"nodeType":"ExpressionStatement","src":"2189:30:9"},{"expression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2847,"name":"_veBAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2229:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2849,"name":"veBAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"2245:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2848,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52306,"src":"2238:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$52306_$","typeString":"type(contract IERC20)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"src":"2229:22:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"id":2852,"nodeType":"ExpressionStatement","src":"2229:22:9"}]},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2836,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"2130:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5028","typeString":"contract IVault"}}],"id":2837,"kind":"baseConstructorSpecifier","modifierName":{"id":2835,"name":"VaultGuard","nameLocations":["2119:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":12307,"src":"2119:10:9"},"nodeType":"ModifierInvocation","src":"2119:17:9"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"vault","nameLocation":"2050:5:9","nodeType":"VariableDeclaration","scope":2854,"src":"2043:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5028","typeString":"contract IVault"},"typeName":{"id":2826,"nodeType":"UserDefinedTypeName","pathNode":{"id":2825,"name":"IVault","nameLocations":["2043:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":5028,"src":"2043:6:9"},"referencedDeclaration":5028,"src":"2043:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5028","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"allowedFactory","nameLocation":"2065:14:9","nodeType":"VariableDeclaration","scope":2854,"src":"2057:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"veBAL","nameLocation":"2089:5:9","nodeType":"VariableDeclaration","scope":2854,"src":"2081:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"2081:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"trustedRouter","nameLocation":"2104:13:9","nodeType":"VariableDeclaration","scope":2854,"src":"2096:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"2096:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2042:76:9"},"returnParameters":{"id":2838,"nodeType":"ParameterList","parameters":[],"src":"2137:0:9"},"scope":2967,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":2869,"nodeType":"FunctionDefinition","src":"2291:147:9","nodes":[],"body":{"id":2868,"nodeType":"Block","src":"2373:65:9","nodes":[],"statements":[{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2862,"name":"hookFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"2383:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_memory_ptr","typeString":"struct HookFlags memory"}},"id":2864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2393:31:9","memberName":"shouldCallComputeDynamicSwapFee","nodeType":"MemberAccess","referencedDeclaration":6439,"src":"2383:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2427:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2383:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2867,"nodeType":"ExpressionStatement","src":"2383:48:9"}]},"baseFunctions":[11951],"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"2264:22:9","text":"@inheritdoc IHooks"},"functionSelector":"d77153a7","implemented":true,"kind":"function","modifiers":[],"name":"getHookFlags","nameLocation":"2300:12:9","overrides":{"id":2857,"nodeType":"OverrideSpecifier","overrides":[],"src":"2327:8:9"},"parameters":{"id":2856,"nodeType":"ParameterList","parameters":[],"src":"2312:2:9"},"returnParameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"hookFlags","nameLocation":"2362:9:9","nodeType":"VariableDeclaration","scope":2869,"src":"2345:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_memory_ptr","typeString":"struct HookFlags"},"typeName":{"id":2859,"nodeType":"UserDefinedTypeName","pathNode":{"id":2858,"name":"HookFlags","nameLocations":["2345:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":6452,"src":"2345:9:9"},"referencedDeclaration":6452,"src":"2345:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$6452_storage_ptr","typeString":"struct HookFlags"}},"visibility":"internal"}],"src":"2344:28:9"},"scope":2967,"stateMutability":"pure","virtual":false,"visibility":"public"},{"id":2910,"nodeType":"FunctionDefinition","src":"2471:733:9","nodes":[],"body":{"id":2909,"nodeType":"Block","src":"2653:551:9","nodes":[],"statements":[{"eventCall":{"arguments":[{"arguments":[{"id":2892,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3079:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_VeBALFeeDiscountHookExample_$2967","typeString":"contract VeBALFeeDiscountHookExample"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VeBALFeeDiscountHookExample_$2967","typeString":"contract VeBALFeeDiscountHookExample"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3071:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"3071:7:9","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3071:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2894,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"3086:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2895,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"3095:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2889,"name":"VeBALFeeDiscountHookExampleRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"3033:37:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3033:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2897,"nodeType":"EmitStatement","src":"3028:72:9"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"3118:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2899,"name":"_allowedFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"3129:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3118:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":2905,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"3192:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2902,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"3165:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2901,"name":"IBasePoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3148:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBasePoolFactory_$3733_$","typeString":"type(contract IBasePoolFactory)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBasePoolFactory_$3733","typeString":"contract IBasePoolFactory"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:17:9","memberName":"isPoolFromFactory","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"3148:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3118:79:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2888,"id":2908,"nodeType":"Return","src":"3111:86:9"}]},"baseFunctions":[11944],"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"2444:22:9","text":"@inheritdoc IHooks"},"functionSelector":"0b89f182","implemented":true,"kind":"function","modifiers":[{"id":2885,"kind":"modifierInvocation","modifierName":{"id":2884,"name":"onlyVault","nameLocations":["2628:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":12286,"src":"2628:9:9"},"nodeType":"ModifierInvocation","src":"2628:9:9"}],"name":"onRegister","nameLocation":"2480:10:9","overrides":{"id":2883,"nodeType":"OverrideSpecifier","overrides":[],"src":"2619:8:9"},"parameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"factory","nameLocation":"2508:7:9","nodeType":"VariableDeclaration","scope":2910,"src":"2500:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2871,"name":"address","nodeType":"ElementaryTypeName","src":"2500:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"pool","nameLocation":"2533:4:9","nodeType":"VariableDeclaration","scope":2910,"src":"2525:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2910,"src":"2547:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$6519_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenConfig[]"},"typeName":{"baseType":{"id":2876,"nodeType":"UserDefinedTypeName","pathNode":{"id":2875,"name":"TokenConfig","nameLocations":["2547:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":6519,"src":"2547:11:9"},"referencedDeclaration":6519,"src":"2547:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfig_$6519_storage_ptr","typeString":"struct TokenConfig"}},"id":2877,"nodeType":"ArrayTypeName","src":"2547:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$6519_storage_$dyn_storage_ptr","typeString":"struct TokenConfig[]"}},"visibility":"internal"},{"constant":false,"id":2881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2910,"src":"2577:28:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$6405_calldata_ptr","typeString":"struct LiquidityManagement"},"typeName":{"id":2880,"nodeType":"UserDefinedTypeName","pathNode":{"id":2879,"name":"LiquidityManagement","nameLocations":["2577:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":6405,"src":"2577:19:9"},"referencedDeclaration":6405,"src":"2577:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$6405_storage_ptr","typeString":"struct LiquidityManagement"}},"visibility":"internal"}],"src":"2490:121:9"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2910,"src":"2647:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2886,"name":"bool","nodeType":"ElementaryTypeName","src":"2647:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2646:6:9"},"scope":2967,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":2966,"nodeType":"FunctionDefinition","src":"3237:752:9","nodes":[],"body":{"id":2965,"nodeType":"Block","src":"3439:550:9","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2928,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"3592:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$6597_calldata_ptr","typeString":"struct PoolSwapParams calldata"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3599:6:9","memberName":"router","nodeType":"MemberAccess","referencedDeclaration":6594,"src":"3592:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2930,"name":"_trustedRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"3609:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3592:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2937,"nodeType":"IfStatement","src":"3588:100:9","trueBody":{"id":2936,"nodeType":"Block","src":"3625:63:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3647:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2933,"name":"staticSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"3653:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3646:31:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2927,"id":2935,"nodeType":"Return","src":"3639:38:9"}]}},{"assignments":[2939],"declarations":[{"constant":false,"id":2939,"mutability":"mutable","name":"user","nameLocation":"3706:4:9","nodeType":"VariableDeclaration","scope":2965,"src":"3698:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2938,"name":"address","nodeType":"ElementaryTypeName","src":"3698:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2946,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":2941,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"3727:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$6597_calldata_ptr","typeString":"struct PoolSwapParams calldata"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3734:6:9","memberName":"router","nodeType":"MemberAccess","referencedDeclaration":6594,"src":"3727:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2940,"name":"IRouterCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"3713:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRouterCommon_$4959_$","typeString":"type(contract IRouterCommon)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRouterCommon_$4959","typeString":"contract IRouterCommon"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3742:9:9","memberName":"getSender","nodeType":"MemberAccess","referencedDeclaration":4913,"src":"3713:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3698:55:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2949,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3856:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2947,"name":"_veBAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"3839:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$52306","typeString":"contract IERC20"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3846:9:9","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":52263,"src":"3839:16:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3864:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3839:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2960,"nodeType":"IfStatement","src":"3835:99:9","trueBody":{"id":2959,"nodeType":"Block","src":"3867:67:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3889:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"staticSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"3895:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3895:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3888:35:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2927,"id":2958,"nodeType":"Return","src":"3881:42:9"}]}},{"expression":{"components":[{"hexValue":"74727565","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3952:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2962,"name":"staticSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"3958:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3951:31:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2927,"id":2964,"nodeType":"Return","src":"3944:38:9"}]},"baseFunctions":[12151],"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"3210:22:9","text":"@inheritdoc IHooks"},"functionSelector":"a0e8f5ac","implemented":true,"kind":"function","modifiers":[{"id":2922,"kind":"modifierInvocation","modifierName":{"id":2921,"name":"onlyVault","nameLocations":["3405:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":12286,"src":"3405:9:9"},"nodeType":"ModifierInvocation","src":"3405:9:9"}],"name":"onComputeDynamicSwapFeePercentage","nameLocation":"3246:33:9","overrides":{"id":2920,"nodeType":"OverrideSpecifier","overrides":[],"src":"3396:8:9"},"parameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"params","nameLocation":"3313:6:9","nodeType":"VariableDeclaration","scope":2966,"src":"3289:30:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$6597_calldata_ptr","typeString":"struct PoolSwapParams"},"typeName":{"id":2913,"nodeType":"UserDefinedTypeName","pathNode":{"id":2912,"name":"PoolSwapParams","nameLocations":["3289:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":6597,"src":"3289:14:9"},"referencedDeclaration":6597,"src":"3289:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$6597_storage_ptr","typeString":"struct PoolSwapParams"}},"visibility":"internal"},{"constant":false,"id":2916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"3329:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"staticSwapFeePercentage","nameLocation":"3354:23:9","nodeType":"VariableDeclaration","scope":2966,"src":"3346:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3346:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3279:104:9"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"3424:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"3424:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"3430:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"3430:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3423:15:9"},"scope":2967,"stateMutability":"view","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[{"baseName":{"id":2805,"name":"BaseHooks","nameLocations":["1010:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":12152,"src":"1010:9:9"},"id":2806,"nodeType":"InheritanceSpecifier","src":"1010:9:9"},{"baseName":{"id":2807,"name":"VaultGuard","nameLocations":["1021:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":12307,"src":"1021:10:9"},"id":2808,"nodeType":"InheritanceSpecifier","src":"1021:10:9"}],"canonicalName":"VeBALFeeDiscountHookExample","contractDependencies":[],"contractKind":"contract","documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"821:148:9","text":" @notice Hook that gives a swap fee discount to veBAL holders.\n @dev Uses the dynamic fee mechanism to give a 50% discount on swap fees."},"fullyImplemented":true,"linearizedBaseContracts":[2967,12307,12152,4087],"name":"VeBALFeeDiscountHookExample","nameLocation":"979:27:9","scope":2968,"usedErrors":[5533],"usedEvents":[2824]}],"license":"GPL-3.0-or-later"},"id":9}