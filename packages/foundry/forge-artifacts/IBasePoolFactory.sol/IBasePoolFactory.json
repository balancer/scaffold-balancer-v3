{"abi":[{"type":"function","name":"disable","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getActionId","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getDeploymentAddress","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isDisabled","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPoolFromFactory","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"FactoryDisabled","inputs":[],"anonymous":false},{"type":"event","name":"PoolCreated","inputs":[{"name":"pool","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"Disabled","inputs":[]},{"type":"error","name":"SenderNotAllowed","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"disable()":"2f2770db","getActionId(bytes4)":"851c1bb3","getDeploymentAddress(bytes32)":"337d4010","isDisabled()":"6c57f5a9","isPoolFromFactory(address)":"6634b753"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Disabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"FactoryDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"getDeploymentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolFromFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"All pool factories should be derived from `BasePoolFactory` to enable common behavior for all pool types (e.g., address prediction, tracking deployed pools, and governance-facilitated migration).\",\"events\":{\"PoolCreated(address)\":{\"params\":{\"pool\":\"The address of the new pool\"}}},\"kind\":\"dev\",\"methods\":{\"disable()\":{\"details\":\"Existing pools are unaffected. Once a factory is disabled, it cannot be re-enabled.\"},\"getActionId(bytes4)\":{\"params\":{\"selector\":\"The 4-byte selector of the permissioned function\"},\"returns\":{\"_0\":\"actionId The computed actionId\"}},\"getDeploymentAddress(bytes32)\":{\"params\":{\"salt\":\"The salt used to deploy the pool\"},\"returns\":{\"_0\":\"deploymentAddress The predicted address of the pool, given the salt\"}},\"isDisabled()\":{\"returns\":{\"_0\":\"success True if this factory was disabled\"}},\"isPoolFromFactory(address)\":{\"params\":{\"pool\":\"The pool to check\"},\"returns\":{\"_0\":\"success True if `pool` was created by this factory\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"Disabled()\":[{\"notice\":\"Attempted pool creation after the factory was disabled.\"}],\"SenderNotAllowed()\":[{\"notice\":\"The sender does not have permission to call a function.\"}]},\"events\":{\"FactoryDisabled()\":{\"notice\":\"The factory was disabled by governance.\"},\"PoolCreated(address)\":{\"notice\":\"A pool was deployed.\"}},\"kind\":\"user\",\"methods\":{\"disable()\":{\"notice\":\"Disable the factory, preventing the creation of more pools.\"},\"getActionId(bytes4)\":{\"notice\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getDeploymentAddress(bytes32)\":{\"notice\":\"Return the address where a new pool will be deployed, based on the factory address and salt.\"},\"isDisabled()\":{\"notice\":\"Check whether this factory has been disabled by governance.\"},\"isPoolFromFactory(address)\":{\"notice\":\"Check whether a pool was deployed by this factory.\"}},\"notice\":\"Base interface for a Balancer Pool Factory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol\":\"IBasePoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[\":@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/\",\":@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/\",\":@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/\",\":@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@test/=lib/balancer-v3-monorepo/pkg/\",\":ds-test/=../../node_modules/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":permit2/=lib/permit2/\",\":pool-weighted/=../pool-weighted/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-utils/=../solidity-utils/\",\":vault/=../vault/\"]},\"sources\":{\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87\",\"dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo\"]},\"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol\":{\"keccak256\":\"0x4c013d3d3f618620a7e1683919f0655ac9abc121274087212d6c3e1a3fd3a2a4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1250e0af94d1ffa96d82ae032592f0058898546b159ed2f00833a263e02f5a6b\",\"dweb:/ipfs/QmcS3nY3ojj8km2k9VrREYWX7vWQtBLDscpehAdQFWjhJ4\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"Disabled"},{"inputs":[],"type":"error","name":"SenderNotAllowed"},{"inputs":[],"type":"event","name":"FactoryDisabled","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":true}],"type":"event","name":"PoolCreated","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"disable"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"view","type":"function","name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getDeploymentAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isDisabled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"isPoolFromFactory","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"disable()":{"details":"Existing pools are unaffected. Once a factory is disabled, it cannot be re-enabled."},"getActionId(bytes4)":{"params":{"selector":"The 4-byte selector of the permissioned function"},"returns":{"_0":"actionId The computed actionId"}},"getDeploymentAddress(bytes32)":{"params":{"salt":"The salt used to deploy the pool"},"returns":{"_0":"deploymentAddress The predicted address of the pool, given the salt"}},"isDisabled()":{"returns":{"_0":"success True if this factory was disabled"}},"isPoolFromFactory(address)":{"params":{"pool":"The pool to check"},"returns":{"_0":"success True if `pool` was created by this factory"}}},"version":1},"userdoc":{"kind":"user","methods":{"disable()":{"notice":"Disable the factory, preventing the creation of more pools."},"getActionId(bytes4)":{"notice":"Returns the action identifier associated with the external function described by `selector`."},"getDeploymentAddress(bytes32)":{"notice":"Return the address where a new pool will be deployed, based on the factory address and salt."},"isDisabled()":{"notice":"Check whether this factory has been disabled by governance."},"isPoolFromFactory(address)":{"notice":"Check whether a pool was deployed by this factory."}},"version":1}},"settings":{"remappings":["@balancer-labs/v3-interfaces/=lib/balancer-v3-monorepo/pkg/interfaces/","@balancer-labs/v3-pool-utils/=lib/balancer-v3-monorepo/pkg/pool-utils/","@balancer-labs/v3-pool-weighted/=lib/balancer-v3-monorepo/pkg/pool-weighted/","@balancer-labs/v3-solidity-utils/=lib/balancer-v3-monorepo/pkg/solidity-utils/","@balancer-labs/v3-vault/=lib/balancer-v3-monorepo/pkg/vault/","@openzeppelin/=lib/openzeppelin-contracts/","@test/=lib/balancer-v3-monorepo/pkg/","ds-test/=../../node_modules/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","permit2/=lib/permit2/","pool-weighted/=../pool-weighted/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-utils/=../solidity-utils/","vault/=../vault/"],"optimizer":{"enabled":true,"runs":999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol":"IBasePoolFactory"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/balancer-v3-monorepo/pkg/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"keccak256":"0x3c4c0cf4d69eec7f6ad108391607be00f1f7ef9867eb7ba03738d61d052c2ed2","urls":["bzz-raw://023b1414a8ef990cfcc3af005f540c70539b0107feb2103d0c2f70ccdad41a87","dweb:/ipfs/QmdJuumhraGU5Vjs9QZDATSV4VXEoPdmH6nuM7aNxgmRQo"],"license":"GPL-3.0-or-later"},"lib/balancer-v3-monorepo/pkg/interfaces/contracts/vault/IBasePoolFactory.sol":{"keccak256":"0x4c013d3d3f618620a7e1683919f0655ac9abc121274087212d6c3e1a3fd3a2a4","urls":["bzz-raw://1250e0af94d1ffa96d82ae032592f0058898546b159ed2f00833a263e02f5a6b","dweb:/ipfs/QmcS3nY3ojj8km2k9VrREYWX7vWQtBLDscpehAdQFWjhJ4"],"license":"GPL-3.0-or-later"}},"version":1},"id":23}