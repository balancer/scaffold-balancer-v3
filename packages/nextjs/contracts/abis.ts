/**
 * @notice Grabbed the Pool abi from `foundry/out/ConstantProductPool.sol`
 * @notice The Vault abi is actually the `VaultExtension` abi
 */
export const abis = {
  balancer: {
    Pool: [
      {
        type: "constructor",
        inputs: [
          { name: "vault", type: "address", internalType: "contract IVault" },
          { name: "name", type: "string", internalType: "string" },
          { name: "symbol", type: "string", internalType: "string" },
        ],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "DOMAIN_SEPARATOR",
        inputs: [],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "PERMIT_TYPEHASH",
        inputs: [],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "allowance",
        inputs: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "spender", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "approve",
        inputs: [
          { name: "spender", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "balanceOf",
        inputs: [{ name: "account", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "computeBalance",
        inputs: [
          { name: "balancesLiveScaled18", type: "uint256[]", internalType: "uint256[]" },
          { name: "tokenInIndex", type: "uint256", internalType: "uint256" },
          { name: "invariantRatio", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "newBalance", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "computeInvariant",
        inputs: [{ name: "balancesLiveScaled18", type: "uint256[]", internalType: "uint256[]" }],
        outputs: [{ name: "invariant", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "decimals",
        inputs: [],
        outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "eip712Domain",
        inputs: [],
        outputs: [
          { name: "fields", type: "bytes1", internalType: "bytes1" },
          { name: "name", type: "string", internalType: "string" },
          { name: "version", type: "string", internalType: "string" },
          { name: "chainId", type: "uint256", internalType: "uint256" },
          { name: "verifyingContract", type: "address", internalType: "address" },
          { name: "salt", type: "bytes32", internalType: "bytes32" },
          { name: "extensions", type: "uint256[]", internalType: "uint256[]" },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "emitApproval",
        inputs: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "spender", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "emitTransfer",
        inputs: [
          { name: "from", type: "address", internalType: "address" },
          { name: "to", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "getMaximumInvariantRatio",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "getMaximumSwapFeePercentage",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "getMinimumInvariantRatio",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "getMinimumSwapFeePercentage",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "getRate",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "getVault",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IVault" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "name",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "nonces",
        inputs: [{ name: "owner", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "onSwap",
        inputs: [
          {
            name: "params",
            type: "tuple",
            internalType: "struct PoolSwapParams",
            components: [
              { name: "kind", type: "uint8", internalType: "enum SwapKind" },
              { name: "amountGivenScaled18", type: "uint256", internalType: "uint256" },
              { name: "balancesScaled18", type: "uint256[]", internalType: "uint256[]" },
              { name: "indexIn", type: "uint256", internalType: "uint256" },
              { name: "indexOut", type: "uint256", internalType: "uint256" },
              { name: "router", type: "address", internalType: "address" },
              { name: "userData", type: "bytes", internalType: "bytes" },
            ],
          },
        ],
        outputs: [{ name: "amountCalculatedScaled18", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "permit",
        inputs: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "spender", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          { name: "deadline", type: "uint256", internalType: "uint256" },
          { name: "v", type: "uint8", internalType: "uint8" },
          { name: "r", type: "bytes32", internalType: "bytes32" },
          { name: "s", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "supportsInterface",
        inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "symbol",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "totalSupply",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "transfer",
        inputs: [
          { name: "to", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "transferFrom",
        inputs: [
          { name: "from", type: "address", internalType: "address" },
          { name: "to", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
      },
      {
        type: "event",
        name: "Approval",
        inputs: [
          { name: "owner", type: "address", indexed: true, internalType: "address" },
          { name: "spender", type: "address", indexed: true, internalType: "address" },
          { name: "value", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
      },
      { type: "event", name: "EIP712DomainChanged", inputs: [], anonymous: false },
      {
        type: "event",
        name: "Transfer",
        inputs: [
          { name: "from", type: "address", indexed: true, internalType: "address" },
          { name: "to", type: "address", indexed: true, internalType: "address" },
          { name: "value", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
      },
      { type: "error", name: "ECDSAInvalidSignature", inputs: [] },
      {
        type: "error",
        name: "ECDSAInvalidSignatureLength",
        inputs: [{ name: "length", type: "uint256", internalType: "uint256" }],
      },
      {
        type: "error",
        name: "ECDSAInvalidSignatureS",
        inputs: [{ name: "s", type: "bytes32", internalType: "bytes32" }],
      },
      {
        type: "error",
        name: "ERC2612ExpiredSignature",
        inputs: [{ name: "deadline", type: "uint256", internalType: "uint256" }],
      },
      {
        type: "error",
        name: "ERC2612InvalidSigner",
        inputs: [
          { name: "signer", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
        ],
      },
      {
        type: "error",
        name: "InvalidAccountNonce",
        inputs: [
          { name: "account", type: "address", internalType: "address" },
          { name: "currentNonce", type: "uint256", internalType: "uint256" },
        ],
      },
      { type: "error", name: "InvalidShortString", inputs: [] },
      {
        type: "error",
        name: "SenderIsNotVault",
        inputs: [{ name: "sender", type: "address", internalType: "address" }],
      },
      { type: "error", name: "StringTooLong", inputs: [{ name: "str", type: "string", internalType: "string" }] },
    ],
  },
};

export default abis;
